{"version":3,"sources":["WPTB_IconManager.js"],"names":["assignToGlobal","key","context","factory","self","global","iconManager","IconManager","list","Error","iconList","cachedIcons","prepareIcon","iconSvgString","extraClass","stringifiedVersion","iconWrapper","document","createElement","Array","isArray","map","eClass","classList","add","innerHTML","outerHTML","getCachedIcon","iconName","getStringifiedVersion","addToCache","stringifiedIcon","getIconList","getIcon","Promise","res","rej","cachedIcon","fetch","then","resp","ok","text","iconString","error","catch","err","getIconUrl","iconUrl","wptb_admin_object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+C;EAC/C;EACAD,OAAO,CAACD,GAAD,CAAP,GAAeE,OAAO,EAAtB,CAF+C,CAG/C;AACA,CAJD,EAIG,kBAJH,EAIuBC,IAAI,IAAIC,MAJ/B,EAIuC,SAASC,WAAT,GAAuB;EAC7D;AACD;AACA;AACA;AACA;AACA;EACC,SAASC,WAAT,CAAqBC,IAArB,EAA2B;IAC1B,IAAI,CAACA,IAAL,EAAW;MACV,MAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;IACA;;IACD,IAAMC,QAAQ,GAAGF,IAAjB;IAEA;AACF;AACA;AACA;AACA;;IACE,IAAMG,WAAW,GAAG,EAApB;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;IACE,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,aAAD,EAAkE;MAAA,IAAlDC,UAAkD,uEAArC,IAAqC;MAAA,IAA/BC,kBAA+B,uEAAV,KAAU;MACrF,IAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB,CADqF,CAGrF;;MACA,IAAIJ,UAAJ,EAAgB;QACf,IAAI,CAACK,KAAK,CAACC,OAAN,CAAcN,UAAd,CAAL,EAAgC;UAC/B;UACAA,UAAU,GAAG,CAACA,UAAD,CAAb;QACA,CAJc,CAMf;;;QACAA,UAAU,CAACO,GAAX,CAAe,UAACC,MAAD,EAAY;UAC1BN,WAAW,CAACO,SAAZ,CAAsBC,GAAtB,CAA0BF,MAA1B;QACA,CAFD;MAGA;;MAEDN,WAAW,CAACS,SAAZ,GAAwBZ,aAAxB;MAEA,OAAOE,kBAAkB,GAAGC,WAAW,CAACU,SAAf,GAA2BV,WAApD;IACA,CAnBD;IAqBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;IACE,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAgE;MAAA,IAArDd,UAAqD,uEAAxC,IAAwC;MAAA,IAAlCe,qBAAkC,uEAAV,KAAU;;MACrF,IAAIlB,WAAW,CAACiB,QAAD,CAAf,EAA2B;QAC1B,OAAOhB,WAAW,CAACD,WAAW,CAACiB,QAAD,CAAZ,EAAwBd,UAAxB,EAAoCe,qBAApC,CAAlB;MACA;;MACD,OAAO,IAAP;IACA,CALD;IAOA;AACF;AACA;AACA;AACA;AACA;;;IACE,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACF,QAAD,EAAWG,eAAX,EAA+B;MACjDpB,WAAW,CAACiB,QAAD,CAAX,GAAwBG,eAAxB;IACA,CAFD;IAIA;AACF;AACA;AACA;AACA;;;IACE,KAAKC,WAAL,GAAmB,YAAM;MACxB,OAAOtB,QAAP;IACA,CAFD;IAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACE,KAAKuB,OAAL,GAAe,UAACL,QAAD,EAAgE;MAAA,IAArDd,UAAqD,uEAAxC,IAAwC;MAAA,IAAlCe,qBAAkC,uEAAV,KAAU;MAC9E;MACA,OAAO,IAAIK,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;QAChC;QACA,IAAMC,UAAU,GAAGV,aAAa,CAACC,QAAD,EAAWd,UAAX,EAAuBe,qBAAvB,CAAhC;;QACA,IAAIQ,UAAJ,EAAgB;UACf,OAAOF,GAAG,CAACE,UAAD,CAAV;QACA;;QAED,IAAI3B,QAAQ,CAACkB,QAAD,CAAZ,EAAwB;UACvB,OAAOU,KAAK,CAAC5B,QAAQ,CAACkB,QAAD,CAAT,CAAL,CACLW,IADK,CACA,UAACC,IAAD,EAAU;YACf,IAAIA,IAAI,CAACC,EAAT,EAAa;cACZ,OAAOD,IAAI,CAACE,IAAL,EAAP;YACA;;YACD,MAAM,IAAIjC,KAAJ,kDAAoDmB,QAApD,OAAN;UACA,CANK,EAOLW,IAPK,CAOA,UAACI,UAAD,EAAgB;YACrB,IAAIA,UAAU,CAACC,KAAf,EAAsB;cACrB,MAAM,IAAInC,KAAJ,kDAAoDmB,QAApD,OAAN;YACA,CAHoB,CAKrB;;;YACAE,UAAU,CAACF,QAAD,EAAWe,UAAX,CAAV;YAEA,OAAOR,GAAG,CAACvB,WAAW,CAAC+B,UAAD,EAAa7B,UAAb,EAAyBe,qBAAzB,CAAZ,CAAV;UACA,CAhBK,EAiBLgB,KAjBK,CAiBC,UAACC,GAAD,EAAS;YACf,OAAOV,GAAG,CAAC,IAAI3B,KAAJ,CAAUqC,GAAV,CAAD,CAAV;UACA,CAnBK,CAAP;QAoBA;;QACD,OAAOV,GAAG,CAAC,IAAI3B,KAAJ,iDAAmDmB,QAAnD,OAAD,CAAV;MACA,CA9BM,CAAP;IA+BA,CAjCD;;IAkCA,KAAKmB,UAAL,GAAkB,UAACnB,QAAD,EAAc;MAC/B,IAAIoB,OAAO,GAAG,IAAd;;MAEA,IAAItC,QAAQ,CAACkB,QAAD,CAAZ,EAAwB;QACvBoB,OAAO,GAAGtC,QAAQ,CAACkB,QAAD,CAAlB;MACA;;MAED,OAAOoB,OAAP;IACA,CARD;EASA,CAxI4D,CA0I7D;;;EACA,IAAM9C,OAAO,GAAGE,IAAI,IAAIC,MAAxB;;EACA,IAAIH,OAAO,CAAC+C,iBAAZ,EAA+B;IAC9B,OAAO,IAAI1C,WAAJ,CAAgB0C,iBAAiB,CAAC3C,WAAlC,CAAP;EACA;;EAED,OAAO,IAAP;AACA,CArJD","file":"WPTB_IconManager.js","sourceRoot":"core/rollup-source","sourcesContent":["/**\n * Assign icon manager to global space.\n *\n * @param {string} key global key\n * @param {Object} context global context\n * @param {Function} factory factory function\n */\n(function assignToGlobal(key, context, factory) {\n\t// eslint-disable-next-line no-param-reassign\n\tcontext[key] = factory();\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_IconManager', self || global, function iconManager() {\n\t/**\n\t * Frontend icon manager for WPTB builder.\n\t *\n\t * @param {Object} list all icon list\n\t * @class\n\t */\n\tfunction IconManager(list) {\n\t\tif (!list) {\n\t\t\tthrow new Error('no icon list is defined for WPTB_IconManager instance');\n\t\t}\n\t\tconst iconList = list;\n\n\t\t/**\n\t\t * Cached icons.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tconst cachedIcons = {};\n\n\t\t/**\n\t\t * Prepare an icon with a wrapper.\n\t\t *\n\t\t * @param {string} iconSvgString string representation of icon\n\t\t * @param {Array | string | null} extraClass name of extra class[es] to apply to icon wrapper\n\t\t * @param {boolean} stringifiedVersion get stringified html version of icon\n\t\t * @return {HTMLDivElement} created icon wrapper\n\t\t */\n\t\tconst prepareIcon = (iconSvgString, extraClass = null, stringifiedVersion = false) => {\n\t\t\tconst iconWrapper = document.createElement('div');\n\n\t\t\t// if an extra class is defined, add it to icon wrapper\n\t\t\tif (extraClass) {\n\t\t\t\tif (!Array.isArray(extraClass)) {\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\textraClass = [extraClass];\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\textraClass.map((eClass) => {\n\t\t\t\t\ticonWrapper.classList.add(eClass);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ticonWrapper.innerHTML = iconSvgString;\n\n\t\t\treturn stringifiedVersion ? iconWrapper.outerHTML : iconWrapper;\n\t\t};\n\n\t\t/**\n\t\t * Get a cached icon.\n\t\t *\n\t\t * @param {string} iconName name of the icon\n\t\t * @param {string | Array | null} extraClass extra class name[s] to add to icon wrapper\n\t\t * @param {boolean | null} getStringifiedVersion get stringified version of the icon\n\t\t * @return {null | Element} Prepared cached icon or null if no cached version is found\n\t\t */\n\t\tconst getCachedIcon = (iconName, extraClass = null, getStringifiedVersion = false) => {\n\t\t\tif (cachedIcons[iconName]) {\n\t\t\t\treturn prepareIcon(cachedIcons[iconName], extraClass, getStringifiedVersion);\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Add an icon to cache.\n\t\t *\n\t\t * @param {string} iconName name of the icon to be stored\n\t\t * @param {string} stringifiedIcon stringified version of the icon\n\t\t */\n\t\tconst addToCache = (iconName, stringifiedIcon) => {\n\t\t\tcachedIcons[iconName] = stringifiedIcon;\n\t\t};\n\n\t\t/**\n\t\t * Get a list of all available icons.\n\t\t *\n\t\t * @return {Object} icon list\n\t\t */\n\t\tthis.getIconList = () => {\n\t\t\treturn iconList;\n\t\t};\n\n\t\t/**\n\t\t * Get an icon.\n\t\t *\n\t\t * Icons sent with this function are wrapped with a 'div' element.\n\t\t *\n\t\t * @param {string} iconName name of the icon\n\t\t * @param {string | Array | null} extraClass extra class[es] to add to icon wrapper\n\t\t * @param {boolean} getStringifiedVersion get stringified version of icon\n\t\t * @return {Promise<void>} a Promise that will be resolved when icon is fetched from server\n\t\t */\n\t\tthis.getIcon = (iconName, extraClass = null, getStringifiedVersion = false) => {\n\t\t\t// eslint-disable-next-line consistent-return\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t// if cached version is found, return that version\n\t\t\t\tconst cachedIcon = getCachedIcon(iconName, extraClass, getStringifiedVersion);\n\t\t\t\tif (cachedIcon) {\n\t\t\t\t\treturn res(cachedIcon);\n\t\t\t\t}\n\n\t\t\t\tif (iconList[iconName]) {\n\t\t\t\t\treturn fetch(iconList[iconName])\n\t\t\t\t\t\t.then((resp) => {\n\t\t\t\t\t\t\tif (resp.ok) {\n\t\t\t\t\t\t\t\treturn resp.text();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new Error(`an error occurred while fetching icon [${iconName}]`);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((iconString) => {\n\t\t\t\t\t\t\tif (iconString.error) {\n\t\t\t\t\t\t\t\tthrow new Error(`an error occurred while fetching icon [${iconName}]`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// add icon to cache\n\t\t\t\t\t\t\taddToCache(iconName, iconString);\n\n\t\t\t\t\t\t\treturn res(prepareIcon(iconString, extraClass, getStringifiedVersion));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\treturn rej(new Error(err));\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn rej(new Error(`no icon found with the given name of [${iconName}]`));\n\t\t\t});\n\t\t};\n\t\tthis.getIconUrl = (iconName) => {\n\t\t\tlet iconUrl = null;\n\n\t\t\tif (iconList[iconName]) {\n\t\t\t\ticonUrl = iconList[iconName];\n\t\t\t}\n\n\t\t\treturn iconUrl;\n\t\t};\n\t}\n\n\t// eslint-disable-next-line no-restricted-globals\n\tconst context = self || global;\n\tif (context.wptb_admin_object) {\n\t\treturn new IconManager(wptb_admin_object.iconManager);\n\t}\n\n\treturn null;\n});\n"]}