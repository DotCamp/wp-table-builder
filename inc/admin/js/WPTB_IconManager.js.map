{"version":3,"sources":["WPTB_IconManager.js"],"names":["assignToGlobal","key","context","factory","self","global","iconManager","IconManager","list","Error","iconList","cachedIcons","prepareIcon","iconSvgString","extraClass","iconWrapper","document","createElement","classList","add","innerHTML","getCachedIcon","iconName","getStringifiedVersion","addToCache","stringifiedIcon","getIconList","getIcon","Promise","res","rej","cachedIcon","fetch","then","resp","ok","text","iconString","error","catch","err","getIconUrl","iconUrl","wptb_admin_object"],"mappings":"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","file":"WPTB_IconManager.js","sourceRoot":"core/rollup-source","sourcesContent":["/**\n * Assign icon manager to global space.\n *\n * @param {string} key global key\n * @param {Object} context global context\n * @param {Function} factory factory function\n */\n(function assignToGlobal(key, context, factory) {\n\t// eslint-disable-next-line no-param-reassign\n\tcontext[key] = factory();\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_IconManager', self || global, function iconManager() {\n\t/**\n\t * Frontend icon manager for WPTB builder.\n\t *\n\t * @param {Object} list all icon list\n\t * @class\n\t */\n\tfunction IconManager(list) {\n\t\tif (!list) {\n\t\t\tthrow new Error('no icon list is defined for WPTB_IconManager instance');\n\t\t}\n\t\tconst iconList = list;\n\n\t\t/**\n\t\t * Cached icons.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tconst cachedIcons = {};\n\n\t\t/**\n\t\t * Prepare an icon with a wrapper.\n\t\t *\n\t\t * @param {string} iconSvgString string representation of icon\n\t\t * @param {string | null} extraClass name of extra class to apply to icon wrapper\n\t\t * @return {HTMLDivElement} created icon wrapper\n\t\t */\n\t\tconst prepareIcon = (iconSvgString, extraClass = null) => {\n\t\t\tconst iconWrapper = document.createElement('div');\n\n\t\t\t// if an extra class is defined, add it to icon wrapper\n\t\t\tif (extraClass) {\n\t\t\t\ticonWrapper.classList.add(extraClass);\n\t\t\t}\n\n\t\t\ticonWrapper.innerHTML = iconSvgString;\n\n\t\t\treturn iconWrapper;\n\t\t};\n\n\t\t/**\n\t\t * Get a cached icon.\n\t\t *\n\t\t * @param {string} iconName name of the icon\n\t\t * @param {string | null} extraClass extra class name to add to icon wrapper\n\t\t * @param {string | null} getStringifiedVersion get stringified version of the icon\n\t\t * @return {null | Element} Prepared cached icon or null if no cached version is found\n\t\t */\n\t\tconst getCachedIcon = (iconName, extraClass = null, getStringifiedVersion = false) => {\n\t\t\tif (cachedIcons[iconName]) {\n\t\t\t\treturn getStringifiedVersion ? cachedIcons[iconName] : prepareIcon(cachedIcons[iconName], extraClass);\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Add an icon to cache.\n\t\t *\n\t\t * @param {string} iconName name of the icon to be stored\n\t\t * @param {string} stringifiedIcon stringified version of the icon\n\t\t */\n\t\tconst addToCache = (iconName, stringifiedIcon) => {\n\t\t\tcachedIcons[iconName] = stringifiedIcon;\n\t\t};\n\n\t\t/**\n\t\t * Get a list of all available icons.\n\t\t *\n\t\t * @return {Object} icon list\n\t\t */\n\t\tthis.getIconList = () => {\n\t\t\treturn iconList;\n\t\t};\n\n\t\t/**\n\t\t * Get an icon.\n\t\t *\n\t\t * Icons sent with this function are wrapped with a 'div' element.\n\t\t *\n\t\t * @param {string} iconName name of the icon\n\t\t * @param {string} extraClass extra class to add to icon wrapper\n\t\t * @param {string} getStringifiedVersion get stringified version of icon\n\t\t * @return {Promise<void>} a Promise that will be resolved when icon is fetched from server\n\t\t */\n\t\tthis.getIcon = (iconName, extraClass = null, getStringifiedVersion = false) => {\n\t\t\t// eslint-disable-next-line consistent-return\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\t// if cached version is found, return that version\n\t\t\t\tconst cachedIcon = getCachedIcon(iconName, extraClass, getStringifiedVersion);\n\t\t\t\tif (cachedIcon) {\n\t\t\t\t\treturn res(cachedIcon);\n\t\t\t\t}\n\n\t\t\t\tif (iconList[iconName]) {\n\t\t\t\t\treturn fetch(iconList[iconName])\n\t\t\t\t\t\t.then((resp) => {\n\t\t\t\t\t\t\tif (resp.ok) {\n\t\t\t\t\t\t\t\treturn resp.text();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new Error(`an error occurred while fetching icon [${iconName}]`);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((iconString) => {\n\t\t\t\t\t\t\tif (iconString.error) {\n\t\t\t\t\t\t\t\tthrow new Error(`an error occurred while fetching icon [${iconName}]`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// add icon to cache\n\t\t\t\t\t\t\taddToCache(iconName, iconString);\n\n\t\t\t\t\t\t\treturn res(getStringifiedVersion ? iconString : prepareIcon(iconString, extraClass));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\treturn rej(new Error(err));\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn rej(new Error(`no icon found with the given name of [${iconName}]`));\n\t\t\t});\n\t\t};\n\t\tthis.getIconUrl = (iconName) => {\n\t\t\tlet iconUrl = null;\n\n\t\t\tif (iconList[iconName]) {\n\t\t\t\ticonUrl = iconList[iconName];\n\t\t\t}\n\n\t\t\treturn iconUrl;\n\t\t};\n\t}\n\n\t// eslint-disable-next-line no-restricted-globals\n\tconst context = self || global;\n\tif (context.wptb_admin_object) {\n\t\treturn new IconManager(wptb_admin_object.iconManager);\n\t}\n\n\treturn null;\n});\n"]}