{"version":3,"sources":["WPTB_Logger.js","WPTB_CutGlueTable.js","WPTB_GetDirectionAfterReconstruction.js","WPTB_SortableTable.js","WPTB_RecalculateIndexes.js","WPTB_ResponsiveFrontend.js","WPTB_StylePass.js","wp-table-builder-frontend.js"],"names":["key","context","factory","module","exports","_typeof","self","global","bgColors","normal","prepareMessage","message","replace","prepareMessageStyle","messageType","arguments","length","undefined","log","console","this","WPTB_CutGlueTable","cutTableHorizontally","rowBefore","table","rows","i","tableRowsIChildren","children","j","rowSpan","newTdRowspan","dataset","sameCellBeforeDivision","td","hasOwnProperty","wptbCell","mark","getDOMElement","document","createElement","tdTopStyle","getAttribute","setAttribute","colSpan","dataXIndex","xIndex","dataXIndexNext","parseInt","beforeTd","maxCols","querySelector","insertBefore","WPTB_RecalculateIndexes","glueTableHorizontally","tds","_toConsumableArray","getElementsByTagName","hasAttribute","dataSameCellBeforeDivision","tdsSameBeforeDivision","querySelectorAll","parentNode","classList","contains","yIndex","tdsSameBeforeDivisionJPlusChildren","k","appendChild","removeChild","cutTableVertically","col","rowSpanNewTd","colSpanOld","colSpanNewTd","rowChildren","rowChildrenLength","afterTd","tdLeftStyle","tdAnalogThisX","style","width","tdAnalogThisY","height","glueTableVertically","jFirstTdGlue","WPTB_GetDirectionAfterReconstruction","typeFirst","typeSecond","verticalProp","responsiveFront","itemsPerHeader","tableMaxCols","switchMode","type","getDirective","e","directives","sizeRangeId","detail","mode","responsiveMode","modeOptions","topRowAsHeader","cellStackDirection","cellsPerRow","newTable","options","thisObject","sortingCellMouseMov","element","x","y","xMatch","target","tagName","offsetX","layerX","offsetY","layerY","clientWidth","clientHeight","add","remove","sortingCellMouseMoveVertical","sortingCellMouseMoveHorizontal","tdMouseLeave","sortableTable","currentTarget","tableWasSorted","tableRowsBefore","tableRowsAfter","tableRowsArr","tableLastCont","push","rowspan","rowNum","concat","map","rowsTdFirst","rowsValuesArr","tdYCoordsRowSpanPrevious","tableRowsPushed","tdsChanged","changeSortingTdsCollection","tdRowspan","textElementsValues","textElementsValuesGet","rowsTd","value","orderBy","setSortedAscDataAttr","sort","prev","next","sortOrder","unshift","indexOf","trRef","tBody","innerHTML","rowsValObj","row","tr","colspan","colNum","columnsTdFirst","columnsValuesArr","tdXCoordsColSpanPrevious","tdColspan","columnsTd","tdsColumn","difference","columnsValObj","tdsAll","removeAttribute","removeCellsAttrAfterDivision","tableSM","tableStateSet","reassignElementsStyles","dataAttr","prevValue","nextValue","cell","textElements","innerText","tdIndexSpanPrev","collectionTds","collectionTdsJSpan","collectionTdsJSpanProperty","indexName","indexNameCamelCase","indexNamePerpendicularCamelCase","tableGroupCount","tdsCollectionChanged","tdSpanProperty","splice","tdSpan","cellsStylesScheme","rowsStylesScheme","sortModeSwitcher","active","removeEventListener","sortableTableVerticalStart","sortingCellMouseMoveSwitcher","addEventListener","wptbSortableTableVertical","createTableElementsStylesScheme","sortableTableHorizontalStart","wptbSortableTableHorizontal","tableObjectChange","start","elemSelector","elements","elem","backgroundColor","window","getComputedStyle","getPropertyValue","objectKey","String","elementsStylesScheme","elemStyles","sortableTableInitialization","sortModeSwitcherRun","switchModeObj","tableOld","call","_this","s","sCMM","dataAttrSortChange","rowsLength","dataYIndexStart","trs","maxColsFull","tdsArr","jMainIter","z","columns","logToConsole","process","env","NODE_ENV","Error","CellObject","cellElement","reference","referenceObject","mergedRenderStatus","mergedCells","column","getMergedRenderStatus","setMergedRenderStatus","status","addToMergedCells","mergeType","cellObj","isReference","cloneNode","modifications","spans","remainingSpans","cacheSpanValues","Object","keys","defaultVal","prototype","getSpan","spanType","spanVal","getElement","getRemainingSpans","setRemainingSpans","createCellElement","attributeKey","attributeValue","append","glue","currentVal","default","setSpan","valueToApply","mc","remainingVal","remainingParentSpans","startIndex","endIndex","resetAttribute","resetAllAttributes","el","TableObject","tableEl","_this2","tableElement","parsedTable","rowCache","originals","rowColors","header","even","odd","addToParsed","r","c","cellObject","parseTable","Array","from","ri","cells","currentIndex","ci","currentCellObject","spanRow","spanTypes","spanCol","sr","referenceCell","sc","parseRowColors","headerDatasetColor","wptbHeaderBackgroundColor","evenRowDatasetColor","wptbEvenRowBackgroundColor","oddRowDatasetColor","wptbOddRowBackgroundColor","rowsNeeded","rn","tempRow","addRow","fromOriginals","originalIndex","isArray","tableBody","range","createRange","setStart","createContextualFragment","join","childNodes","id","clearTable","getRow","maxRows","maxColumns","mergedHeader","reduce","p","getCell","returnObject","getCellsAtRow","rowId","returnObj","tempCell","appendToRow","cellRowId","cellColumnId","cachedRow","appendElementToRow","appendObjectToRow","getParsedTable","responsiveClassDefaultOptions","query","defaultClasses","bindToResize","_this3","_objectSpread","elementObjects","tableObject","bindRebuildToResize","rebuildTables","directiveString","wptbResponsiveDirectives","JSON","parse","atob","addDefaultClasses","removeDefaultClasses","autoBuild","sizeRange","autoOption","tableObj","direction","staticTopRow","repeatMergedHeader","buildDefault","autoDirectionBuild","isRowStacked","headerBuild","allCellsByRow","rowStartIndex","filter","b","bgColor","rowObj","forEach","cellCount","pR","currentTableColor","allCellsByCol","t","tCell","cR","headerCells","h","stackedAsColumn","rowBorderStyle","headerCount","Math","ceil","currentOriginalRow","addBorder","borderTop","cellClone","addHeaderCells","cc","currentRowSpan","cellAddStatus","currentCell","remainingItems","min","hc","headerCellObject","clonedHeaderCell","rS","cS","colorIndex","calculateRangeId","val","stops","sortedStops","a","rangeId","rebuildTable","size","directive","responsiveEnabled","buildCallable","getBoundingClientRect","breakpoints","tabEvent","CustomEvent","dispatchEvent","o","innerSize","innerWidth","relativeWidth","globalKey","stylesheets","insertShadowRoot","shadowRootContainer","tableContainer","mainParent","parentChildren","tableIndex","upSibling","downSibling","prepareAllStylesheets","shadowRoot","borrowFromTheme","insertAdjacentElement","fontFamily","init","tableContainers","setupStylePass","checkTableEligibility","disableThemeStyles","container","maxWidth","wptbTableContainerMaxWidth","attachShadow","stylesheetsObj","root","prepareStylesheet","handler","url","linkElement","jQuery","ready","$","getElementsByClassName","wptb_tableReconstraction","createNewTableIndic","previewTable","tableContainerMatrix","display","wptbTableAlignment","offsetWidth","reconstraction","wptbAdaptiveTable","tableContainerWidth","previewTableWidth","tableColumns","previewTableRows","tableReconstructed","wptbPreviewTableMobile","overflow","tdWidth","wholeColumnsInContainer","floor","dataWholeColumnInContainer","newTableTbody","infArr","className","match","tableRows","newTableLastSectionFilledColumns","valuesIsSaved","tableRowsWithoutHeader","newTableColumnsWithoutLeftHeader","countRows","tdStyles","sectionNumber","tdLeftHeader","rowFirstStyles","borderTopColor","borderColor","borderBottomColor","borderTopWidth","rowKStyles","borderWidth","background","newTableColumns","increaseRatioRows","newTableRows","jMax","jStart","rowStyles","newTd","images","minWidth","bubbles","wptb_tdDefaultWidth","wptbTableContainers","wptbTableContainer","merging–°ellsHorizontally","tableWidthLogic","wptbTableContainerWidth","wptbTableTdsSumMaxWidth","wptbCellsWidthAutoCount","tableTdWidthAuto","wptbFixedWidthSize","tdPaddingCommon","tableTdBorderCommonWidth","styleElementCreate","wptbTdWidthAuto","elementVisibilityStatus","parentObserver","tdStyleObj","tdBorderLeftWidth","tdBorderRightWidth","tdPaddingLeftWidth","tdPaddingRightWidth","parseFloat","_getComputedStyle","visibility","culpritParent","findParentWithNoDisplay","currentElement","currentParent","parentDisplayStatus","parentType","nodeName","toLowerCase","MutationObserver","mutationRecord","mutation","currentVisibility","containerWidth","disconnect","observe","attributes","childList","subtree","cssForTdsWidthAuto","head","cssForTdsWidthAutoOld","_loop","wptbElementHoverBgColor","wptbElementHoverTextColor","color","wptbElementHoverScale","transform","wptbElementBgColor","wptbElementColor","resize","wptbSize","wptbSizeNew","wptbButtonWrapper","WPTB_ResponsiveFrontend","tables","WPTB_SortableTable","sortingTable","responsiveFrontReady","WPTB_StylePass","WptbFrontendData","stylePass"],"mappings":"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","file":"wp-table-builder-frontend.js","sourcesContent":["(function UMD(key, context, factory) {\r\n\tif (typeof module !== 'undefined' && typeof exports === 'object') {\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\t// eslint-disable-next-line no-param-reassign\r\n\t\tcontext[key] = factory();\r\n\t}\r\n\t// eslint-disable-next-line no-restricted-globals\r\n})('WPTB_Logger', self || global, () => {\r\n\tconst format = '%c WP Table Builder %c {message} ';\r\n\tconst brandStyle =\r\n\t\t'border-radius:5px 0 0 5px; background-color: #3299D1; padding: 3px; color: #FFF; font-weight: bold;';\r\n\tconst messageStyle = 'background-color: {bgColor} ; padding: 3px; color: #FFF; border-radius: 0 5px 5px 0;';\r\n\r\n\t/**\r\n\t * Background colors for message.\r\n\t *\r\n\t * Add color property keys keeping in mind that internal function to use that colors will select them based on type of message, ie 'normal' color property for normal messages and 'error' color property for error message types.\r\n\t *\r\n\t * @type {Object}\r\n\t */\r\n\tconst bgColors = {\r\n\t\tnormal: '#48BB78',\r\n\t};\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Prepare format for incoming message.\r\n\t\t *\r\n\t\t * @param {string} message message to be used\r\n\t\t * @return {string} prepared message\r\n\t\t */\r\n\t\tprepareMessage(message) {\r\n\t\t\treturn format.replace('{message}', message);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Prepare style of message.\r\n\t\t *\r\n\t\t * @param {string} messageType message type\r\n\t\t * @return {string} prepared style\r\n\t\t */\r\n\t\tprepareMessageStyle(messageType = 'normal') {\r\n\t\t\tlet keyName = 'normal';\r\n\r\n\t\t\tif (bgColors[messageType]) {\r\n\t\t\t\tkeyName = messageType;\r\n\t\t\t}\r\n\r\n\t\t\treturn messageStyle.replace('{bgColor}', bgColors[keyName]);\r\n\t\t},\r\n\t\t/**\r\n\t\t * Normal log function.\r\n\t\t *\r\n\t\t * @param {string} message message string\r\n\t\t */\r\n\t\tlog(message) {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log(this.prepareMessage(message), brandStyle, this.prepareMessageStyle('normal'));\r\n\t\t},\r\n\t};\r\n});\r\n","let WPTB_CutGlueTable = {\n    cutTableHorizontally: function (rowBefore, table) {\n        if( table && table.rows[rowBefore] ) {\n            for( let i = 0; i < rowBefore; i++ ) {\n                let tableRowsIChildren = table.rows[i].children;\n\n                for( let j = 0; j < tableRowsIChildren.length; j++ ) {\n                    if ( tableRowsIChildren[j].rowSpan > 1 && tableRowsIChildren[j].rowSpan > rowBefore - i ) {\n                        let newTdRowspan = tableRowsIChildren[j].rowSpan - rowBefore + i;\n                        tableRowsIChildren[j].rowSpan = rowBefore - i;\n                        if( ! tableRowsIChildren[j].dataset.sameCellBeforeDivision ) {\n                            tableRowsIChildren[j].dataset.sameCellBeforeDivision = 'r' + i + 'c' + j;\n                        }\n\n                        let td;\n                        if(table.hasOwnProperty('wptbCell')) {\n                            td = new table.wptbCell( table.mark );\n                            td = td.getDOMElement();\n                        } else {\n                            td = document.createElement('td');\n                        }\n\n                        let tdTopStyle = tableRowsIChildren[j].getAttribute( 'style' );\n                        td.setAttribute( 'style', tdTopStyle );\n                        td.colSpan = tableRowsIChildren[j].colSpan;\n                        td.rowSpan = newTdRowspan;\n                        td.dataset.sameCellBeforeDivision = tableRowsIChildren[j].dataset.sameCellBeforeDivision;\n\n                        let dataXIndex = tableRowsIChildren[j].dataset.xIndex;\n                        let dataXIndexNext = parseInt( dataXIndex ) + parseInt( tableRowsIChildren[j].colSpan );\n                        let beforeTd;\n                        while( ! beforeTd && dataXIndexNext < table.maxCols ) {\n                            beforeTd = table.rows[rowBefore].querySelector( '[data-x-index=\"' + dataXIndexNext + '\"]' );\n                            dataXIndexNext++;\n                        }\n                        table.rows[rowBefore].insertBefore( td, beforeTd );\n\n                        WPTB_RecalculateIndexes(table);\n                    }\n                }\n            }\n        }\n    },\n    glueTableHorizontally: function (table) {\n        if(table) {\n            let tds = [...table.getElementsByTagName( 'td' )];\n            for( let i = 0; i < tds.length; i++ ) {\n                if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                    let dataSameCellBeforeDivision = tds[i].dataset.sameCellBeforeDivision;\n                    let tdsSameBeforeDivision = table.querySelectorAll( '[data-same-cell-before-division=\"' + dataSameCellBeforeDivision + '\"]' );\n                    for( let j = 0; j < tdsSameBeforeDivision.length; j++ ) {\n                        if( tdsSameBeforeDivision[j] && tdsSameBeforeDivision[j + 1] ) {\n                            if( tdsSameBeforeDivision[j].parentNode && tdsSameBeforeDivision[j + 1].parentNode &&\n                                ! tdsSameBeforeDivision[j].parentNode.classList.contains( 'wptb-row-moving' ) &&\n                                ! tdsSameBeforeDivision[j + 1].parentNode.classList.contains( 'wptb-row-moving' ) ) {\n                                if( ( tdsSameBeforeDivision[j + 1].dataset.yIndex == parseInt( tdsSameBeforeDivision[j].dataset.yIndex ) +\n                                    parseInt( tdsSameBeforeDivision[j].rowSpan ) ) ) {\n                                    tdsSameBeforeDivision[j].rowSpan += tdsSameBeforeDivision[j + 1].rowSpan;\n\n                                    let tdsSameBeforeDivisionJPlusChildren = [...tdsSameBeforeDivision[j + 1].children];\n\n                                    for( let k = 0; k < tdsSameBeforeDivisionJPlusChildren.length; k++ ) {\n                                        tdsSameBeforeDivision[j].appendChild( tdsSameBeforeDivisionJPlusChildren[k] );\n                                    }\n\n                                    let nextRow = tdsSameBeforeDivision[j + 1].parentNode;\n                                    nextRow.removeChild( tdsSameBeforeDivision[j + 1] );\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            WPTB_RecalculateIndexes(table);\n        }\n    },\n    cutTableVertically: function (col, table) {\n        for ( let i = 0; i < table.rows.length; i++ ) {\n            if( col < table.maxCols ) {\n                if( col != 0 && ( ! table.rows[i].querySelector( '[data-x-index=\"' + col + '\"]' ) ) ) {\n                    let rowChildren = table.rows[i].children;\n\n                    let td,\n                        rowChildrenLength = rowChildren.length,\n                        afterTd,\n                        rowSpanNewTd,\n                        colSpanOld,\n                        colSpanNewTd;\n                    for( let j = 0; j < rowChildrenLength; j++ ) {\n                        if( rowChildren[j].colSpan > 1 && parseInt( rowChildren[j].dataset.xIndex ) < col &&\n                            parseInt( rowChildren[j].dataset.xIndex ) + parseInt( rowChildren[j].colSpan ) > col ) {\n                            if(table.hasOwnProperty('wptbCell')) {\n                                td = new table.wptbCell( table.mark );\n                                td = td.getDOMElement();\n                            } else {\n                                td = document.createElement('td');\n                            }\n\n                            rowSpanNewTd = rowChildren[j].rowSpan;\n                            colSpanOld = rowChildren[j].colSpan;\n                            rowChildren[j].colSpan = col - rowChildren[j].dataset.xIndex;\n                            colSpanNewTd = colSpanOld - rowChildren[j].colSpan;\n\n                            if( ! rowChildren[j].dataset.sameCellBeforeDivision ) {\n                                rowChildren[j].dataset.sameCellBeforeDivision = 'r' + i + 'c' + j;\n                            }\n\n                            let tdLeftStyle = rowChildren[j].getAttribute( 'style' );\n                            td.setAttribute( 'style', tdLeftStyle );\n\n                            let tdAnalogThisX = table.querySelector( '[data-x-index=\"' + col + '\"]' );\n                            if( tdAnalogThisX ) {\n                                td.style.width = tdAnalogThisX.style.width;\n                            }\n\n                            let tdAnalogThisY = table.querySelector( '[data-y-index=\"' + i + '\"]' );\n                            if( tdAnalogThisY ) {\n                                td.style.height = tdAnalogThisY.style.height;\n                            }\n                            if( rowChildren[j + 1] ) {\n                                afterTd = rowChildren[j + 1];\n                            } else {\n                                afterTd = null;\n                            }\n\n                            table.rows[i].insertBefore( td, afterTd );\n                            td.colSpan = colSpanNewTd;\n                            td.rowSpan = rowSpanNewTd;\n                            td.dataset.sameCellBeforeDivision = rowChildren[j].dataset.sameCellBeforeDivision;\n                            i += rowSpanNewTd - 1;\n                            break\n                        }\n                    }\n                }\n            }\n            WPTB_RecalculateIndexes(table);\n        }\n    },\n    glueTableVertically: function (table) {\n        if( table ) {\n            let tds = [...table.getElementsByTagName( 'td' )];\n            for( let i = 0; i < tds.length; i++ ) {\n                if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                    let dataSameCellBeforeDivision = tds[i].dataset.sameCellBeforeDivision;\n                    let tdsSameBeforeDivision = [...table.querySelectorAll( '[data-same-cell-before-division=\"' + dataSameCellBeforeDivision + '\"]' )];\n\n                    let jFirstTdGlue = null;\n                    for( let j = 0; j < tdsSameBeforeDivision.length; j++ ) {\n                        if( tdsSameBeforeDivision[j] && tdsSameBeforeDivision[j + 1] &&\n                            ! tdsSameBeforeDivision[j].classList.contains( 'wptb-column-moving' ) &&\n                            ! tdsSameBeforeDivision[j + 1].classList.contains( 'wptb-column-moving' ) ) {\n                            if( ( tdsSameBeforeDivision[j + 1].dataset.xIndex == parseInt( tdsSameBeforeDivision[j].dataset.xIndex ) +\n                                parseInt( tdsSameBeforeDivision[j].colSpan ) ) ) {\n                                if( jFirstTdGlue == null ) {\n                                    jFirstTdGlue = j;\n                                }\n                                tdsSameBeforeDivision[jFirstTdGlue].colSpan += tdsSameBeforeDivision[j + 1].colSpan;\n\n                                let tdsSameBeforeDivisionJPlusChildren = [...tdsSameBeforeDivision[j + 1].children];\n\n                                for( let k = 0; k < tdsSameBeforeDivisionJPlusChildren.length; k++ ) {\n                                    tdsSameBeforeDivision[jFirstTdGlue].appendChild( tdsSameBeforeDivisionJPlusChildren[k] );\n                                }\n\n                                let thisRow = tdsSameBeforeDivision[j + 1].parentNode;\n                                thisRow.removeChild( tdsSameBeforeDivision[j + 1] );\n                            }\n                        }\n                    }\n                }\n            }\n\n            WPTB_RecalculateIndexes(table);\n        }\n    }\n}\n","/**\r\n *\r\n * @param {HTMLElement} table\r\n * @param {string} typeFirst\r\n * @param {strinig} typeSecond\r\n * @param {func} workFunction\r\n * @param {object} responsiveFront\r\n */\r\nvar WPTB_GetDirectionAfterReconstruction = function (table, typeFirst, typeSecond,verticalProp, responsiveFront) {\r\n\r\n    let itemsPerHeader = 0;\r\n    let tableMaxCols = table.maxCols;\r\n    const switchMode = {};\r\n    let type = [];\r\n    if (responsiveFront && responsiveFront.getDirective(table)) {\r\n        switchMode.switch = function (e) {\r\n            const directives = responsiveFront.getDirective(table)\r\n\r\n            let sizeRangeId = 'desktop';\r\n            if (e && e.detail) {\r\n                sizeRangeId = e.detail.sizeRangeId;\r\n            }\r\n            type = [typeFirst, 1];\r\n            if (sizeRangeId !== 'desktop') {\r\n                if (directives.hasOwnProperty('modeOptions')) {\r\n                    const mode = directives.responsiveMode;\r\n                    const modeOptions = directives.modeOptions[mode];\r\n\r\n                    if (\r\n                        modeOptions.hasOwnProperty('topRowAsHeader') &&\r\n                        modeOptions.topRowAsHeader.hasOwnProperty(sizeRangeId) &&\r\n                        modeOptions.topRowAsHeader[sizeRangeId]\r\n                    ) {\r\n                        if (\r\n                            modeOptions.hasOwnProperty('cellStackDirection') &&\r\n                            modeOptions.cellStackDirection.hasOwnProperty(sizeRangeId)\r\n                        ) {\r\n                            if (modeOptions.cellStackDirection[sizeRangeId] === 'row') {\r\n                                type = [typeSecond, 2];\r\n                                itemsPerHeader = tableMaxCols - 1;\r\n                            } else if (modeOptions.cellStackDirection[sizeRangeId] === 'column') {\r\n                                if (modeOptions.hasOwnProperty('cellsPerRow')) {\r\n                                    itemsPerHeader = modeOptions.cellsPerRow[sizeRangeId];\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        itemsPerHeader = 0;\r\n                    }\r\n                }\r\n            } else {\r\n                itemsPerHeader = 0;\r\n            }\r\n            return {type, itemsPerHeader}\r\n        };\r\n    } else {\r\n        switchMode.switch = function (e) {\r\n            type = [typeFirst, 1];\r\n            if (table.classList.contains('wptb-mobile-view-active')) {\r\n                if (table.classList.contains('wptb-table-preview-head')) {\r\n                    type = [typeSecond, 2];\r\n                    if(type === verticalProp) {\r\n                        itemsPerHeader = tableMaxCols - 1;\r\n                    }\r\n                }\r\n                let newTable = table.parentNode.parentNode.querySelector('.wptb-preview-table-mobile');\r\n                return {type, itemsPerHeader, newTable};\r\n            }\r\n\r\n            return {type, itemsPerHeader}\r\n        };\r\n    }\r\n\r\n    return switchMode;\r\n}\r\n","/**\r\n * Responsive class assignment for frontend operations.\r\n *\r\n * This file can be used as an UMD.\r\n */\r\n(function assignToGlobal(key, context, factory) {\r\n\tif (typeof exports === 'object' && typeof module !== 'undefined') {\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\t// eslint-disable-next-line no-param-reassign\r\n\t\tcontext[key] = factory();\r\n\t}\r\n\t// eslint-disable-next-line no-restricted-globals\r\n})('WPTB_SortableTable', self || global, () => {\r\n\tfunction WPTB_SortTable(options = {}) {\r\n\t\tconst table = (this.table = options.table);\r\n\t\tWPTB_RecalculateIndexes(table);\r\n\t\tconst thisObject = this;\r\n\t\tthis.itemsPerHeader = 0;\r\n\t\tthis.tableMaxCols = table.maxCols;\r\n\t\tthis.cellsStylesScheme = {};\r\n\t\tthis.rowsStylesScheme = {};\r\n\r\n\t\t/**\r\n\t\t * sets the table to sort mode\r\n\t\t *\r\n\t\t * @param {string} type\r\n\t\t * @param {boolean} active\r\n\t\t * @param {number} number\r\n\t\t */\r\n\t\tthis.sortModeSwitcher = function (type, active) {\r\n\t\t\tif(active) {\r\n\t\t\t\tthis.sortModeSwitcher('horizontal', false);\r\n\t\t\t\tthis.sortModeSwitcher('vertical', false);\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'vertical') {\r\n\t\t\t\tthis.table.removeEventListener('click', this.sortableTableVerticalStart, false);\r\n\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('vertical', true);\r\n\t\t\t\t\tthis.table.addEventListener('click', this.sortableTableVerticalStart, false);\r\n\t\t\t\t\tthis.table.dataset.wptbSortableTableVertical = '1';\r\n\t\t\t\t\tthis.createTableElementsStylesScheme('td');\r\n\t\t\t\t\tthis.createTableElementsStylesScheme('tr');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('vertical', false);\r\n\t\t\t\t\tdelete this.table.dataset.wptbSortableTableVertical;\r\n\t\t\t\t}\r\n\t\t\t} else if (type === 'horizontal') {\r\n\t\t\t\tthis.table.removeEventListener('click', this.sortableTableHorizontalStart, false);\r\n\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('horizontal', true);\r\n\t\t\t\t\tthis.table.addEventListener('click', this.sortableTableHorizontalStart, false);\r\n\t\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal = '1';\r\n\t\t\t\t\tthis.createTableElementsStylesScheme('td');\r\n\t\t\t\t\tthis.createTableElementsStylesScheme('tr');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('horizontal', false);\r\n\t\t\t\t\tdelete this.table.dataset.wptbSortableTableHorizontal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * changes table object for old reconstruction table type\r\n\t\t *\r\n\t\t * @param {boolean}start\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\tthis.tableObjectChange = function (start = true) {\r\n\t\t\tif(this.table.classList.contains('wptb-mobile-view-active') && start) {\r\n\t\t\t\tthis.table = table.parentNode.parentNode.querySelector('.wptb-preview-table-mobile');\r\n\t\t\t} else if(this.table.classList.contains('wptb-preview-table-mobile') && !start) {\r\n\t\t\t\tthis.table = table.parentNode.querySelector('.wptb-preview-table');\r\n\t\t\t}\r\n\t\t\treturn this.table;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * fills the object with data about cell styles for all locations (create scheme)\r\n\t\t *\r\n\t\t * @param elemSelector\r\n\t\t */\r\n\t\tthis.createTableElementsStylesScheme = function (elemSelector) {\r\n\t\t\tthis.tableObjectChange();\r\n\t\t\tlet elements = this.table.querySelectorAll(elemSelector);\r\n\t\t\tif(elements.length) {\r\n\t\t\t\tfor(let i = 0; i < elements.length; i++) {\r\n\t\t\t\t\tlet elem = elements[i];\r\n\t\t\t\t\tlet cellFullStyleObj = window.getComputedStyle(elem, null);\r\n\t\t\t\t\tlet backgroundColor = cellFullStyleObj.getPropertyValue( 'background-color' );\r\n\t\t\t\t\tlet objectKey = '';\r\n\t\t\t\t\tif(elemSelector === 'td') {\r\n\t\t\t\t\t\tobjectKey = elem.dataset.xIndex + '-' + elem.dataset.yIndex;\r\n\t\t\t\t\t\tthis.cellsStylesScheme[objectKey] = {backgroundColor};\r\n\t\t\t\t\t} else if(elemSelector === 'tr') {\r\n\t\t\t\t\t\tobjectKey = String(i);\r\n\t\t\t\t\t\tthis.rowsStylesScheme[objectKey] = {backgroundColor};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.tableObjectChange(false);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * applies saved cell styles data to all cells\r\n\t\t *\r\n\t\t * @param elemSelector\r\n\t\t */\r\n\t\tthis.reassignElementsStyles = function (elemSelector) {\r\n\t\t\tthis.tableObjectChange();\r\n\t\t\tlet elements = this.table.querySelectorAll(elemSelector);\r\n\t\t\tlet elementsStylesScheme;\r\n\t\t\tif(elemSelector === 'td') {\r\n\t\t\t\telementsStylesScheme = this.cellsStylesScheme;\r\n\t\t\t} else if(elemSelector === 'tr') {\r\n\t\t\t\telementsStylesScheme = this.rowsStylesScheme;\r\n\t\t\t}\r\n\t\t\tif(elements.length) {\r\n\t\t\t\tfor(let i = 0; i < elements.length; i++) {\r\n\t\t\t\t\tlet elem = elements[i];\r\n\t\t\t\t\tlet objectKey = '';\r\n\t\t\t\t\tif(elemSelector === 'td') {\r\n\t\t\t\t\t\tobjectKey = elem.dataset.xIndex + '-' + elem.dataset.yIndex;\r\n\t\t\t\t\t} else if(elemSelector === 'tr') {\r\n\t\t\t\t\t\tobjectKey = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(elementsStylesScheme.hasOwnProperty(objectKey)) {\r\n\t\t\t\t\t\tlet elemStyles = elementsStylesScheme[objectKey];\r\n\t\t\t\t\t\tfor(let key in elemStyles) {\r\n\t\t\t\t\t\t\telem.style[key] = elemStyles[key];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.tableObjectChange(false);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * checks whether the table should be in the sort state\r\n\t\t * and connects the necessary handlers\r\n\t\t *\r\n\t\t * @param {object} responsiveFront\r\n\t\t */\r\n\t\tthis.sortableTableInitialization = function (responsiveFront) {\r\n\t\t\tlet typeFirst;\r\n\t\t\tlet typeSecond;\r\n\t\t\tif (this.table.dataset.wptbSortableTableVertical && this.table.dataset.wptbSortableTableVertical === '1') {\r\n\t\t\t\ttypeFirst = 'vertical';\r\n\t\t\t\ttypeSecond = 'horizontal';\r\n\t\t\t} else if (\r\n\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal &&\r\n\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal === '1'\r\n\t\t\t) {\r\n\t\t\t\ttypeFirst = 'horizontal';\r\n\t\t\t\ttypeSecond = 'vertical';\r\n\t\t\t}\r\n\r\n\t\t\tif(!typeFirst || typeof typeFirst !== 'string' || !typeSecond || typeof typeSecond !== 'string') return;\r\n\r\n\t\t\tlet switchMode = WPTB_GetDirectionAfterReconstruction(this.table, typeFirst, typeSecond, 'vertical', responsiveFront);\r\n\r\n\t\t\tif(typeof switchMode === 'object' && switchMode.hasOwnProperty('switch')) {\r\n\t\t\t\tfunction sortModeSwitcherRun (e) {\r\n\t\t\t\t\tlet switchModeObj = switchMode.switch(e);\r\n\t\t\t\t\tif(typeof switchModeObj === 'object') {\r\n\t\t\t\t\t\tthis.itemsPerHeader = switchModeObj.itemsPerHeader;\r\n\t\t\t\t\t\tif(switchModeObj.hasOwnProperty('newTable')) {\r\n\t\t\t\t\t\t\tlet tableOld = this.table;\r\n\t\t\t\t\t\t\tthis.table = switchModeObj.newTable;\r\n\t\t\t\t\t\t\tthis.sortModeSwitcher(switchModeObj.type[0], true);\r\n\t\t\t\t\t\t\tthis.table = tableOld;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.sortModeSwitcher(switchModeObj.type[0], true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsortModeSwitcherRun.call(thisObject);\r\n\t\t\t\tthis.table.addEventListener(\r\n\t\t\t\t\t'table:rebuilt',\r\n\t\t\t\t\tfunction (e) {\r\n\t\t\t\t\t\tsortModeSwitcherRun.call(thisObject, e);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * adds and deletes mousemove and mouseleave events handlers when happens switch sorting mode\r\n\t\t * and also can add necessary attributes\r\n\t\t *\r\n\t\t * @param {string} type\r\n\t\t * @param {boolean} active\r\n\t\t */\r\n\t\tthis.sortingCellMouseMoveSwitcher = function (type, active) {\r\n\t\t\t/**\r\n\t\t\t * removes and adds mousemove and mouseleave events handlers\r\n\t\t\t *\r\n\t\t\t * @param {HTMLElement} td\r\n\t\t\t * @param {func} sCMM\r\n\t\t\t * @param {boolean} active\r\n\t\t\t */\r\n\t\t\tfunction s(td, sCMM, active) {\r\n\t\t\t\ttd.removeEventListener('mousemove', sCMM, false);\r\n\t\t\t\ttd.removeEventListener('mouseleave', tdMouseLeave, false);\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\ttd.addEventListener('mousemove', sCMM, false);\r\n\t\t\t\t\ttd.addEventListener('mouseleave', tdMouseLeave, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * removes and adds data sorted attributes\r\n\t\t\t *\r\n\t\t\t * @param {HTMLElement} td\r\n\t\t\t * @param {string} dataAttr\r\n\t\t\t * @param {boolean} active\r\n\t\t\t */\r\n\t\t\tfunction dataAttrSortChange(td, dataAttr, active) {\r\n\t\t\t\tif (active) {\r\n\t\t\t\t\tif (!td.dataset[dataAttr] || td.dataset[dataAttr] !== 'desk-disabled') {\r\n\t\t\t\t\t\ttd.dataset[dataAttr] = 'ask';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttd.dataset[dataAttr] = 'desk';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (td.dataset[dataAttr] === 'ask') {\r\n\t\t\t\t\ttd.dataset[dataAttr] = 'ask-disabled';\r\n\t\t\t\t} else if (td.dataset[dataAttr] === 'desk') {\r\n\t\t\t\t\ttd.dataset[dataAttr] = 'desk-disabled';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// removes all mousemove and mouseleave events handlers\r\n\t\t\t// and also removes all data sorted attributes from all cells\r\n\t\t\tlet tds = this.table.querySelectorAll('td');\r\n\t\t\tif (tds.length) {\r\n\t\t\t\ttds = [...tds];\r\n\t\t\t\ttds.map((td) => {\r\n\t\t\t\t\ts(td, sortingCellMouseMoveVertical, false);\r\n\t\t\t\t\tdataAttrSortChange(td, 'sortedVertical', false);\r\n\t\t\t\t\ts(td, sortingCellMouseMoveHorizontal, false);\r\n\t\t\t\t\tdataAttrSortChange(td, 'sortedHorizontal', false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// if active === true sets sorted events handlers\r\n\t\t\t// and data sorted attributes for all cells\r\n\t\t\tif (active) {\r\n\t\t\t\tif (type === 'vertical') {\r\n\t\t\t\t\tlet rowsLength = this.table.rows.length;\r\n\t\t\t\t\tlet dataYIndexStart = 0;\r\n\t\t\t\t\twhile (rowsLength > 0) {\r\n\t\t\t\t\t\tlet tds = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart}\"]`);\r\n\t\t\t\t\t\ttds = [...tds];\r\n\t\t\t\t\t\ttds.map((td) => {\r\n\t\t\t\t\t\t\ts(td, sortingCellMouseMoveVertical, active);\r\n\t\t\t\t\t\t\tdataAttrSortChange(td, 'sortedVertical', active);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (this.itemsPerHeader) {\r\n\t\t\t\t\t\t\trowsLength -= this.itemsPerHeader + 1;\r\n\t\t\t\t\t\t\tdataYIndexStart += this.itemsPerHeader + 1;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trowsLength = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (type === 'horizontal') {\r\n\t\t\t\t\tlet tds = this.table.querySelectorAll('[data-x-index=\"0\"]');\r\n\t\t\t\t\ttds = [...tds];\r\n\t\t\t\t\ttds.map((td) => {\r\n\t\t\t\t\t\tlet tdsPerAfter = this.table.querySelectorAll(`[data-y-index=\"${td.dataset.yIndex}\"]`);\r\n\t\t\t\t\t\tif(tdsPerAfter.length > 2) {\r\n\t\t\t\t\t\t\ts(td, sortingCellMouseMoveHorizontal, active);\r\n\t\t\t\t\t\t\tdataAttrSortChange(td, 'sortedHorizontal', active);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * adds a sortable-hover class for a cell when the cursor is over the sort icon (arrow)\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t * @param {string} type\r\n\t\t * @param {HTMLElement} element td\r\n\t\t */\r\n\t\tfunction sortingCellMouseMov(e, type, element) {\r\n\t\t\tif (e.target.tagName === 'TD') {\r\n\t\t\t\tconst x = e.offsetX == undefined ? e.layerX : e.offsetX;\r\n\t\t\t\tconst y = e.offsetY == undefined ? e.layerY : e.offsetY;\r\n\t\t\t\tlet xMatch = false;\r\n\t\t\t\tif ((type === 'vertical' && e.target.clientWidth - x <= 35) || (type === 'horizontal' && x <= 35)) {\r\n\t\t\t\t\txMatch = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (xMatch && (e.target.clientHeight - 35) / 2 < y && (e.target.clientHeight + 35) / 2 > y) {\r\n\t\t\t\t\telement.classList.add('sortable-hover');\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.classList.remove('sortable-hover');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telement.classList.remove('sortable-hover');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * calls sortingCellMouseMov with the type parameter set to vertical\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t */\r\n\t\tfunction sortingCellMouseMoveVertical(e) {\r\n\t\t\tsortingCellMouseMov(e, 'vertical', this);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * calls sortingCellMouseMov with the type parameter set to horizontal\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t */\r\n\t\tfunction sortingCellMouseMoveHorizontal(e) {\r\n\t\t\tsortingCellMouseMov(e, 'horizontal', this);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * remove sortable-hover class from cell when cursor leave cell\r\n\t\t */\r\n\t\tfunction tdMouseLeave() {\r\n\t\t\tthis.classList.remove('sortable-hover');\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * function for sorting the table vertically by the numeric content of cells\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t * @param {HTMLElement} table\r\n\t\t * @param {string} type\r\n\t\t */\r\n\t\tfunction sortableTable(e, type) {\r\n\t\t\tif (\r\n\t\t\t\te.target &&\r\n\t\t\t\te.target.tagName === 'TD' &&\r\n\t\t\t\t!table.parentNode.classList.contains('wptb-preview-table-manage-cells')\r\n\t\t\t) {\r\n\t\t\t\tconst table = e.currentTarget;\r\n\t\t\t\tlet tableWasSorted = false;\r\n\t\t\t\tif (type === 'vertical' && e.target.dataset.hasOwnProperty('sortedVertical')) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * if table have enabled param topRowAsHeader and sellsStackDirection is column\r\n\t\t\t\t\t * the top and bottom rows that will not be sorted are temporarily removed from the table\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst tableRowsBefore = [];\r\n\t\t\t\t\tconst tableRowsAfter = [];\r\n\t\t\t\t\tif (this.itemsPerHeader && this.itemsPerHeader < table.rows.length) {\r\n\t\t\t\t\t\tWPTB_RecalculateIndexes(table);\r\n\t\t\t\t\t\tconst tableRowsArr = [...table.rows];\r\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\r\n\t\t\t\t\t\tfor (let i = 0; i < tableRowsArr.length; i++) {\r\n\t\t\t\t\t\t\tif (i < e.target.dataset.yIndex) {\r\n\t\t\t\t\t\t\t\ttableRowsBefore.push(tableRowsArr[i]);\r\n\t\t\t\t\t\t\t\ttableLastCont.removeChild(tableRowsArr[i]);\r\n\t\t\t\t\t\t\t} else if (i > parseInt(e.target.dataset.yIndex, 10) + this.itemsPerHeader) {\r\n\t\t\t\t\t\t\t\ttableRowsAfter.push(tableRowsArr[i]);\r\n\t\t\t\t\t\t\t\ttableLastCont.removeChild(tableRowsArr[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tWPTB_RecalculateIndexes(table);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet tds = table.querySelectorAll(`[data-x-index=\"${e.target.dataset.xIndex}\"]`);\r\n\t\t\t\t\ttds = [...tds];\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * preparing table for sorting\r\n\t\t\t\t\t */\r\n\t\t\t\t\tlet rowspan;\r\n\t\t\t\t\tlet rowNum;\r\n\t\t\t\t\ttds.map((td) => {\r\n\t\t\t\t\t\tif (!(rowspan = parseInt(td.rowSpan, 10))) {\r\n\t\t\t\t\t\t\trowspan = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trowNum = td.dataset.yIndex;\r\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableHorizontally(rowNum, table);\r\n\t\t\t\t\t\trowNum += rowspan;\r\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableHorizontally(rowNum, table);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst rowsValuesArr = [];\r\n\t\t\t\t\tlet rowsTdFirst;\r\n\t\t\t\t\tlet tdYCoordsRowSpanPrevious = 0;\r\n\t\t\t\t\tconst tableRowsPushed = [];\r\n\t\t\t\t\tfor (let i = 0; i < tds.length; i++) {\r\n\t\t\t\t\t\tconst tdsChanged = changeSortingTdsCollection(\r\n\t\t\t\t\t\t\te,\r\n\t\t\t\t\t\t\ttable,\r\n\t\t\t\t\t\t\ttds,\r\n\t\t\t\t\t\t\ti,\r\n\t\t\t\t\t\t\ttdYCoordsRowSpanPrevious,\r\n\t\t\t\t\t\t\t'vertical'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (tdsChanged && tdsChanged.hasOwnProperty('i')) {\r\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\r\n\t\t\t\t\t\t\ti = tdsChanged.i;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t} else if (tdsChanged) {\r\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst td = tds[i];\r\n\r\n\t\t\t\t\t\tlet tdRowspan = parseInt(td.rowSpan, 10);\r\n\t\t\t\t\t\tif (!tdRowspan) tdRowspan = 1;\r\n\r\n\t\t\t\t\t\ttdYCoordsRowSpanPrevious = parseInt(td.dataset.yIndex, 10) + tdRowspan;\r\n\r\n\t\t\t\t\t\tconst textElementsValues = textElementsValuesGet(td);\r\n\r\n\t\t\t\t\t\tconst rowsTd = [];\r\n\t\t\t\t\t\tfor (let j = 0; j < tdRowspan; j++) {\r\n\t\t\t\t\t\t\trowsTd.push(table.rows[parseInt(td.dataset.yIndex, 10) + j]);\r\n\t\t\t\t\t\t\ttableRowsPushed.push(parseInt(td.dataset.yIndex, 10) + j);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (td.dataset.yIndex > 0) {\r\n\t\t\t\t\t\t\trowsValuesArr.push({\r\n\t\t\t\t\t\t\t\trowsTd,\r\n\t\t\t\t\t\t\t\tvalue: textElementsValues,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trowsTdFirst = rowsTd;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst orderBy = setSortedAscDataAttr(e, 'sortedVertical');\r\n\t\t\t\t\tif (!orderBy) return;\r\n\r\n\t\t\t\t\tif (rowsValuesArr.length) rowsValuesArr.sort((prev, next) => sortOrder(orderBy, prev, next));\r\n\r\n\t\t\t\t\trowsValuesArr.unshift({ rowsTd: rowsTdFirst });\r\n\r\n\t\t\t\t\tif (rowsValuesArr.length < table.rows.length) {\r\n\t\t\t\t\t\tfor (let i = 0; i < table.rows.length; i++) {\r\n\t\t\t\t\t\t\tif (tableRowsPushed.indexOf(i) > -1) continue;\r\n\t\t\t\t\t\t\tconst rowsTd = [];\r\n\t\t\t\t\t\t\trowsTd.push(table.rows[i]);\r\n\r\n\t\t\t\t\t\t\trowsValuesArr.push({\r\n\t\t\t\t\t\t\t\trowsTd,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst tBody = table.querySelector('tbody');\r\n\t\t\t\t\ttBody.innerHTML = '';\r\n\r\n\t\t\t\t\trowsValuesArr.map((rowsValObj) => {\r\n\t\t\t\t\t\trowsValObj.rowsTd.map((row) => {\r\n\t\t\t\t\t\t\ttBody.appendChild(row);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * returning previously deleted rows\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (tableRowsBefore.length) {\r\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\r\n\t\t\t\t\t\tif (tableLastCont) {\r\n\t\t\t\t\t\t\tconst trRef = tableLastCont.querySelector('tr');\r\n\t\t\t\t\t\t\ttableRowsBefore.map((tr) => {\r\n\t\t\t\t\t\t\t\ttableLastCont.insertBefore(tr, trRef);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tableRowsAfter.length) {\r\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\r\n\t\t\t\t\t\tif (tBody) {\r\n\t\t\t\t\t\t\ttableRowsAfter.map((tr) => {\r\n\t\t\t\t\t\t\t\ttableLastCont.appendChild(tr);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tWPTB_RecalculateIndexes(table);\r\n\r\n\t\t\t\t\tWPTB_CutGlueTable.glueTableHorizontally(table);\r\n\r\n\t\t\t\t\ttableWasSorted = true;\r\n\t\t\t\t} else if (type === 'horizontal' && e.target.dataset.xIndex === '0') {\r\n\t\t\t\t\tlet tds = table.querySelectorAll(`[data-y-index=\"${e.target.dataset.yIndex}\"]`);\r\n\t\t\t\t\ttds = [...tds];\r\n\r\n\t\t\t\t\t// preparing table for sorting\r\n\t\t\t\t\tlet colspan;\r\n\t\t\t\t\tlet colNum;\r\n\t\t\t\t\ttds.map((td) => {\r\n\t\t\t\t\t\tif (!(colspan = parseInt(td.colSpan, 10))) {\r\n\t\t\t\t\t\t\tcolspan = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcolNum = td.dataset.xIndex;\r\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableVertically(colNum, table);\r\n\t\t\t\t\t\tcolNum += colspan;\r\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableVertically(colNum, table);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst columnsValuesArr = [];\r\n\t\t\t\t\tlet columnsTdFirst;\r\n\r\n\t\t\t\t\tlet tdXCoordsColSpanPrevious = 0;\r\n\t\t\t\t\tfor (let i = 0; i < tds.length; i++) {\r\n\t\t\t\t\t\tconst tdsChanged = changeSortingTdsCollection(\r\n\t\t\t\t\t\t\te,\r\n\t\t\t\t\t\t\ttable,\r\n\t\t\t\t\t\t\ttds,\r\n\t\t\t\t\t\t\ti,\r\n\t\t\t\t\t\t\ttdXCoordsColSpanPrevious,\r\n\t\t\t\t\t\t\t'horizontal'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (tdsChanged && tdsChanged.hasOwnProperty('i')) {\r\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\r\n\t\t\t\t\t\t\ti = tdsChanged.i;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t} else if (tdsChanged) {\r\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst td = tds[i];\r\n\t\t\t\t\t\tlet tdColspan = parseInt(td.colSpan, 10);\r\n\t\t\t\t\t\tif (!tdColspan) tdColspan = 1;\r\n\r\n\t\t\t\t\t\ttdXCoordsColSpanPrevious = parseInt(td.dataset.xIndex, 10) + tdColspan;\r\n\r\n\t\t\t\t\t\tconst textElementsValues = textElementsValuesGet(td);\r\n\t\t\t\t\t\tconst columnsTd = [];\r\n\t\t\t\t\t\tfor (let j = 0; j < tdColspan; j++) {\r\n\t\t\t\t\t\t\tconst tdsColumn = [\r\n\t\t\t\t\t\t\t\t...table.querySelectorAll(`[data-x-index=\"${parseInt(td.dataset.xIndex, 10) + j}\"]`),\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\tcolumnsTd.push(tdsColumn);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (td.dataset.xIndex > 0) {\r\n\t\t\t\t\t\t\tcolumnsValuesArr.push({\r\n\t\t\t\t\t\t\t\tcolumnsTd,\r\n\t\t\t\t\t\t\t\tvalue: textElementsValues,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcolumnsTdFirst = columnsTd;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst orderBy = setSortedAscDataAttr(e, 'sortedHorizontal');\r\n\t\t\t\t\tif (!orderBy) return;\r\n\r\n\t\t\t\t\tif (columnsValuesArr.length) columnsValuesArr.sort((prev, next) => sortOrder(orderBy, prev, next));\r\n\r\n\t\t\t\t\tcolumnsValuesArr.unshift({ columnsTd: columnsTdFirst });\r\n\r\n\t\t\t\t\tif (columnsValuesArr.length < table.maxCols) {\r\n\t\t\t\t\t\tconst difference = table.maxCols - columnsValuesArr.length;\r\n\t\t\t\t\t\tfor (let i = 0; i < difference; i++) {\r\n\t\t\t\t\t\t\tconst tdsColumn = [\r\n\t\t\t\t\t\t\t\t...table.querySelectorAll(\r\n\t\t\t\t\t\t\t\t\t`[data-x-index=\"${parseInt(table.maxCols, 10) - parseInt(difference, 10) + i}\"]`\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t];\r\n\r\n\t\t\t\t\t\t\tcolumnsValuesArr.push({\r\n\t\t\t\t\t\t\t\tcolumnsTd: [tdsColumn],\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < table.rows.length; i++) {\r\n\t\t\t\t\t\ttable.rows[i].innerHTML = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcolumnsValuesArr.map((columnsValObj) => {\r\n\t\t\t\t\t\tcolumnsValObj.columnsTd.map((tdsColumn) => {\r\n\t\t\t\t\t\t\ttdsColumn.map((td) => {\r\n\t\t\t\t\t\t\t\ttable.rows[td.dataset.yIndex].appendChild(td);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tWPTB_RecalculateIndexes(table);\r\n\r\n\t\t\t\t\tWPTB_CutGlueTable.glueTableVertically(table);\r\n\r\n\t\t\t\t\ttableWasSorted = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (tableWasSorted) {\r\n\t\t\t\t\tremoveCellsAttrAfterDivision(table);\r\n\r\n\t\t\t\t\tif (table.hasOwnProperty('tableSM')) {\r\n\t\t\t\t\t\tconst tableSM = table.tableSM();\r\n\t\t\t\t\t\tnew tableSM().tableStateSet();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.reassignElementsStyles('td');\r\n\t\t\t\t\tthis.reassignElementsStyles('tr');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Function that sets the data-attribute with the number of the row or column\r\n\t\t * that the table was sorted by. Returns the number of a row or column\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t * @param {string} dataAttr\r\n\t\t * @returns {null|boolean}\r\n\t\t */\r\n\t\tfunction setSortedAscDataAttr(e, dataAttr) {\r\n\t\t\tif (\r\n\t\t\t\te.currentTarget &&\r\n\t\t\t\t(e.currentTarget.classList.contains('wptb-preview-table') ||\r\n\t\t\t\t\te.currentTarget.classList.contains('wptb-preview-table-mobile'))\r\n\t\t\t) {\r\n\t\t\t\tif (!e.target.dataset[dataAttr] || e.target.dataset[dataAttr] === 'ask') {\r\n\t\t\t\t\te.target.dataset[dataAttr] = 'desk';\r\n\t\t\t\t} else {\r\n\t\t\t\t\te.target.dataset[dataAttr] = 'ask';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn e.target.dataset[dataAttr];\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * defines the sorting order\r\n\t\t *\r\n\t\t * @param {string} orderBy\r\n\t\t * @param prev\r\n\t\t * @param next\r\n\t\t * @returns {number}\r\n\t\t */\r\n\t\tfunction sortOrder(orderBy = 'ask', prev, next) {\r\n\t\t\tlet prevValue = prev.value;\r\n\t\t\tlet nextValue = next.value;\r\n\t\t\tif (parseInt(prevValue) && parseInt(nextValue)) {\r\n\t\t\t\tprevValue = parseInt(prevValue);\r\n\t\t\t\tnextValue = parseInt(nextValue);\r\n\t\t\t}\r\n\r\n\t\t\tif (orderBy === 'ask') {\r\n\t\t\t\tif (prevValue < nextValue) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (prevValue === nextValue) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (prevValue < nextValue) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (prevValue === nextValue) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * return cell text elements values\r\n\t\t *\r\n\t\t * @param cell {HTMLElement}\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tfunction textElementsValuesGet(cell) {\r\n\t\t\tlet textElements = cell.querySelectorAll('.wptb-text-container');\r\n\t\t\ttextElements = [...textElements];\r\n\t\t\tlet value = '';\r\n\t\t\tfor (let j = 0; j < textElements.length; j++) {\r\n\t\t\t\tvalue += textElements[j].innerText;\r\n\t\t\t\tif (j !== textElements.length - 1) value += ' ';\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * adds cells to the collection of cells in the row or column that the table is sorted by.\r\n\t\t * These added cells are not originally were added in the collection,\r\n\t\t * because they are combined with cells from higher rows or left-side columns\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t * @param {HTMLElement} table\r\n\t\t * @param {array} tds\r\n\t\t * @param {number} i\r\n\t\t * @param {number} tdIndexSpanPrev\r\n\t\t * @param {string} type\r\n\t\t * @returns {{tds: *}|boolean|{tds: *, i: *}}\r\n\t\t */\r\n\t\tfunction changeSortingTdsCollection(e, table, tds, i, tdIndexSpanPrev, type) {\r\n\t\t\tconst td = tds[i];\r\n\t\t\tlet tdsCollectionChanged = false;\r\n\t\t\tlet collectionTds;\r\n\t\t\tlet collectionTdsJSpan;\r\n\t\t\tlet collectionTdsJSpanProperty;\r\n\t\t\tlet indexName;\r\n\t\t\tlet indexNameCamelCase;\r\n\t\t\tlet indexNamePerpendicularCamelCase;\r\n\t\t\tlet tdSpanProperty;\r\n\t\t\t// max rows or columns column\r\n\t\t\tlet tableGroupCount;\r\n\r\n\t\t\tif (type === 'vertical') {\r\n\t\t\t\tcollectionTdsJSpanProperty = 'colSpan';\r\n\t\t\t\tindexName = 'data-y-index';\r\n\t\t\t\tindexNameCamelCase = 'yIndex';\r\n\t\t\t\tindexNamePerpendicularCamelCase = 'xIndex';\r\n\t\t\t\ttdSpanProperty = 'rowSpan';\r\n\t\t\t\ttableGroupCount = table.rows.length;\r\n\t\t\t} else if (type === 'horizontal') {\r\n\t\t\t\tcollectionTdsJSpanProperty = 'rowSpan';\r\n\t\t\t\tindexName = 'data-x-index';\r\n\t\t\t\tindexNameCamelCase = 'xIndex';\r\n\t\t\t\tindexNamePerpendicularCamelCase = 'yIndex';\r\n\t\t\t\ttdSpanProperty = 'colSpan';\r\n\t\t\t\ttableGroupCount = table.maxCols;\r\n\t\t\t}\r\n\r\n\t\t\tif (td.dataset[indexNameCamelCase] - tdIndexSpanPrev > 0) {\r\n\t\t\t\tcollectionTds = table.querySelectorAll(`[${indexName}=\"${tdIndexSpanPrev}\"]`);\r\n\r\n\t\t\t\tfor (let j = 0; j < collectionTds.length; j++) {\r\n\t\t\t\t\tcollectionTdsJSpan = collectionTds[j][collectionTdsJSpanProperty];\r\n\t\t\t\t\tif (!collectionTdsJSpan) collectionTdsJSpan = 1;\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tcollectionTds[j].dataset[indexNamePerpendicularCamelCase] <\r\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase] &&\r\n\t\t\t\t\t\tparseInt(collectionTds[j].dataset[indexNamePerpendicularCamelCase], 10) +\r\n\t\t\t\t\t\t\tparseInt(collectionTdsJSpan, 10) >\r\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ttds.splice(i, 0, collectionTds[j]);\r\n\t\t\t\t\t\ttdsCollectionChanged = true;\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tdsCollectionChanged) return { tds, i };\r\n\r\n\t\t\tlet tdSpan = parseInt(td[tdSpanProperty], 10);\r\n\t\t\tif (!tdSpan) tdSpan = 1;\r\n\t\t\tif (i == tds.length - 1 && parseInt(td.dataset[indexNameCamelCase], 10) + tdSpan < tableGroupCount) {\r\n\t\t\t\tcollectionTds = table.querySelectorAll(\r\n\t\t\t\t\t`[${indexName}=\"${parseInt(td.dataset[indexNameCamelCase], 10) + tdSpan}\"]`\r\n\t\t\t\t);\r\n\t\t\t\tfor (let j = 0; j < collectionTds.length; j++) {\r\n\t\t\t\t\tcollectionTdsJSpan = collectionTds[j][collectionTdsJSpanProperty];\r\n\t\t\t\t\tif (!collectionTdsJSpan) collectionTdsJSpan = 1;\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tcollectionTds[j].dataset[indexNamePerpendicularCamelCase] <\r\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase] &&\r\n\t\t\t\t\t\tparseInt(collectionTds[j].dataset[indexNamePerpendicularCamelCase], 10) +\r\n\t\t\t\t\t\t\tparseInt(collectionTdsJSpan, 10) >\r\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase]\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\ttds.push(collectionTds[j]);\r\n\t\t\t\t\t\ttdsCollectionChanged = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tdsCollectionChanged) return { tds };\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * remove cells attributes which were used for division table\r\n\t\t *\r\n\t\t * @param {HTMLElement} table\r\n\t\t */\r\n\t\tfunction removeCellsAttrAfterDivision(table) {\r\n\t\t\tconst tdsAll = [...table.getElementsByTagName('td')];\r\n\t\t\tfor (let i = 0; i < tdsAll.length; i++) {\r\n\t\t\t\tif (tdsAll[i].hasAttribute('data-same-cell-before-division')) {\r\n\t\t\t\t\ttdsAll[i].removeAttribute('data-same-cell-before-division');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * function for run sorting table vertically\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t */\r\n\t\tthis.sortableTableVerticalStart = function (e) {\r\n\t\t\tsortableTable.call(thisObject, e, 'vertical');\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * function for run sorting table horizontally\r\n\t\t *\r\n\t\t * @param {event} e\r\n\t\t */\r\n\t\tthis.sortableTableHorizontalStart = function (e) {\r\n\t\t\tsortableTable.call(thisObject, e, 'horizontal');\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treturn WPTB_SortTable;\r\n});\r\n","const WPTB_RecalculateIndexes = function (table) {\r\n    let trs = table.getElementsByTagName( 'tr' ),\r\n        tds, maxCols = 0, maxColsFull = 0, tdsArr = [];\r\n\r\n    for ( let i = 0; i < trs.length; i++ ) {\r\n        tds = trs[i].getElementsByTagName( 'td' );\r\n\r\n        if ( tdsArr[i] == undefined ) {\r\n            tdsArr[i] = [];\r\n        }\r\n\r\n        let jMainIter = 0;\r\n        for ( let j = 0; j < tds.length; j++ ) {\r\n            if ( tdsArr[i][j] != undefined ) {\r\n                for ( let y = 0; y < 100; y++ ) {\r\n                    if ( tdsArr[i][jMainIter] != undefined ) {\r\n                        jMainIter++;\r\n                        continue;\r\n                    }\r\n                    tdsArr[i][jMainIter] = tds[j];\r\n                    tds[j].dataset.xIndex = jMainIter;\r\n                    break;\r\n                }\r\n            } else {\r\n                tdsArr[i][j] = tds[j];\r\n                tds[j].dataset.xIndex = jMainIter;\r\n            }\r\n            tds[j].dataset.yIndex = i;\r\n\r\n            if ( tds[j].colSpan > 1 ) {\r\n                for ( let k = 1; k < tds[j].colSpan; k++ ) {\r\n                    jMainIter++;\r\n                    tdsArr[i][jMainIter] = 'tdDummy';\r\n                }\r\n            }\r\n\r\n            if ( tds[j].rowSpan > 1 ) {\r\n                for ( let x = 1; x < tds[j].rowSpan; x++ ) {\r\n                    if ( tdsArr[i + x] == undefined ) {\r\n                        tdsArr[i + x] = [];\r\n                    }\r\n                    for ( let z = 0; z < tds[j].colSpan; z++ ) {\r\n                        tdsArr[i + x][jMainIter - tds[j].colSpan + 1 + z ] = 'tdDummy';\r\n                    }\r\n                }\r\n            }\r\n            jMainIter++;\r\n        }\r\n\r\n        if ( tds.length > maxCols ) {\r\n            maxCols = tds.length;\r\n        }\r\n\r\n        if( i == 0 ) {\r\n            maxColsFull = jMainIter;\r\n        }\r\n    }\r\n    table.columns = maxCols;\r\n    table.maxCols = maxColsFull;\r\n}\r\n","/**\r\n * Responsive class assignment for frontend operations.\r\n *\r\n * This file can be used as an UMD.\r\n */\r\n(function assignToGlobal(key, context, factory) {\r\n\tif (typeof exports === 'object' && typeof module !== 'undefined') {\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\t// eslint-disable-next-line no-param-reassign\r\n\t\tcontext[key] = factory();\r\n\t}\r\n\t// eslint-disable-next-line no-restricted-globals\r\n})('WPTB_ResponsiveFrontend', self || global, () => {\r\n\t/**\r\n\t * Log a message to console.\r\n\t *\r\n\t * @param {string} message message to be logged\r\n\t * @param {string} type console log type (e.g info, warn, error)\r\n\t * @throws An error will be given for invalid type value\r\n\t */\r\n\tfunction logToConsole(message, type = 'log') {\r\n\t\tif (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tif (console[type]) {\r\n\t\t\t\t// eslint-disable-next-line no-console\r\n\t\t\t\tconsole[type](`[WPTB]: ${message}`);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`no logging type found with given type value of [${type}]`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Object implementation for cell element operations.\r\n\t * If an empty cellElement parameter is given, a fresh cell element will be created.\r\n\t *\r\n\t * @param {HTMLElement | null} cellElement cell element\r\n\t * @param {null | CellObject} reference main cell object if the current cell is a reference to that cell in cases like merged cells\r\n\t * @class\r\n\t */\r\n\tfunction CellObject(cellElement, reference = null) {\r\n\t\t// cell element\r\n\t\tthis.element = cellElement;\r\n\r\n\t\tthis.referenceObject = reference;\r\n\r\n\t\t// variable for deciding part of merged cells to be visible or not\r\n\t\tthis.mergedRenderStatus = true;\r\n\r\n\t\t// connected merged cell references\r\n\t\tthis.mergedCells = {\r\n\t\t\trow: [],\r\n\t\t\tcolumn: [],\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get merged render status.\r\n\t\t *\r\n\t\t * @return {boolean} render status\r\n\t\t */\r\n\t\tthis.getMergedRenderStatus = () => {\r\n\t\t\treturn this.mergedRenderStatus;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Set merged render status.\r\n\t\t *\r\n\t\t * @param {boolean} status render status\r\n\t\t */\r\n\t\tthis.setMergedRenderStatus = (status) => {\r\n\t\t\tthis.mergedRenderStatus = status;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add merged cells.\r\n\t\t *\r\n\t\t * @param {string} mergeType merge type\r\n\t\t * @param {CellObject} cellObj cell object instance\r\n\t\t */\r\n\t\tthis.addToMergedCells = (mergeType, cellObj) => {\r\n\t\t\tthis.mergedCells[mergeType].push(cellObj);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Determine if current cell is a reference to a main cell.\r\n\t\t *\r\n\t\t * @return {boolean} a reference or not\r\n\t\t */\r\n\t\tthis.isReference = () => {\r\n\t\t\treturn this.referenceObject !== null;\r\n\t\t};\r\n\r\n\t\tif (this.isReference()) {\r\n\t\t\tthis.element = cellElement.cloneNode(true);\r\n\t\t}\r\n\r\n\t\t// modifications object\r\n\t\t// this object will keep track of the modifications that has done to the cell to make sure we can roll them back to their original values\r\n\t\tthis.modifications = {};\r\n\r\n\t\t// spans object for cell's original merge values\r\n\t\tthis.spans = {\r\n\t\t\trow: 1,\r\n\t\t\tcol: 1,\r\n\t\t};\r\n\r\n\t\tthis.remainingSpans = {\r\n\t\t\trow: 0,\r\n\t\t\tcol: 0,\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Cache cell element's original span values.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis.cacheSpanValues = () => {\r\n\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\tObject.keys(this.spans).map((k) => {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.spans, k)) {\r\n\t\t\t\t\tconst defaultVal = this.spans[k];\r\n\r\n\t\t\t\t\tthis.spans[k] = this.element.getAttribute(`${k}Span`) || defaultVal;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tthis.cacheSpanValues();\r\n\r\n\t\t/**\r\n\t\t * Get original span value of cell object.\r\n\t\t *\r\n\t\t * @param {string} spanType span type, available values are row-column\r\n\t\t * @param {boolean} fromElement instead of original value, get the assigned span value from HTMLElement itself\r\n\t\t * @throws An error will be given for invalid span type\r\n\t\t */\r\n\t\tthis.getSpan = (spanType, fromElement = false) => {\r\n\t\t\tconst spanVal = fromElement ? this.getElement().getAttribute(`${spanType}Span`) : this.spans[spanType];\r\n\t\t\tif (spanVal) {\r\n\t\t\t\treturn spanVal;\r\n\t\t\t}\r\n\t\t\tthrow new Error(`no span value found with the given type of [${spanType}]`);\r\n\t\t};\r\n\r\n\t\tthis.getRemainingSpans = (spanType) => {\r\n\t\t\treturn this.remainingSpans[spanType];\r\n\t\t};\r\n\r\n\t\tthis.setRemainingSpans = (spanType, value) => {\r\n\t\t\tthis.remainingSpans[spanType] = value;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get cell element.\r\n\t\t *\r\n\t\t * @return {HTMLElement} cell element\r\n\t\t */\r\n\t\tthis.getElement = () => {\r\n\t\t\treturn this.element;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Create a cell element.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @return {HTMLTableDataCellElement}\r\n\t\t */\r\n\t\tthis.createCellElement = () => {\r\n\t\t\treturn document.createElement('td');\r\n\t\t};\r\n\r\n\t\t// create a new cell element if no cellElement argument is given with constructor function\r\n\t\tif (!cellElement) {\r\n\t\t\tthis.element = this.createCellElement();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Add attribute to cell element.\r\n\t\t *\r\n\t\t * This function have the ability to add/remove attributes from cell element.\r\n\t\t * All attributes modified with this function will be cached with their before value for an easy reset on demand.\r\n\t\t *\r\n\t\t * @param {string} attributeKey attribute name in camelCase format, for sub-keys, use dot object notation\r\n\t\t * @param {any} attributeValue attribute value\r\n\t\t * @param {boolean} [append=false] append the value or replace it\r\n\t\t * @param {string} [glue=,] glue to join attribute value if append option is enabled\r\n\t\t */\r\n\t\tthis.setAttribute = (attributeKey, attributeValue, append = false, glue = ',') => {\r\n\t\t\tlet defaultVal = this.getElement()[attributeKey];\r\n\r\n\t\t\t// if attribute value is a function or an object, it means we pulled a whole declaration instead of only inline attribute values, in that case, use getAttribute to get only inline values related to that attribute\r\n\t\t\tif (typeof defaultVal === 'function' || typeof defaultVal === 'object') {\r\n\t\t\t\tdefaultVal = this.getElement().getAttribute(attributeKey);\r\n\t\t\t}\r\n\r\n\t\t\t// if there is already a default value defined, use that instead\r\n\t\t\tif (this.modifications[attributeKey]) {\r\n\t\t\t\tdefaultVal = this.modifications[attributeKey].default;\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVal = defaultVal;\r\n\r\n\t\t\t// join attributes\r\n\t\t\tif (append) {\r\n\t\t\t\tcurrentVal += `${currentVal}${glue}${attributeValue}`;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentVal = attributeValue;\r\n\t\t\t}\r\n\r\n\t\t\tthis.modifications[attributeKey] = { value: currentVal, default: defaultVal };\r\n\r\n\t\t\tthis.getElement()[attributeKey] = currentVal;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Set row/colspan for cell.\r\n\t\t *\r\n\t\t * @param {string} spanType span type\r\n\t\t * @param {number} value value to assign to span\r\n\t\t * @return {boolean} if any space left to render the element\r\n\t\t */\r\n\t\tthis.setSpan = (spanType, value) => {\r\n\t\t\t// working on main cell\r\n\t\t\tif (!this.isReference()) {\r\n\t\t\t\tconst valueToApply = this.getSpan(spanType) - value < 0 ? this.getSpan(spanType) : value;\r\n\r\n\t\t\t\tthis.setAttribute(`${spanType}Span`, valueToApply);\r\n\r\n\t\t\t\t// calculate remaining cells amount to merge in this span type\r\n\t\t\t\tthis.setRemainingSpans(spanType, this.getSpan(spanType) - valueToApply);\r\n\r\n\t\t\t\t// set visibility of connected merge group cells to false to not render them since we added necessary span values to main cell which will leak into their position\r\n\t\t\t\tfor (let mc = 0; mc < valueToApply - 1; mc += 1) {\r\n\t\t\t\t\tif (this.mergedCells[spanType] && this.mergedCells[spanType][mc]) {\r\n\t\t\t\t\t\tthis.mergedCells[spanType][mc].setMergedRenderStatus(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// working on reference\r\n\r\n\t\t\tif (!this.getMergedRenderStatus()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tconst remainingVal = this.referenceObject.getRemainingSpans(spanType);\r\n\r\n\t\t\t// no space left to put cell\r\n\t\t\tif (remainingVal === 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tconst valueToApply = remainingVal - value < 0 ? remainingVal : value;\r\n\r\n\t\t\tconst remainingParentSpans = remainingVal - valueToApply;\r\n\t\t\tthis.referenceObject.setRemainingSpans(spanType, remainingParentSpans);\r\n\r\n\t\t\tthis.setAttribute(`${spanType}Span`, valueToApply);\r\n\r\n\t\t\t// change render status of remaining connected merge cells\r\n\t\t\tif (remainingParentSpans !== 0) {\r\n\t\t\t\tconst totalConnectedCells = this.referenceObject.mergedCells[spanType].length;\r\n\t\t\t\tconst startIndex = totalConnectedCells - remainingVal + 1;\r\n\t\t\t\tconst endIndex = startIndex + valueToApply - 1;\r\n\r\n\t\t\t\tfor (let mc = startIndex; mc < endIndex; mc += 1) {\r\n\t\t\t\t\tthis.mergedCells[spanType][mc].setMergedRenderStatus(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Reset a modified attribute to its default value\r\n\t\t *\r\n\t\t * @param {string} attributeKey attribute name\r\n\t\t */\r\n\t\tthis.resetAttribute = (attributeKey) => {\r\n\t\t\tif (this.modifications[attributeKey]) {\r\n\t\t\t\tthis.getElement()[attributeKey] = this.modifications[attributeKey].default;\r\n\t\t\t\tthis.modifications[attributeKey] = undefined;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Reset all modified attributes of cell element to their default values.\r\n\t\t */\r\n\t\tthis.resetAllAttributes = () => {\r\n\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\tObject.keys(this.modifications).map((k) => {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.modifications, k)) {\r\n\t\t\t\t\tthis.resetAttribute(k);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tgetElement: this.getElement,\r\n\t\t\tel: this.element,\r\n\t\t\tsetAttribute: this.setAttribute,\r\n\t\t\tresetAllAttributes: this.resetAllAttributes,\r\n\t\t\tgetSpan: this.getSpan,\r\n\t\t\tsetSpan: this.setSpan,\r\n\t\t\tgetRemainingSpans: this.getRemainingSpans,\r\n\t\t\tsetRemainingSpans: this.setRemainingSpans,\r\n\t\t\tisReference: this.isReference,\r\n\t\t\taddToMergedCells: this.addToMergedCells,\r\n\t\t\tmergedCells: this.mergedCells,\r\n\t\t\tsetMergedRenderStatus: this.setMergedRenderStatus,\r\n\t\t\tgetMergedRenderStatus: this.getMergedRenderStatus,\r\n\t\t};\r\n\t}\r\n\r\n\tCellObject.spanTypes = { row: 'row', column: 'col' };\r\n\r\n\t/**\r\n\t * Object implementation for table element operations.\r\n\t *\r\n\t * @param {HTMLElement} tableEl table element\r\n\t * @return {Object} instance\r\n\t * @class\r\n\t */\r\n\tfunction TableObject(tableEl) {\r\n\t\t/**\r\n\t\t * Table element.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {HTMLElement}\r\n\t\t */\r\n\t\tthis.tableElement = tableEl;\r\n\r\n\t\t/**\r\n\t\t * Parsed table object.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.parsedTable = [];\r\n\r\n\t\t/**\r\n\t\t * An array of created table rows elements that are id'd according to their index in array.\r\n\t\t *\r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.rowCache = [];\r\n\r\n\t\t/**\r\n\t\t * Original table elements minus the cells.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis.originals = { rows: [] };\r\n\r\n\t\t/**\r\n\t\t * Row colors of original table.\r\n\t\t *\r\n\t\t * @type {{even: string, header: string, odd: string}}\r\n\t\t */\r\n\t\tthis.rowColors = {\r\n\t\t\theader: null,\r\n\t\t\teven: null,\r\n\t\t\todd: null,\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add cell to parsed array.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {number} r row id\r\n\t\t * @param {number} c column id\r\n\t\t * @param {CellObject} cellObject cell object to add to parsed array\r\n\t\t */\r\n\t\tthis.addToParsed = (r, c, cellObject) => {\r\n\t\t\tif (!this.parsedTable[r]) {\r\n\t\t\t\tthis.parsedTable[r] = [];\r\n\t\t\t}\r\n\r\n\t\t\tthis.parsedTable[r][c] = cellObject;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Assign table cells into row and column numbers.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis.parseTable = () => {\r\n\t\t\tconst rows = Array.from(this.tableElement.querySelectorAll('tr'));\r\n\r\n\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\trows.map((r, ri) => {\r\n\t\t\t\t// cache original rows for future use\r\n\t\t\t\tthis.originals.rows.push(r);\r\n\r\n\t\t\t\tconst cells = Array.from(r.querySelectorAll('td'));\r\n\r\n\t\t\t\tlet currentIndex = 0;\r\n\t\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\t\tcells.map((c, ci) => {\r\n\t\t\t\t\tconst currentCellObject = new CellObject(c);\r\n\t\t\t\t\tthis.addToParsed(ri, currentIndex, currentCellObject);\r\n\t\t\t\t\tcurrentIndex += 1;\r\n\r\n\t\t\t\t\tconst spanRow = currentCellObject.getSpan(CellObject.spanTypes.row);\r\n\t\t\t\t\tconst spanCol = currentCellObject.getSpan(CellObject.spanTypes.column);\r\n\r\n\t\t\t\t\tif (spanRow > 1) {\r\n\t\t\t\t\t\tfor (let sr = 1; sr < spanRow; sr += 1) {\r\n\t\t\t\t\t\t\tconst referenceCell = new CellObject(c, currentCellObject);\r\n\t\t\t\t\t\t\tcurrentCellObject.addToMergedCells('row', referenceCell);\r\n\t\t\t\t\t\t\tthis.addToParsed(ri + sr, ci, referenceCell);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (spanCol > 1) {\r\n\t\t\t\t\t\tfor (let sc = 1; sc < spanCol; sc += 1) {\r\n\t\t\t\t\t\t\tconst referenceCell = new CellObject(c, currentCellObject);\r\n\t\t\t\t\t\t\tcurrentCellObject.addToMergedCells('column', referenceCell);\r\n\t\t\t\t\t\t\tthis.addToParsed(ri, currentIndex, referenceCell);\r\n\t\t\t\t\t\t\tcurrentIndex += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.parseRowColors(rows);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Parse row colors of original table for futures uses.\r\n\t\t *\r\n\t\t * @param {[HTMLElement]} rows html row elements\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis.parseRowColors = (rows) => {\r\n\t\t\tif (!rows || rows.length <= 0) {\r\n\t\t\t\tlogToConsole('no rows are found to parse their colors', 'error');\r\n\t\t\t}\r\n\r\n\t\t\t// get row colors if they are defined as datasets on table element\r\n\t\t\tconst headerDatasetColor = this.tableElement.dataset.wptbHeaderBackgroundColor;\r\n\t\t\tconst evenRowDatasetColor = this.tableElement.dataset.wptbEvenRowBackgroundColor;\r\n\t\t\tconst oddRowDatasetColor = this.tableElement.dataset.wptbOddRowBackgroundColor;\r\n\r\n\t\t\t// header row color\r\n\t\t\tthis.rowColors.header =\r\n\t\t\t\t// eslint-disable-next-line no-nested-ternary\r\n\t\t\t\theaderDatasetColor !== undefined\r\n\t\t\t\t\t? headerDatasetColor\r\n\t\t\t\t\t: rows[0].style.backgroundColor === ''\r\n\t\t\t\t\t? null\r\n\t\t\t\t\t: rows[0].style.backgroundColor;\r\n\r\n\t\t\t// calculate needed number of rows to get even and odd row background colors\r\n\t\t\t// eslint-disable-next-line no-nested-ternary\r\n\t\t\tconst rowsNeeded = rows.length / 3 >= 1 ? 0 : rows.length === 1 ? 2 : (rows.length - 1) % 2;\r\n\r\n\t\t\t// create additional rows and add them to table to get their row background colors since table row count may be lower to get even/odd rows\r\n\t\t\tfor (let rn = 0; rn < rowsNeeded; rn += 1) {\r\n\t\t\t\tconst tempRow = document.createElement('tr');\r\n\r\n\t\t\t\tthis.tableElement.querySelector('tbody').appendChild(tempRow);\r\n\t\t\t\trows.push(tempRow);\r\n\t\t\t}\r\n\r\n\t\t\t// even & odd row colors\r\n\t\t\t// dataset colors have priority over colors gathered from computed row styles\r\n\t\t\tthis.rowColors.even = evenRowDatasetColor || getComputedStyle(rows[1]).backgroundColor;\r\n\t\t\tthis.rowColors.odd = evenRowDatasetColor ? oddRowDatasetColor : getComputedStyle(rows[2]).backgroundColor;\r\n\r\n\t\t\t// remove created rows from DOM\r\n\t\t\tfor (let r = 0; r < rowsNeeded; r += 1) {\r\n\t\t\t\trows[rows.length - (r + 1)].remove();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add a row to the table.\r\n\t\t *\r\n\t\t * @param {Array} classList an array of class names to be added to row\r\n\t\t * @param {boolean} fromOriginals use rows from original table instead of creating a new one\r\n\t\t * @param {number} originalIndex original row index\r\n\t\t */\r\n\t\tthis.addRow = (classList, fromOriginals = false, originalIndex = 0) => {\r\n\t\t\tif (!Array.isArray(classList)) {\r\n\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\tclassList = [classList];\r\n\t\t\t}\r\n\r\n\t\t\tconst tableBody = this.tableElement.querySelector('tbody');\r\n\t\t\tlet tempRow;\r\n\r\n\t\t\tif (!fromOriginals) {\r\n\t\t\t\tconst range = document.createRange();\r\n\t\t\t\trange.setStart(tableBody, 0);\r\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\r\n\t\t\t\ttempRow = range.createContextualFragment(`<tr class=\"${classList.join(' ')}\"></tr>`).childNodes[0];\r\n\t\t\t} else {\r\n\t\t\t\ttempRow = this.originals.rows[originalIndex];\r\n\t\t\t}\r\n\r\n\t\t\t// add row to table body\r\n\t\t\ttableBody.appendChild(tempRow);\r\n\r\n\t\t\t// cache row for future use\r\n\t\t\tthis.rowCache.push(tempRow);\r\n\r\n\t\t\treturn { el: tempRow, id: this.rowCache.length - 1 };\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clear the contents of table element.\r\n\t\t */\r\n\t\tthis.clearTable = () => {\r\n\t\t\t// clear row cache\r\n\t\t\tthis.rowCache = [];\r\n\r\n\t\t\t// clear children of `tbody` element\r\n\t\t\tthis.tableElement.querySelector('tbody').innerHTML = '';\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get row element from cache.\r\n\t\t *\r\n\t\t * @param {number} id row id\r\n\t\t * @return {null|HTMLElement} row element if present or null if not\r\n\t\t */\r\n\t\tthis.getRow = (id) => {\r\n\t\t\tif (this.rowCache[id]) {\r\n\t\t\t\treturn this.rowCache[id];\r\n\t\t\t}\r\n\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tlogToConsole(`no row with id [${id}] found in the cache.`, 'warn');\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get maximum number of rows available at table.\r\n\t\t *\r\n\t\t * @return {number} maximum amount of rows\r\n\t\t */\r\n\t\tthis.maxRows = () => {\r\n\t\t\treturn this.parsedTable.length;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get the number of maximum available column count in the table.\r\n\t\t *\r\n\t\t * @param mergedHeader\r\n\t\t * @return {number} maximum available column count\r\n\t\t */\r\n\t\tthis.maxColumns = (mergedHeader) => {\r\n\t\t\tif (mergedHeader) {\r\n\t\t\t\treturn this.parsedTable[0].length;\r\n\t\t\t}\r\n\r\n\t\t\treturn this.parsedTable.reduce((p, c) => {\r\n\t\t\t\tif (c.length > p) {\r\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\tp = c.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn p;\r\n\t\t\t}, 0);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get the table cell at specified row-column location.\r\n\t\t *\r\n\t\t * As in arrays, row and column numbering starts from number 0.\r\n\t\t *\r\n\t\t * @param {number} r row number\r\n\t\t * @param {number} c column number\r\n\t\t * @param {boolean} returnObject return object instead of HTMLElement\r\n\t\t * @return {HTMLElement | null | CellObject} element if address is possible, null if not\r\n\t\t */\r\n\t\tthis.getCell = (r, c, returnObject = false) => {\r\n\t\t\ttry {\r\n\t\t\t\tif (this.parsedTable[r][c]) {\r\n\t\t\t\t\tif (returnObject) {\r\n\t\t\t\t\t\treturn this.parsedTable[r][c];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.parsedTable[r][c].el;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// eslint-disable-next-line no-console\r\n\t\t\t\tlogToConsole(`no cell found at the given address of [${r}-${c}]`, 'warn');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tlogToConsole(`no cell found at the given address of [${r}-${c}]`, 'warn');\r\n\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get cells at a given row.\r\n\t\t *\r\n\t\t * @param {number} rowId row id\r\n\t\t * @param {boolean} returnObj return an array of CellObject instead\r\n\t\t * @return {Array} cells in row\r\n\t\t */\r\n\t\tthis.getCellsAtRow = (rowId, returnObj = false) => {\r\n\t\t\tconst cells = [];\r\n\t\t\tfor (let c = 0; c < this.maxColumns(); c += 1) {\r\n\t\t\t\tconst tempCell = this.getCell(rowId, c, returnObj);\r\n\t\t\t\tif (tempCell) {\r\n\t\t\t\t\tcells.push(tempCell);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn cells;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Append the cell with given ids to a cached row\r\n\t\t *\r\n\t\t * @param {number} cellRowId cell row id\r\n\t\t * @param {number} cellColumnId cell column id\r\n\t\t * @param {number} rowId id of row in row cache\r\n\t\t */\r\n\t\tthis.appendToRow = (cellRowId, cellColumnId, rowId) => {\r\n\t\t\tconst cachedRow = this.getRow(rowId);\r\n\t\t\tconst cell = this.getCell(cellRowId, cellColumnId, true);\r\n\r\n\t\t\tif (cell && cachedRow) {\r\n\t\t\t\tcachedRow.appendChild(cell.getElement());\r\n\t\t\t}\r\n\t\t\treturn cell;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Append html element to a cached row.\r\n\t\t *\r\n\t\t * @param {HTMLElement} el element\r\n\t\t * @param {number} rowId if of row in row cache\r\n\t\t */\r\n\t\tthis.appendElementToRow = (el, rowId) => {\r\n\t\t\tconst cachedRow = this.getRow(rowId);\r\n\r\n\t\t\tif (el && cachedRow) {\r\n\t\t\t\tcachedRow.appendChild(el);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add cell object to a cached row.\r\n\t\t *\r\n\t\t * @param {CellObject} cellObj cell object\r\n\t\t * @param {number} rowId row id\r\n\t\t */\r\n\t\tthis.appendObjectToRow = (cellObj, rowId) => {\r\n\t\t\tconst cachedRow = this.getRow(rowId);\r\n\t\t\tif (cellObj && cachedRow) {\r\n\t\t\t\tcachedRow.appendChild(cellObj.getElement());\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getParsedTable = () => {\r\n\t\t\treturn this.parsedTable;\r\n\t\t};\r\n\r\n\t\tthis.parseTable();\r\n\r\n\t\treturn {\r\n\t\t\tmaxRows: this.maxRows,\r\n\t\t\tmaxColumns: this.maxColumns,\r\n\t\t\taddRow: this.addRow,\r\n\t\t\tclearTable: this.clearTable,\r\n\t\t\tgetCell: this.getCell,\r\n\t\t\tappendToRow: this.appendToRow,\r\n\t\t\tappendElementToRow: this.appendElementToRow,\r\n\t\t\tappendObjectToRow: this.appendObjectToRow,\r\n\t\t\tgetCellsAtRow: this.getCellsAtRow,\r\n\t\t\tel: this.tableElement,\r\n\t\t\trowColors: this.rowColors,\r\n\t\t\tgetParsedTable: this.getParsedTable,\r\n\t\t};\r\n\t}\r\n\r\n\t// default options for responsive class\r\n\tconst responsiveClassDefaultOptions = {\r\n\t\tquery: '.wptb-preview-table',\r\n\t\tdefaultClasses: ['wptb-plugin-responsive-base'],\r\n\t\tbindToResize: false,\r\n\t};\r\n\r\n\t/**\r\n\t * Class for handling operations related to responsive functionalities of tables.\r\n\t *\r\n\t * @class\r\n\t * @param {Object} options options object\r\n\t */\r\n\tfunction ResponsiveFront(options = {}) {\r\n\t\t// merge default options with user sent options\r\n\t\t// this.options = { ...responsiveClassDefaultOptions, ...options };\r\n\t\tthis.options = { ...responsiveClassDefaultOptions, ...options };\r\n\r\n\t\tthis.elements = Array.from(document.querySelectorAll(this.options.query));\r\n\r\n\t\tthis.elementObjects = this.elements.map((e) => {\r\n\t\t\treturn {\r\n\t\t\t\tel: e,\r\n\t\t\t\ttableObject: new TableObject(e),\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Bind rebuilding of tables to window resize event.\r\n\t\t */\r\n\t\tthis.bindRebuildToResize = () => {\r\n\t\t\twindow.addEventListener('resize', () => {\r\n\t\t\t\tthis.rebuildTables();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get responsive directives of table element.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {HTMLElement} el table element\r\n\t\t * @return {Object | null} JSON representation of the directive element, if not available, null will be returned\r\n\t\t */\r\n\t\tthis.getDirective = (el) => {\r\n\t\t\tconst directiveString = el.dataset.wptbResponsiveDirectives;\r\n\r\n\t\t\tif (!directiveString) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn JSON.parse(atob(directiveString));\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Add default classes to rebuilt tables.\r\n\t\t *\r\n\t\t * This classes are added to lay out a base style for the responsive table.\r\n\t\t *\r\n\t\t * @param {HTMLElement} el table element\r\n\t\t */\r\n\t\tthis.addDefaultClasses = (el) => {\r\n\t\t\tel.classList.add(this.options.defaultClasses);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Remove default classes from target table.\r\n\t\t *\r\n\t\t * @param {HTMLElement} el table element\r\n\t\t */\r\n\t\tthis.removeDefaultClasses = (el) => {\r\n\t\t\tel.classList.remove(this.options.defaultClasses);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Rebuild table in auto mode.\r\n\t\t *\r\n\t\t * Main characteristic of auto mode is table is rebuilt by stacking rows/columns on top of each other, leaving minimal effort from user to create a responsive table at breakpoints.\r\n\t\t *\r\n\t\t * @param {HTMLElement} tableEl table element\r\n\t\t * @param {string} sizeRange range id for current screen size\r\n\t\t * @param {Object} autoOption mode options\r\n\t\t * @param {TableObject} tableObj table object\r\n\t\t */\r\n\t\tthis.autoBuild = (tableEl, sizeRange, autoOption, tableObj) => {\r\n\t\t\t// base options\r\n\t\t\tconst direction = autoOption.cellStackDirection[sizeRange];\r\n\t\t\t// eslint-disable-next-line prefer-destructuring\r\n\t\t\tconst topRowAsHeader = autoOption.topRowAsHeader[sizeRange];\r\n\t\t\tconst cellsPerRow = autoOption.cellsPerRow[sizeRange];\r\n\r\n\t\t\t// new options\r\n\t\t\tconst staticTopRow = autoOption.staticTopRow ? autoOption.staticTopRow[sizeRange] : false;\r\n\t\t\tconst repeatMergedHeader =\r\n\t\t\t\t// check for undefined for backward compatibility of older tables\r\n\t\t\t\t/* eslint-disable no-nested-ternary */\r\n\t\t\t\tautoOption.repeatMergedHeader === undefined || autoOption.repeatMergedHeader[sizeRange] === true\r\n\t\t\t\t\t? topRowAsHeader\r\n\t\t\t\t\t\t? autoOption.repeatMergedHeader\r\n\t\t\t\t\t\t\t? autoOption.repeatMergedHeader[sizeRange]\r\n\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t: false\r\n\t\t\t\t\t: false;\r\n\t\t\t/* eslint-enable no-nested-ternary */\r\n\r\n\t\t\ttableObj.clearTable();\r\n\r\n\t\t\tif (sizeRange === 'desktop') {\r\n\t\t\t\tthis.buildDefault(tableObj);\r\n\t\t\t\tthis.removeDefaultClasses(tableEl);\r\n\t\t\t} else {\r\n\t\t\t\tthis.autoDirectionBuild(\r\n\t\t\t\t\ttableObj,\r\n\t\t\t\t\tdirection,\r\n\t\t\t\t\ttopRowAsHeader,\r\n\t\t\t\t\tstaticTopRow,\r\n\t\t\t\t\tcellsPerRow,\r\n\t\t\t\t\trepeatMergedHeader\r\n\t\t\t\t);\r\n\t\t\t\tthis.addDefaultClasses(tableEl);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Rebuild table with a direction to read cells.\r\n\t\t *\r\n\t\t * Direction in question in here is either by row or column:\r\n\t\t * * row: cells will be read row by row, in each row starting from the first column\r\n\t\t * * column: cells will be read column by column, in each column starting from the first row of the table\r\n\t\t *\r\n\t\t * @param {TableObject} tableObj table object\r\n\t\t * @param {string} direction direction to read cells, possible options [row, column]\r\n\t\t * @param {boolean} topRowAsHeader use top row as header\r\n\t\t * @param {boolean} staticTopRow use top row as static\r\n\t\t * @param {number} cellsPerRow cells per row\r\n\t\t * @param {boolean} repeatMergedHeader repeat merged top header if top row as header option is enabled\r\n\t\t */\r\n\t\tthis.autoDirectionBuild = (\r\n\t\t\ttableObj,\r\n\t\t\tdirection,\r\n\t\t\ttopRowAsHeader = false,\r\n\t\t\tstaticTopRow = false,\r\n\t\t\tcellsPerRow = 1,\r\n\t\t\trepeatMergedHeader = true\r\n\t\t) => {\r\n\t\t\tconst rows = tableObj.maxRows();\r\n\t\t\tconst columns = tableObj.maxColumns();\r\n\t\t\tconst isRowStacked = direction === 'row';\r\n\r\n\t\t\t// build table with top row as header\r\n\t\t\tif (topRowAsHeader) {\r\n\t\t\t\tthis.headerBuild(tableObj, direction, cellsPerRow, repeatMergedHeader);\r\n\t\t\t} else {\r\n\t\t\t\t// cell stack direction is selected as row\r\n\t\t\t\t// for future new functionality additions, keep different cell stack direction logic separate instead of generalizing the inner logic\r\n\t\t\t\t// eslint-disable-next-line no-lonely-if\r\n\t\t\t\tif (isRowStacked) {\r\n\t\t\t\t\tconst allCellsByRow = [];\r\n\t\t\t\t\tlet rowStartIndex = 0;\r\n\r\n\t\t\t\t\t// static top row option is enabled\r\n\t\t\t\t\tif (staticTopRow) {\r\n\t\t\t\t\t\tconst topCells = tableObj.getCellsAtRow(0, true);\r\n\r\n\t\t\t\t\t\tconst baseCells = topCells.filter((c) => !c.isReference());\r\n\r\n\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\t\t\t\tbaseCells.map((b) => {\r\n\t\t\t\t\t\t\trowStartIndex += 1;\r\n\t\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\t\t\ttableObj.appendObjectToRow(b, rowObj.id);\r\n\r\n\t\t\t\t\t\t\tif (!b.el.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\tconst bgColor = tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t? tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t: getComputedStyle(rowObj.el).backgroundColor;\r\n\t\t\t\t\t\t\t\tb.setAttribute('style', `background-color: ${bgColor}`, true, ';');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\r\n\t\t\t\t\t\t\tb.setAttribute('colSpan', cellsPerRow);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// get cells by reading row by row\r\n\t\t\t\t\tfor (let r = rowStartIndex; r < rows; r += 1) {\r\n\t\t\t\t\t\t// eslint-disable-next-line no-loop-func\r\n\t\t\t\t\t\ttableObj.getCellsAtRow(r, true).forEach((c) => {\r\n\t\t\t\t\t\t\t// only use non reference cells to avoid duplication for non top row as header tables\r\n\t\t\t\t\t\t\tif (!c.isReference()) {\r\n\t\t\t\t\t\t\t\tallCellsByRow.push(c);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst cellCount = allCellsByRow.length;\r\n\r\n\t\t\t\t\tfor (let c = 0, r = 0; c < cellCount; c += cellsPerRow, r += 1) {\r\n\t\t\t\t\t\t// const rowId = tableObj.addRow('wptb-row').id;\r\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\t\t// place cells by 'cells by row' option value\r\n\t\t\t\t\t\tfor (let pR = 0; pR < cellsPerRow; pR += 1) {\r\n\t\t\t\t\t\t\tconst tempCell = allCellsByRow[c + pR];\r\n\r\n\t\t\t\t\t\t\tif (tempCell) {\r\n\t\t\t\t\t\t\t\ttableObj.appendElementToRow(tempCell.getElement(), rowObj.id);\r\n\r\n\t\t\t\t\t\t\t\ttempCell.resetAllAttributes();\r\n\t\t\t\t\t\t\t\ttempCell.setAttribute('style', 'width: 100% !important', true, ';');\r\n\t\t\t\t\t\t\t\ttempCell.setAttribute('colSpan', 1);\r\n\t\t\t\t\t\t\t\ttempCell.setAttribute('rowSpan', 1);\r\n\r\n\t\t\t\t\t\t\t\tif (!tempCell.el.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t// @deprecated\r\n\t\t\t\t\t\t\t\t\t// const bgColor =\r\n\t\t\t\t\t\t\t\t\t// \tr === 0\r\n\t\t\t\t\t\t\t\t\t// \t\t? tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t// \t\t\t? tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t// \t\t\t: getComputedStyle(rowObj.el).backgroundColor\r\n\t\t\t\t\t\t\t\t\t// \t\t: tableObj.rowColors[r % 2 === 0 ? 'odd' : 'even'];\r\n\r\n\t\t\t\t\t\t\t\t\tconst currentTableColor =\r\n\t\t\t\t\t\t\t\t\t\ttableObj.rowColors[(rowStartIndex + r) % 2 === 0 ? 'odd' : 'even'];\r\n\t\t\t\t\t\t\t\t\ttempCell.el.style.backgroundColor =\r\n\t\t\t\t\t\t\t\t\t\tcurrentTableColor || getComputedStyle(rowObj.el).backgroundColor;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// preserve original row colors for even and odd rows\r\n\t\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// cell stack direction is selected as column\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst allCellsByCol = [];\r\n\t\t\t\t\tlet rowStartIndex = 0;\r\n\r\n\t\t\t\t\t// static top row option is enabled\r\n\t\t\t\t\tif (staticTopRow) {\r\n\t\t\t\t\t\tconst topCells = tableObj.getCellsAtRow(0, true);\r\n\r\n\t\t\t\t\t\tconst baseCells = topCells.filter((t) => !t.isReference());\r\n\r\n\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\t\t\t\tbaseCells.map((b) => {\r\n\t\t\t\t\t\t\trowStartIndex += 1;\r\n\t\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\t\t\ttableObj.appendObjectToRow(b, rowObj.id);\r\n\r\n\t\t\t\t\t\t\tif (!b.el.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\tconst bgColor = tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t? tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t: getComputedStyle(rowObj.el).backgroundColor;\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\t\t\t\tb.el.style.backgroundColor = bgColor;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\r\n\t\t\t\t\t\t\tb.setAttribute('colSpan', cellsPerRow);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// read all cells column by column\r\n\t\t\t\t\tfor (let c = 0; c < columns; c += 1) {\r\n\t\t\t\t\t\tfor (let r = rowStartIndex; r < rows; r += 1) {\r\n\t\t\t\t\t\t\tconst tCell = tableObj.getCell(r, c, true);\r\n\t\t\t\t\t\t\t// only use non reference cells to avoid duplication for non top row as header tables\r\n\t\t\t\t\t\t\tif (tCell && !tCell.isReference()) {\r\n\t\t\t\t\t\t\t\tallCellsByCol.push(tCell);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst cellCount = allCellsByCol.length;\r\n\r\n\t\t\t\t\tfor (let c = 0, r = 0; c < cellCount; c += cellsPerRow, r += 1) {\r\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\t\tfor (let cR = 0; cR < cellsPerRow; cR += 1) {\r\n\t\t\t\t\t\t\tconst tempCell = allCellsByCol[c + cR];\r\n\r\n\t\t\t\t\t\t\tif (tempCell) {\r\n\t\t\t\t\t\t\t\ttableObj.appendElementToRow(tempCell.getElement(), rowObj.id);\r\n\r\n\t\t\t\t\t\t\t\ttempCell.resetAllAttributes();\r\n\t\t\t\t\t\t\t\ttempCell.setAttribute('style', 'width: 100% !important', true, ';');\r\n\t\t\t\t\t\t\t\ttempCell.setAttribute('colSpan', 1);\r\n\t\t\t\t\t\t\t\ttempCell.setAttribute('rowSpan', 1);\r\n\r\n\t\t\t\t\t\t\t\tif (!tempCell.el.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\tconst bgColor =\r\n\t\t\t\t\t\t\t\t\t\tr === 0\r\n\t\t\t\t\t\t\t\t\t\t\t? tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t\t\t\t? tableObj.rowColors.header\r\n\t\t\t\t\t\t\t\t\t\t\t\t: getComputedStyle(rowObj.el).backgroundColor\r\n\t\t\t\t\t\t\t\t\t\t\t: tableObj.rowColors[r % 2 === 0 ? 'odd' : 'even'];\r\n\t\t\t\t\t\t\t\t\ttempCell.el.style.backgroundColor = bgColor;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// preserve original row colors for even and odd rows\r\n\t\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Build table with top row assigned as header.\r\n\t\t *\r\n\t\t * @param {TableObject} tableObj table object\r\n\t\t * @param {string} direction cell stack direction, possible options are [row, column]\r\n\t\t * @param {number} itemsPerHeader items bound to each header element\r\n\t\t * @param {boolean} repeatMergedHeader repeat merged header\r\n\t\t */\r\n\t\tthis.headerBuild = (tableObj, direction, itemsPerHeader = 1, repeatMergedHeader = true) => {\r\n\t\t\t// cells at header\r\n\t\t\t// applying header row color to cells\r\n\t\t\tconst headerCells = tableObj.getCellsAtRow(0, true).map((h) => {\r\n\t\t\t\th.resetAllAttributes();\r\n\t\t\t\tif (!h.el.style.backgroundColor) {\r\n\t\t\t\t\th.setAttribute('style', `background-color: ${tableObj.rowColors.header}`, true, ';');\r\n\t\t\t\t}\r\n\t\t\t\treturn h;\r\n\t\t\t});\r\n\r\n\t\t\tconst stackedAsColumn = direction === 'column';\r\n\r\n\t\t\t// row count\r\n\t\t\tconst rows = tableObj.maxRows();\r\n\t\t\t// column count\r\n\t\t\tconst columns = tableObj.maxColumns();\r\n\r\n\t\t\tconst rowBorderStyle = '3px solid gray';\r\n\r\n\t\t\t// stack direction is column\r\n\t\t\tif (stackedAsColumn) {\r\n\t\t\t\t/**\r\n\t\t\t\t * Add header cells as new row to table.\r\n\t\t\t\t *\r\n\t\t\t\t * @param {boolean} addBorder add top border to header row\r\n\t\t\t\t */\r\n\t\t\t\t// eslint-disable-next-line no-inner-declarations\r\n\t\t\t\tfunction addHeaderCells(addBorder = false) {\r\n\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\tif (addBorder) {\r\n\t\t\t\t\t\trowObj.el.style.borderTop = rowBorderStyle;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\t\t\theaderCells.map((h) => {\r\n\t\t\t\t\t\t// clone header cell to reuse it for multiple rows\r\n\t\t\t\t\t\tconst cellClone = h.el.cloneNode(true);\r\n\t\t\t\t\t\ttableObj.appendElementToRow(cellClone, rowObj.id);\r\n\t\t\t\t\t\tif (!cellClone.style.backgroundColor) {\r\n\t\t\t\t\t\t\tcellClone.style.backgroundColor = `${getComputedStyle(rowObj.el).backgroundColor}`;\r\n\t\t\t\t\t\t\tif (cellClone.style.backgroundColor) cellClone.style.backgroundColor += ' !important';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// count of header rows that will be created\r\n\t\t\t\tconst headerCount = Math.ceil((rows - 1) / itemsPerHeader);\r\n\t\t\t\t// row index on original table\r\n\t\t\t\tlet currentOriginalRow = 1;\r\n\t\t\t\tfor (let r = 0; r < headerCount; r += 1) {\r\n\t\t\t\t\t// create header row and add to table\r\n\t\t\t\t\taddHeaderCells(r > 0);\r\n\t\t\t\t\tfor (let c = 0; c < itemsPerHeader; c += 1) {\r\n\t\t\t\t\t\t// break iteration when current row surpasses original row amount\r\n\t\t\t\t\t\tif (currentOriginalRow >= rows) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\t\t// apply row color relative to current header row\r\n\t\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\t\t\t\t\t\tfor (let cc = 0; cc < columns; cc += 1) {\r\n\t\t\t\t\t\t\tconst currentCell = tableObj.getCell(currentOriginalRow, cc, true);\r\n\r\n\t\t\t\t\t\t\tif (currentCell) {\r\n\t\t\t\t\t\t\t\tcurrentCell.resetAllAttributes();\r\n\r\n\t\t\t\t\t\t\t\t// status to decide whether render cell or not\r\n\t\t\t\t\t\t\t\tlet cellAddStatus = true;\r\n\r\n\t\t\t\t\t\t\t\tconst rowSpan = currentCell.getSpan(CellObject.spanTypes.row);\r\n\t\t\t\t\t\t\t\tconst colSpan = currentCell.getSpan(CellObject.spanTypes.column);\r\n\r\n\t\t\t\t\t\t\t\tif (rowSpan > 1) {\r\n\t\t\t\t\t\t\t\t\t// items remaining in current header\r\n\t\t\t\t\t\t\t\t\tconst remainingItems = itemsPerHeader - c;\r\n\r\n\t\t\t\t\t\t\t\t\t// calculate whether to apply full rowspan value or remaining item value depending on the current position of the cell\r\n\t\t\t\t\t\t\t\t\tconst currentRowSpan = Math.min(rowSpan, remainingItems);\r\n\r\n\t\t\t\t\t\t\t\t\tcellAddStatus = currentCell.setSpan(CellObject.spanTypes.row, currentRowSpan);\r\n\t\t\t\t\t\t\t\t\t// reset render status of cell to visible for future use\r\n\t\t\t\t\t\t\t\t\tcurrentCell.setMergedRenderStatus(true);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (cellAddStatus) {\r\n\t\t\t\t\t\t\t\t\tif (!currentCell.el.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute(\r\n\t\t\t\t\t\t\t\t\t\t\t'style',\r\n\t\t\t\t\t\t\t\t\t\t\t`background-color: ${tableObj.rowColors[c % 2 === 0 ? 'even' : 'odd']}`,\r\n\t\t\t\t\t\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\t\t\t\t\t\t';'\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttableObj.appendObjectToRow(currentCell, rowObj.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentOriginalRow += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// stack direction is row\r\n\t\t\t\t// number of headers that will be created\r\n\t\t\t\tconst headerCount = Math.ceil((rows - 1) / itemsPerHeader);\r\n\r\n\t\t\t\tlet currentOriginalRow = 1;\r\n\r\n\t\t\t\tfor (let hc = 0; hc < headerCount; hc += 1) {\r\n\t\t\t\t\tfor (let c = 0; c < columns; c += 1) {\r\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\r\n\r\n\t\t\t\t\t\tif (hc > 0 && c === 0) {\r\n\t\t\t\t\t\t\trowObj.el.style.borderTop = rowBorderStyle;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (repeatMergedHeader || hc === 0) {\r\n\t\t\t\t\t\t\tconst headerCellObject = tableObj.getCell(0, c, true);\r\n\t\t\t\t\t\t\t// const clonedHeaderCell = headerCells[c]?.el.cloneNode(true);\r\n\r\n\t\t\t\t\t\t\tif (!headerCellObject.isReference()) {\r\n\t\t\t\t\t\t\t\tconst clonedHeaderCell = headerCellObject.el.cloneNode(true);\r\n\r\n\t\t\t\t\t\t\t\t// apply header row color to header cell\r\n\t\t\t\t\t\t\t\tclonedHeaderCell.style.backgroundColor = `${tableObj.rowColors.header} !important`;\r\n\t\t\t\t\t\t\t\ttableObj.appendElementToRow(clonedHeaderCell, rowObj.id);\r\n\r\n\t\t\t\t\t\t\t\tif (!clonedHeaderCell.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\tclonedHeaderCell.style.backgroundColor = `${\r\n\t\t\t\t\t\t\t\t\t\tgetComputedStyle(rowObj.el).backgroundColor\r\n\t\t\t\t\t\t\t\t\t}`;\r\n\t\t\t\t\t\t\t\t\tif (clonedHeaderCell.style.backgroundColor)\r\n\t\t\t\t\t\t\t\t\t\tclonedHeaderCell.style.backgroundColor += ' !important';\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!repeatMergedHeader) {\r\n\t\t\t\t\t\t\t\t\tclonedHeaderCell.setAttribute('rowSpan', columns * headerCount);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tclonedHeaderCell.setAttribute('rowSpan', clonedHeaderCell.getAttribute('colSpan'));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tclonedHeaderCell.setAttribute('colSpan', 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// clear out row color to override row color with cell colors\r\n\t\t\t\t\t\trowObj.el.style.backgroundColor = '#ffffff00';\r\n\r\n\t\t\t\t\t\tfor (let r = 0; r < itemsPerHeader; r += 1) {\r\n\t\t\t\t\t\t\tif (currentOriginalRow + r >= rows) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// const currentCell = tableObj.appendToRow(currentOriginalRow + r, c, rowObj.id);\r\n\t\t\t\t\t\t\tconst currentCell = tableObj.getCell(currentOriginalRow + r, c, true);\r\n\r\n\t\t\t\t\t\t\tif (currentCell) {\r\n\t\t\t\t\t\t\t\tcurrentCell.resetAllAttributes();\r\n\r\n\t\t\t\t\t\t\t\tlet cellAddStatus = true;\r\n\r\n\t\t\t\t\t\t\t\tconst rowSpan = currentCell.getSpan(CellObject.spanTypes.row);\r\n\t\t\t\t\t\t\t\tconst colSpan = currentCell.getSpan(CellObject.spanTypes.column);\r\n\r\n\t\t\t\t\t\t\t\tif (rowSpan > 1) {\r\n\t\t\t\t\t\t\t\t\tconst remainingItems = itemsPerHeader - r;\r\n\r\n\t\t\t\t\t\t\t\t\tconst currentRowSpan = Math.min(rowSpan, remainingItems);\r\n\r\n\t\t\t\t\t\t\t\t\tcellAddStatus = currentCell.setSpan(CellObject.spanTypes.row, currentRowSpan);\r\n\r\n\t\t\t\t\t\t\t\t\tconst rS = currentCell.el.getAttribute('rowSpan');\r\n\t\t\t\t\t\t\t\t\tconst cS = currentCell.el.getAttribute('colSpan');\r\n\r\n\t\t\t\t\t\t\t\t\t// switch span values\r\n\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute('rowSpan', cS);\r\n\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute('colSpan', rS);\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentCell.setMergedRenderStatus(true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (cellAddStatus) {\r\n\t\t\t\t\t\t\t\t\t// color index for the cell, this will be used to reflect table row colors to cells. currently, grouping up the same items with the same color code\r\n\t\t\t\t\t\t\t\t\tlet colorIndex = (currentOriginalRow + r + hc) % 2 === 0 ? 'even' : 'odd';\r\n\r\n\t\t\t\t\t\t\t\t\t// for better visuals and distinction for tables with 1 item per header, using this calculation for color index\r\n\t\t\t\t\t\t\t\t\tif (itemsPerHeader === 1) {\r\n\t\t\t\t\t\t\t\t\t\tcolorIndex = currentOriginalRow % 2 === 0 ? 'even' : 'odd';\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (!currentCell.el.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute(\r\n\t\t\t\t\t\t\t\t\t\t\t'style',\r\n\t\t\t\t\t\t\t\t\t\t\t`background-color: ${tableObj.rowColors[colorIndex]}`,\r\n\t\t\t\t\t\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\t\t\t\t\t\t';'\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttableObj.appendObjectToRow(currentCell, rowObj.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentOriginalRow += itemsPerHeader;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Build table in its default form.\r\n\t\t *\r\n\t\t * Default form of table is the layout it has in desktop breakpoint.\r\n\t\t *\r\n\t\t * @param {TableObject} tableObj table object\r\n\t\t */\r\n\t\tthis.buildDefault = (tableObj) => {\r\n\t\t\tconst rows = tableObj.maxRows();\r\n\t\t\tconst columns = tableObj.maxColumns();\r\n\r\n\t\t\tfor (let r = 0; r < rows; r += 1) {\r\n\t\t\t\tconst rowId = tableObj.addRow('', true, r).id;\r\n\t\t\t\tfor (let c = 0; c < columns; c += 1) {\r\n\t\t\t\t\tconst tempCell = tableObj.getCell(r, c, true);\r\n\r\n\t\t\t\t\t// only render cell if a valid cell is found and it is not a reference\r\n\t\t\t\t\tif (tempCell && !tempCell.isReference()) {\r\n\t\t\t\t\t\t// reset all modified attributes of cell to their default values\r\n\t\t\t\t\t\ttempCell.resetAllAttributes();\r\n\t\t\t\t\t\ttableObj.appendElementToRow(tempCell.getElement(), rowId);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Calculate range id for given size value.\r\n\t\t *\r\n\t\t * @param {number} val value\r\n\t\t * @param {Object} stops an object containing stop ids as keys and respective sizes as values\r\n\t\t * @return {string} range id\r\n\t\t */\r\n\t\tthis.calculateRangeId = (val, stops) => {\r\n\t\t\t// eslint-disable-next-line prefer-destructuring\r\n\t\t\tconst sortedStops = Object.keys(stops).sort((a, b) => stops[a].width - stops[b].width);\r\n\r\n\t\t\tlet rangeId = sortedStops[0];\r\n\r\n\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\tsortedStops.map((s) => {\r\n\t\t\t\tif (val >= stops[s].width) {\r\n\t\t\t\t\trangeId = s;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn rangeId;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Rebuild table according to its responsive directives.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {HTMLElement} el table element\r\n\t\t * @param {number} size size in pixels\r\n\t\t * @param {TableObject} tableObj table object instance\r\n\t\t * @throws An error will be given for invalid mode name\r\n\t\t */\r\n\t\tthis.rebuildTable = (el, size, tableObj) => {\r\n\t\t\tconst directive = this.getDirective(el);\r\n\r\n\t\t\tif (directive) {\r\n\t\t\t\tif (!directive.responsiveEnabled) {\r\n\t\t\t\t\t// this.buildDefault(tableObj);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst mode = directive.responsiveMode;\r\n\r\n\t\t\t\t// main build logic for different responsive modes should be named in the format of `{modeName}Build` to automatically call the associated function from here\r\n\t\t\t\tconst buildCallable = this[`${mode}Build`];\r\n\r\n\t\t\t\tif (!size) {\r\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\tsize = el.getBoundingClientRect().width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst sizeRangeId = this.calculateRangeId(size, directive.breakpoints);\r\n\r\n\t\t\t\tif (buildCallable) {\r\n\t\t\t\t\tconst modeOptions = directive.modeOptions[mode];\r\n\t\t\t\t\tbuildCallable.call(this, el, sizeRangeId, modeOptions, tableObj);\r\n\r\n\t\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\t\tWPTB_RecalculateIndexes(el);\r\n\t\t\t\t\tconst tabEvent = new CustomEvent('table:rebuilt', {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\tsizeRangeId,\r\n\t\t\t\t\t\t\ttopRowAsHeader: directive.modeOptions[mode].topRowAsHeader,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t\tel.dispatchEvent(tabEvent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`No build mode named as [${mode}] found.`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Rebuild tables with the given screen size.\r\n\t\t *\r\n\t\t * @param {number} size screen size\r\n\t\t */\r\n\t\tthis.rebuildTables = (size) => {\r\n\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\tthis.elementObjects.map((o) => {\r\n\t\t\t\tlet innerSize = size;\r\n\t\t\t\tif (!size) {\r\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\tinnerSize = window.innerWidth;\r\n\r\n\t\t\t\t\tconst directives = this.getDirective(o.el);\r\n\t\t\t\t\t// calculate size according to relative width directive\r\n\t\t\t\t\tif (directives && directives.relativeWidth) {\r\n\t\t\t\t\t\tswitch (directives.relativeWidth) {\r\n\t\t\t\t\t\t\tcase 'window':\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\t\t\t\tinnerSize = window.innerWidth;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'container':\r\n\t\t\t\t\t\t\t\t// get the size of the container table is in\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\t\t\t\tinnerSize = o.el.parentNode.parentNode.parentNode.clientWidth;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\t\t\t\t\tinnerSize = window.innerWidth;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.rebuildTable(o.el, innerSize, o.tableObject);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tif (this.options.bindToResize) {\r\n\t\t\tthis.bindRebuildToResize();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trebuildTables: this.rebuildTables,\r\n\t\t\tgetDirective: this.getDirective,\r\n\t\t\tcalculateRangeId: this.calculateRangeId,\r\n\t\t};\r\n\t}\r\n\r\n\treturn ResponsiveFront;\r\n});\r\n","/**\r\n * Attach style pass component to global space.\r\n */\r\n(function attachToGlobal(globalKey, context, factory) {\r\n\t// eslint-disable-next-line no-param-reassign\r\n\tcontext[globalKey] = factory();\r\n})('WPTB_StylePass', self || global, function () {\r\n\t/**\r\n\t * Style pass component\r\n\t * This component will be used to either let or block theme related styling to affect table styles.\r\n\t *\r\n\t * @class\r\n\t */\r\n\tfunction StylePass() {\r\n\t\tthis.options = { stylesheets: {} };\r\n\r\n\t\t/**\r\n\t\t * Maintain the same position of table container and insert shadow root container to exact same index.\r\n\t\t *\r\n\t\t * @param {HTMLElement} shadowRootContainer\r\n\t\t * @param {HTMLElement} tableContainer\r\n\t\t *\r\n\t\t */\r\n\t\tthis.insertShadowRoot = (shadowRootContainer, tableContainer) => {\r\n\t\t\tconst mainParent = tableContainer.parentNode;\r\n\t\t\tconst parentChildren = Array.from(mainParent.children);\r\n\t\t\tconst tableIndex = parentChildren.indexOf(tableContainer);\r\n\t\t\tconst upSibling = tableIndex - 1 > 0 ? null : parentChildren[tableIndex - 1];\r\n\t\t\tconst downSibling = tableIndex + 1 >= parentChildren.length ? null : parentChildren[tableIndex + 1];\r\n\r\n\t\t\tthis.prepareAllStylesheets(this.options.stylesheets, shadowRootContainer.shadowRoot);\r\n\t\t\tthis.borrowFromTheme(tableContainer);\r\n\r\n\t\t\tshadowRootContainer.shadowRoot.appendChild(tableContainer);\r\n\r\n\t\t\tif (upSibling) {\r\n\t\t\t\tupSibling.insertAdjacentElement('afterend', shadowRootContainer);\r\n\t\t\t} else if (downSibling) {\r\n\t\t\t\tdownSibling.insertAdjacentElement('beforebegin', shadowRootContainer);\r\n\t\t\t} else {\r\n\t\t\t\tmainParent.appendChild(shadowRootContainer);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Borrow some theme styles and reflect them to table.\r\n\t\t *\r\n\t\t * @param {HTMLElement} tableContainer table container element\r\n\t\t */\r\n\t\tthis.borrowFromTheme = (tableContainer) => {\r\n\t\t\tconst table = tableContainer.querySelector('table');\r\n\t\t\tconst { fontFamily } = getComputedStyle(table);\r\n\t\t\ttable.style.fontFamily = fontFamily;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initialize and start style pass.\r\n\t\t *\r\n\t\t * @param {Object} options style pass options\r\n\t\t */\r\n\t\tthis.init = (options) => {\r\n\t\t\tthis.options = { ...this.options, ...options };\r\n\t\t\tconst tableContainers = Array.from(document.querySelectorAll('div .wptb-table-container'));\r\n\r\n\t\t\tif (tableContainers.length > 0) {\r\n\t\t\t\ttableContainers.map(this.setupStylePass);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Check if style pass is enabled for current table.\r\n\t\t *\r\n\t\t * @param {HTMLElement} tableContainer table container\r\n\t\t * @return {string} status null for disabled, true for enabled\r\n\t\t */\r\n\t\tthis.checkTableEligibility = (tableContainer) => {\r\n\t\t\tconst table = tableContainer.querySelector('table');\r\n\t\t\treturn table.dataset.disableThemeStyles;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Prepare containers for necessary style pass operations.\r\n\t\t *\r\n\t\t * @param {HTMLElement} tableContainer table container\r\n\t\t */\r\n\t\tthis.setupStylePass = (tableContainer) => {\r\n\t\t\t// abort if style pass is not enabled for table\r\n\t\t\tif (!this.checkTableEligibility(tableContainer)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst container = document.createElement('div');\r\n\t\t\tconst maxWidth = tableContainer.querySelector('table').dataset.wptbTableContainerMaxWidth;\r\n\t\t\tif (maxWidth) {\r\n\t\t\t\tcontainer.style.maxWidth = `${maxWidth}px`;\r\n\t\t\t}\r\n\r\n\t\t\tcontainer.attachShadow({ mode: 'open' });\r\n\r\n\t\t\tthis.insertShadowRoot(container, tableContainer);\r\n\t\t};\r\n\r\n\t\tthis.prepareAllStylesheets = (stylesheetsObj, root) => {\r\n\t\t\tObject.keys(stylesheetsObj).map((s) => {\r\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(stylesheetsObj, s)) {\r\n\t\t\t\t\tthis.prepareStylesheet(s, stylesheetsObj[s], root);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tthis.prepareStylesheet = (handler, url, root) => {\r\n\t\t\tconst linkElement = document.createElement('link');\r\n\t\t\tlinkElement.setAttribute('id', handler);\r\n\t\t\tlinkElement.setAttribute('href', url);\r\n\t\t\tlinkElement.setAttribute('rel', 'stylesheet');\r\n\t\t\tlinkElement.setAttribute('media', 'all');\r\n\r\n\t\t\troot.appendChild(linkElement);\r\n\t\t};\r\n\t}\r\n\r\n\treturn new StylePass();\r\n});\r\n","(function ($) {\r\n\t/**\r\n\t * All of the code for your public-facing JavaScript source\r\n\t * should reside in this file.\r\n\t *\r\n\t * Note: It has been assumed you will write jQuery code here, so the\r\n\t * $ function reference has been prepared for usage within the scope\r\n\t * of this function.\r\n\t *\r\n\t * This enables you to define handlers, for when the DOM is ready:\r\n\t *\r\n\t * $(function() {\r\n\t *\r\n\t * });\r\n\t *\r\n\t * When the window is loaded:\r\n\t *\r\n\t * $( window ).load(function() {\r\n\t *\r\n\t * });\r\n\t *\r\n\t * ...and/or other possibilities.\r\n\t *\r\n\t * Ideally, it is not considered best practise to attach more than a\r\n\t * single DOM-ready or window-load handler for a particular page.\r\n\t * Although scripts in the WordPress core, Plugins and Themes may be\r\n\t * practising this, we should strive to set a better example in our own work.\r\n\t *\r\n\t * The file is enqueued from inc/frontend/class-frontend.php.\r\n\t */\r\n\r\n\tjQuery(document).ready(function ($) {\r\n\t\tconst tableContainers = document.getElementsByClassName('wptb-table-container');\r\n\r\n\t\t/**\r\n\t\t * Adds hover color change support for supported button elements.\r\n\t\t *\r\n\t\t * @param {string} querySelector query selector string\r\n\t\t */\r\n\t\tfunction addHoverSupport(querySelector) {\r\n\t\t\tconst buttons = Array.from(document.querySelectorAll(querySelector));\r\n\r\n\t\t\tbuttons.map((b) => {\r\n\t\t\t\tb.addEventListener('mouseenter', (e) => {\r\n\t\t\t\t\tconst el = e.target;\r\n\t\t\t\t\t// hover background-color\r\n\t\t\t\t\tif (el.dataset.wptbElementHoverBgColor) {\r\n\t\t\t\t\t\tel.style.backgroundColor = el.dataset.wptbElementHoverBgColor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// hover color\r\n\t\t\t\t\tif (el.dataset.wptbElementHoverTextColor) {\r\n\t\t\t\t\t\tel.style.color = el.dataset.wptbElementHoverTextColor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// hover scale\r\n\t\t\t\t\tif (el.dataset.wptbElementHoverScale) {\r\n\t\t\t\t\t\tel.style.transform = `scale(${b.dataset.wptbElementHoverScale})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tb.addEventListener('mouseleave', (e) => {\r\n\t\t\t\t\t// reset all supported hover properties to their default value\r\n\t\t\t\t\tconst el = e.target;\r\n\t\t\t\t\tif (el.dataset.wptbElementHoverBgColor) {\r\n\t\t\t\t\t\tel.style.backgroundColor = el.dataset.wptbElementBgColor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (el.dataset.wptbElementHoverTextColor) {\r\n\t\t\t\t\t\tel.style.color = el.dataset.wptbElementColor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (el.dataset.wptbElementHoverScale) {\r\n\t\t\t\t\t\tel.style.transform = 'scale(1)';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// add all kind of functions that have event listeners before responsive table reconstruction to make sure those event listeners are carried over to their clones\r\n\t\taddHoverSupport('.wptb-preview-table .wptb-button');\r\n\r\n\t\t/**\r\n\t\t * function wptb_tableContainerSectionSmall\r\n\t\t * add class ( wptb-section-small ) in small width\r\n\t\t * remove this class in large width\r\n\t\t *\r\n\t\t * @return {void}\r\n\t\t */\r\n\t\tfunction wptb_tableContainerSectionSmall() {\r\n\t\t\tconst wptbTableContainer = jQuery('.wptb-table-container');\r\n\t\t\tconst sw = wptbTableContainer.width();\r\n\t\t\tif (wptbTableContainer.length > 0) {\r\n\t\t\t\tif (sw < 480) {\r\n\t\t\t\t\twptbTableContainer.addClass('wptb-section-small');\r\n\t\t\t\t} else {\r\n\t\t\t\t\twptbTableContainer.removeClass('wptb-section-small');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * function wptb_tableGenerateMobile\r\n\t\t * generates a mobile view of the table\r\n\t\t * when the top row of the table is not a heading\r\n\t\t *\r\n\t\t * @return {void}\r\n\t\t */\r\n\t\tfunction wptb_tableGenerateMobile() {\r\n\t\t\tconst wptbTableContainer = document.getElementsByClassName('wptb-table-container');\r\n\t\t\tconst wptbPreviewTable = document.getElementsByClassName('wptb-preview-table');\r\n\t\t\tconst wptbPreviewTableMobile = document.getElementsByClassName('wptb-preview-table-mobile');\r\n\t\t\tif (wptbTableContainer.length > 0 && wptbPreviewTable.length > 0) {\r\n\t\t\t\tconst sw = wptbTableContainer[0].offsetWidth;\r\n\t\t\t\tif (sw < 480) {\r\n\t\t\t\t\twptbPreviewTable[0].style.display = 'none';\r\n\r\n\t\t\t\t\tif (wptbPreviewTableMobile.length == 0) {\r\n\t\t\t\t\t\tconst tableRows = wptbPreviewTable[0].rows;\r\n\t\t\t\t\t\tconst tableRowTop = tableRows[0];\r\n\t\t\t\t\t\tconst tableRowTopChildren = tableRowTop.children;\r\n\t\t\t\t\t\tlet columnCount = 0;\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < tableRowTopChildren.length; i++) {\r\n\t\t\t\t\t\t\tcolumnCount += tableRowTopChildren[i].colSpan;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst newTableArray = [];\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < columnCount; i++) {\r\n\t\t\t\t\t\t\tnewTableArray[i] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < tableRows.length; i++) {\r\n\t\t\t\t\t\t\tconst rowChildren = tableRows[i].children;\r\n\r\n\t\t\t\t\t\t\tfor (let j = 0; j < columnCount; j++) {\r\n\t\t\t\t\t\t\t\tif (rowChildren[j].dataset.xIndex == j) {\r\n\t\t\t\t\t\t\t\t\tconst tdNew = rowChildren[j].cloneNode(true);\r\n\t\t\t\t\t\t\t\t\tif (tableRows[i].style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t\ttdNew.style.backgroundColor = tableRows[i].style.backgroundColor;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewTableArray[j].push(tdNew);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewTableArray[j].push('');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst table = document.createElement('table');\r\n\t\t\t\t\t\ttable.classList.add('wptb-preview-table-mobile');\r\n\t\t\t\t\t\tconst tableStyle = wptbPreviewTable[0].getAttribute('style');\r\n\t\t\t\t\t\ttable.setAttribute('style', tableStyle);\r\n\t\t\t\t\t\ttable.style.display = 'table';\r\n\t\t\t\t\t\tfor (let i = 0; i < columnCount; i++) {\r\n\t\t\t\t\t\t\tconst row = table.insertRow(-1);\r\n\t\t\t\t\t\t\trow.classList.add('wptb-row');\r\n\r\n\t\t\t\t\t\t\tfor (let j = 0; j < tableRows.length; j++) {\r\n\t\t\t\t\t\t\t\tif (newTableArray[i][j]) {\r\n\t\t\t\t\t\t\t\t\trow.appendChild(newTableArray[i][j]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twptbTableContainer[0].appendChild(table);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twptbPreviewTableMobile[0].style.display = 'table';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twptbPreviewTable[0].style.display = 'table';\r\n\t\t\t\t\tif (wptbPreviewTableMobile.length > 0) {\r\n\t\t\t\t\t\twptbPreviewTableMobile[0].style.display = 'none';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twptb_tdDefaultWidth();\r\n\t\twptb_tableReconstraction();\r\n\r\n\t\t// when window resize call wpcd_archiveSectionSmall and wptb_tableGenerateMobile\r\n\t\t$(window).resize(function () {\r\n\t\t\twptb_tdDefaultWidth();\r\n\t\t\twptb_tableReconstraction();\r\n\t\t});\r\n\r\n\t\tfunction wptb_tableReconstraction() {\r\n\t\t\tfor (let i = 0; i < tableContainers.length; i++) {\r\n\t\t\t\tconst tableContainer = tableContainers[i];\r\n\r\n\t\t\t\t// Set default indicator of creating a new table in true\r\n\t\t\t\tlet createNewTableIndic = true;\r\n\r\n\t\t\t\tlet previewTable = tableContainer.getElementsByClassName('wptb-preview-table');\r\n\t\t\t\tlet tableContainerMatrix = tableContainer.getElementsByClassName('wptb-table-container-matrix');\r\n\r\n\t\t\t\tif (previewTable.length > 0 && tableContainerMatrix.length > 0) {\r\n\t\t\t\t\tpreviewTable = previewTable[0];\r\n\t\t\t\t\ttableContainerMatrix = tableContainerMatrix[0];\r\n\t\t\t\t\tpreviewTable.style.display = 'table';\r\n\r\n\t\t\t\t\tif (previewTable.dataset.wptbTableAlignment) {\r\n\t\t\t\t\t\tconst { wptbTableAlignment } = previewTable.dataset;\r\n\r\n\t\t\t\t\t\tconst wptbTableContainerWidth = tableContainer.offsetWidth;\r\n\t\t\t\t\t\tif (wptbTableContainerWidth < previewTable.offsetWidth) {\r\n\t\t\t\t\t\t\tpreviewTable.style.float = null;\r\n\t\t\t\t\t\t} else if (wptbTableAlignment == 'center') {\r\n\t\t\t\t\t\t\tpreviewTable.style.float = null;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpreviewTable.style.float = wptbTableAlignment;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (wptbTableAlignment == 'center') {\r\n\t\t\t\t\t\t\ttableContainer.style.float = null;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttableContainer.style.float = wptbTableAlignment;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// check data parametrs reconstraction and wptbAdaptiveTable if they are both equal 1 then continue\r\n\t\t\t\t\tif (previewTable.dataset.reconstraction == 1 && previewTable.dataset.wptbAdaptiveTable == 1) {\r\n\t\t\t\t\t\t// get widths for wptb-table-container and wptb-preview-table\r\n\t\t\t\t\t\tconst tableContainerWidth = tableContainer.offsetWidth;\r\n\t\t\t\t\t\tconst previewTableWidth = previewTable.offsetWidth;\r\n\r\n\t\t\t\t\t\t// get count of table columns\r\n\t\t\t\t\t\tlet tableColumns;\r\n\t\t\t\t\t\tconst previewTableRows = previewTable.rows;\r\n\t\t\t\t\t\tif (previewTableRows.length > 0) {\r\n\t\t\t\t\t\t\tconst firstRow = previewTableRows[0];\r\n\t\t\t\t\t\t\tconst tdsRow = firstRow.querySelectorAll('td');\r\n\r\n\t\t\t\t\t\t\ttableColumns = tdsRow.length;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// check the top line if it is presented as a title\r\n\t\t\t\t\t\tconst tablePreviewHeadIndic = previewTable.classList.contains('wptb-table-preview-head');\r\n\r\n\t\t\t\t\t\t// check conditions: if table top row is as \"header\" - table must have more that two columns,\r\n\t\t\t\t\t\t// otherwise table must have more taht one columns\r\n\t\t\t\t\t\tlet tableReconstructed = false;\r\n\t\t\t\t\t\tlet wptbPreviewTableMobile;\r\n\t\t\t\t\t\tif ((!tablePreviewHeadIndic || tableColumns > 2) && tableColumns > 1) {\r\n\t\t\t\t\t\t\t// if width of wptb-table-container less then width of wptb-preview-table -\r\n\t\t\t\t\t\t\t// continue the way creation new mobile table\r\n\t\t\t\t\t\t\tif (tableContainerWidth < previewTableWidth) {\r\n\t\t\t\t\t\t\t\ttableContainer.style.overflow = 'unset';\r\n\r\n\t\t\t\t\t\t\t\t// hide wptb-table-container-matrix\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\ttableContainerMatrix &&\r\n\t\t\t\t\t\t\t\t\t!tableContainerMatrix.classList.contains('wptb-matrix-hide')\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\ttableContainerMatrix.classList.add('wptb-matrix-hide');\r\n\t\t\t\t\t\t\t\t\ttableReconstructed = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpreviewTable.classList.add('wptb-mobile-view-active');\r\n\r\n\t\t\t\t\t\t\t\tif (previewTable.rows && tableColumns) {\r\n\t\t\t\t\t\t\t\t\t// we get the estimated cell width\r\n\t\t\t\t\t\t\t\t\tconst tdWidth = previewTableWidth / tableColumns;\r\n\r\n\t\t\t\t\t\t\t\t\t// get the quantity of whole Columns that are can placed in the container\r\n\t\t\t\t\t\t\t\t\tlet wholeColumnsInContainer = Math.floor(tableContainerWidth / tdWidth);\r\n\t\t\t\t\t\t\t\t\tif (wholeColumnsInContainer < 1) wholeColumnsInContainer = 1;\r\n\r\n\t\t\t\t\t\t\t\t\t// check for the existence of a mobile table\r\n\t\t\t\t\t\t\t\t\t// if it available, check this table for compliance\r\n\t\t\t\t\t\t\t\t\t// with our conditions. If it compliance, remain this table\r\n\t\t\t\t\t\t\t\t\t// and cancel creating a new table ( createNewTableIndic = false ).\r\n\t\t\t\t\t\t\t\t\tif (tableContainer.getElementsByClassName('wptb-preview-table-mobile').length > 0) {\r\n\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile = tableContainer.getElementsByClassName(\r\n\t\t\t\t\t\t\t\t\t\t\t'wptb-preview-table-mobile'\r\n\t\t\t\t\t\t\t\t\t\t)[0];\r\n\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile.classList.remove('wptb-mobile-hide');\r\n\t\t\t\t\t\t\t\t\t\tconst dataWholeColumnInContainer =\r\n\t\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile.dataset.wholeColumnsInContainer;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tdataWholeColumnInContainer == wholeColumnsInContainer &&\r\n\t\t\t\t\t\t\t\t\t\t\tpreviewTable.classList.contains('wptb-table-preview-head')\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tcreateNewTableIndic = false;\r\n\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\tdataWholeColumnInContainer == wholeColumnsInContainer &&\r\n\t\t\t\t\t\t\t\t\t\t\t!previewTable.classList.contains('wptb-table-preview-head') &&\r\n\t\t\t\t\t\t\t\t\t\t\t(tableContainerWidth > 480 || wptbPreviewTableMobile.column == 1)\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tcreateNewTableIndic = false;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile.parentNode.removeChild(wptbPreviewTableMobile);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t// if indicator of creating of table \"true\" - continue\r\n\t\t\t\t\t\t\t\t\tif (createNewTableIndic) {\r\n\t\t\t\t\t\t\t\t\t\t// create new table for mobile devices\r\n\t\t\t\t\t\t\t\t\t\tconst newTable = document.createElement('table');\r\n\t\t\t\t\t\t\t\t\t\tconst newTableTbody = document.createElement('tbody');\r\n\t\t\t\t\t\t\t\t\t\tnewTable.appendChild(newTableTbody);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// add css class for new mobile table\r\n\t\t\t\t\t\t\t\t\t\tnewTable.classList.add('wptb-preview-table-mobile');\r\n\t\t\t\t\t\t\t\t\t\tconst infArr = previewTable.className.match(/wptb-element-main(.+)-(\\d+)/i);\r\n\t\t\t\t\t\t\t\t\t\tif (infArr && Array.isArray(infArr)) {\r\n\t\t\t\t\t\t\t\t\t\t\tnewTable.classList.add(infArr[0]);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// get number of rows for wptb-preview-table\r\n\t\t\t\t\t\t\t\t\t\tconst tableRows = previewTable.rows.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// In this variable must have quantity columns of the last section of the new table\r\n\t\t\t\t\t\t\t\t\t\tlet newTableLastSectionFilledColumns;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// set valuesIsSaved in 'false'\r\n\t\t\t\t\t\t\t\t\t\t// if the parameters newTableLastSectionFilledColumns get\r\n\t\t\t\t\t\t\t\t\t\t// optimal values, valuesIsSaved must have value 'true'\r\n\t\t\t\t\t\t\t\t\t\tlet valuesIsSaved = false;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// check if top row is as \"header\"\r\n\t\t\t\t\t\t\t\t\t\tif (previewTable.classList.contains('wptb-table-preview-head')) {\r\n\t\t\t\t\t\t\t\t\t\t\t// quantity rows without top row\r\n\t\t\t\t\t\t\t\t\t\t\tconst tableRowsWithoutHeader = tableRows - 1;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// this variable will have quantity columns in new mobile table\r\n\t\t\t\t\t\t\t\t\t\t\tlet newTableColumnsWithoutLeftHeader;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// if quantity of rows in desktop table more than\r\n\t\t\t\t\t\t\t\t\t\t\t// quantity whole columns which are can placed in the container,\r\n\t\t\t\t\t\t\t\t\t\t\t// execute \"loop for\"\r\n\t\t\t\t\t\t\t\t\t\t\tif (tableRows > wholeColumnsInContainer) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// this code, —Åyclical reduces the number of columns in the new table,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// until the optimal view is obtained so that the last block of the new table\r\n\t\t\t\t\t\t\t\t\t\t\t\t// has more than half the columns compared to the previous blocks\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tableRowsWithoutHeader; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader = wholeColumnsInContainer - 1 - i;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableColumnsWithoutLeftHeader <= 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader = 1;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableRowsWithoutHeader % newTableColumnsWithoutLeftHeader;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableLastSectionFilledColumns == 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader <= 6 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader -\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2 * newTableLastSectionFilledColumns <\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns <\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader > 6 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader <= 12 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader -\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.8 * newTableLastSectionFilledColumns <\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns <\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader > 12 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader <= 18 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader -\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.6 * newTableLastSectionFilledColumns <\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns <\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader = tableRowsWithoutHeader;\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// if all necessary values ‚Äã‚Äãare available (  ), execute\r\n\t\t\t\t\t\t\t\t\t\t\tif (valuesIsSaved) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet countRows;\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (newTableColumnsWithoutLeftHeader > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcountRows =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableColumns *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.ceil(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableRowsWithoutHeader / newTableColumnsWithoutLeftHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcountRows = tableColumns;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst sectionNumberLast = Math.floor((countRows - 1) / tableColumns);\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet tdStyles;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let j = 0; j < countRows; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst sectionNumber = Math.floor(j / tableColumns);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst tr = document.createElement('tr');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst tdLeftHeader = previewTable.rows[0].children[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tj - sectionNumber * tableColumns\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t].cloneNode(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet td;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst rowFirstStyles = window.getComputedStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.rows[0]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!tdLeftHeader.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.backgroundColor =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowFirstStyles.backgroundColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.width = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.height = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// tdLeftHeader.removeAttribute('data-x-index');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.removeAttribute('data-wptb-css-td-auto-width');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdStyles = window.getComputedStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.querySelector('td')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (tdStyles.borderTopColor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.borderColor = tdStyles.borderTopColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.borderColor = tdStyles.borderBottomColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (sectionNumber > 0 && j % tableColumns == 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.borderTopWidth = '5px';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttr.appendChild(tdLeftHeader);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet k = newTableColumnsWithoutLeftHeader * sectionNumber + 1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tk < newTableColumnsWithoutLeftHeader * (sectionNumber + 1) + 1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tk++\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (k < previewTable.rows.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd = previewTable.rows[k].children[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tj - sectionNumber * tableColumns\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].cloneNode(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst rowKStyles = window.getComputedStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.rows[k]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!td.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.backgroundColor = rowKStyles.backgroundColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.width = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.height = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// td.removeAttribute('data-x-index');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.removeAttribute('data-wptb-css-td-auto-width');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd = document.createElement('td');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderWidth = '0px';\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.background = '#fff';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdStyles = window.getComputedStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.querySelector('td')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (tdStyles.borderTopColor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderColor = tdStyles.borderTopColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderColor = tdStyles.borderBottomColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (sectionNumber > 0 && j % tableColumns == 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderTopWidth = '5px';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttr.appendChild(td);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableTbody.appendChild(tr);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tlet newTableColumns;\r\n\t\t\t\t\t\t\t\t\t\t\tif (tableContainerWidth > 480) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tableColumns; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns = wholeColumnsInContainer - i;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableColumns == 0) newTableColumns = 1;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns = tableColumns % newTableColumns;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableLastSectionFilledColumns == 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns <= 6 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns - 2 * newTableLastSectionFilledColumns <= 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns < newTableColumns\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns > 6 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns <= 12 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns - 1.8 * newTableLastSectionFilledColumns <= 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns < newTableColumns\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns > 12 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns <= 18 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns - 1.6 * newTableLastSectionFilledColumns <= 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns < newTableColumns\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns = 1;\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\tnewTable.column = 1;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst increaseRatioRows = Math.ceil(tableColumns / newTableColumns);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst newTableRows = increaseRatioRows * tableRows;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (valuesIsSaved) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < newTableRows; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst sectionNumber = Math.floor(i / tableRows);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst tr = document.createElement('tr');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet jMax;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet jStart;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsectionNumber != increaseRatioRows - 1 ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns == 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjStart = sectionNumber * newTableColumns;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjMax = newTableColumns * (1 + sectionNumber);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjStart = tableColumns - newTableLastSectionFilledColumns;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjMax = tableColumns;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst row = previewTable.rows[i - sectionNumber * tableRows];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttr.classList = row.classList;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttr.style.backgroundColor = row.style.backgroundColor;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let j = jStart; j < jMax; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newTd = row.children[j].cloneNode(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!newTd.style.backgroundColor) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst rowStyles = window.getComputedStyle(row);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.style.backgroundColor = rowStyles.backgroundColor;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.style.width = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.style.height = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// newTd.removeAttribute('data-x-index');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.removeAttribute('data-wptb-css-td-auto-width');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttr.appendChild(newTd);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableTbody.appendChild(tr);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tnewTable.dataset.wholeColumnsInContainer = wholeColumnsInContainer;\r\n\t\t\t\t\t\t\t\t\t\tconst images = newTable.querySelectorAll('[srcset]');\r\n\t\t\t\t\t\t\t\t\t\tif (images.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < images.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\timages[i].removeAttribute('srcset');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile = newTable;\r\n\t\t\t\t\t\t\t\t\t\ttableContainer.appendChild(newTable);\r\n\t\t\t\t\t\t\t\t\t\ttableReconstructed = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t\t\ttableContainerMatrix &&\r\n\t\t\t\t\t\t\t\ttableContainerMatrix.classList.contains('wptb-matrix-hide')\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\ttableContainerMatrix.classList.remove('wptb-matrix-hide');\r\n\t\t\t\t\t\t\t\ttableReconstructed = true;\r\n\t\t\t\t\t\t\t\tpreviewTable.classList.remove('wptb-mobile-view-active');\r\n\t\t\t\t\t\t\t\twptbPreviewTableMobile = tableContainer.querySelector('.wptb-preview-table-mobile');\r\n\t\t\t\t\t\t\t\tif (wptbPreviewTableMobile) {\r\n\t\t\t\t\t\t\t\t\ttableContainer\r\n\t\t\t\t\t\t\t\t\t\t.getElementsByClassName('wptb-preview-table-mobile')[0]\r\n\t\t\t\t\t\t\t\t\t\t.classList.add('wptb-mobile-hide');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttableContainer.style.overflow = 'auto';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpreviewTable.style.minWidth = 'auto';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tWPTB_RecalculateIndexes(previewTable);\r\n\r\n\t\t\t\t\t\tif (tableReconstructed) {\r\n\t\t\t\t\t\t\tWPTB_RecalculateIndexes(wptbPreviewTableMobile);\r\n\t\t\t\t\t\t\tconst tabEvent = new CustomEvent('table:rebuilt', { detail: true, bubbles: true });\r\n\t\t\t\t\t\t\tpreviewTable.dispatchEvent(tabEvent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction wptb_tdDefaultWidth() {\r\n\t\t\tconst wptbTableContainers = document.getElementsByClassName('wptb-table-container');\r\n\t\t\t// let frontendEditLink = document.querySelectorAll( '.wptb-frontend-table-edit-link' );\r\n\t\t\tfor (let i = 0; i < wptbTableContainers.length; i++) {\r\n\t\t\t\tconst wptbTableContainer = wptbTableContainers[i];\r\n\r\n\t\t\t\twptbTableContainer.classList.add(`wptb-table-container-${i}`);\r\n\r\n\t\t\t\tlet table = wptbTableContainer.getElementsByClassName('wptb-preview-table');\r\n\t\t\t\tif (table.length > 0) {\r\n\t\t\t\t\ttable = table[0];\r\n\r\n\t\t\t\t\tif (table.dataset.wptbTableContainerMaxWidth) {\r\n\t\t\t\t\t\twptbTableContainer.style.maxWidth = `${table.dataset.wptbTableContainerMaxWidth}px`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttable.classList.remove('wptb-table-preview-static-indic');\r\n\r\n\t\t\t\t\ttable.merging–°ellsHorizontally = false;\r\n\t\t\t\t\tconst tds = table.querySelectorAll('td');\r\n\t\t\t\t\tfor (let j = 0; j < tds.length; j++) {\r\n\t\t\t\t\t\tif (tds[j].colSpan > 1) {\r\n\t\t\t\t\t\t\ttable.merging–°ellsHorizontally = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst wptbTableContainerWidth = wptbTableContainer.offsetWidth;\r\n\r\n\t\t\t\t\tconst td = table.querySelector('td');\r\n\t\t\t\t\tconst tdStyleObj = window.getComputedStyle(td, null);\r\n\t\t\t\t\tconst tdBorderLeftWidth = tdStyleObj.getPropertyValue('border-left-width');\r\n\t\t\t\t\tconst tdBorderRightWidth = tdStyleObj.getPropertyValue('border-right-width');\r\n\t\t\t\t\tconst tdPaddingLeftWidth = tdStyleObj.getPropertyValue('padding-left');\r\n\t\t\t\t\tconst tdPaddingRightWidth = tdStyleObj.getPropertyValue('padding-left');\r\n\t\t\t\t\tconst tdPaddingCommon = parseFloat(tdPaddingLeftWidth, 10) + parseFloat(tdPaddingRightWidth, 10);\r\n\t\t\t\t\tconst tableTdBorderCommonWidth =\r\n\t\t\t\t\t\tparseFloat(tdBorderLeftWidth, 10) + parseFloat(tdBorderRightWidth, 10);\r\n\t\t\t\t\tconst { wptbTableTdsSumMaxWidth } = table.dataset;\r\n\t\t\t\t\tconst { wptbFixedWidthSize } = table.dataset;\r\n\t\t\t\t\tconst { wptbCellsWidthAutoCount } = table.dataset;\r\n\t\t\t\t\tlet styleElementCreate = false;\r\n\t\t\t\t\tlet tableTdWidthAuto;\r\n\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * Table width logic to determine final width on rendered tables.\r\n\t\t\t\t\t */\r\n\t\t\t\t\tconst tableWidthLogic = () => {\r\n\t\t\t\t\t\t// eslint-disable-next-line no-shadow\r\n\t\t\t\t\t\tconst wptbTableContainerWidth = wptbTableContainer.offsetWidth;\r\n\t\t\t\t\t\tif (wptbTableTdsSumMaxWidth < wptbTableContainerWidth) {\r\n\t\t\t\t\t\t\tif (wptbCellsWidthAutoCount) {\r\n\t\t\t\t\t\t\t\ttable.style.minWidth = '100%';\r\n\r\n\t\t\t\t\t\t\t\t//                        if( frontendEditLink && frontendEditLink[i] ) {\r\n\t\t\t\t\t\t\t\t//                            frontendEditLink[i].style.minWidth = wptbTableTdsSumMaxWidth + 'px';\r\n\t\t\t\t\t\t\t\t//                        }\r\n\r\n\t\t\t\t\t\t\t\tif (table.merging–°ellsHorizontally) {\r\n\t\t\t\t\t\t\t\t\ttable.style.width = 'auto';\r\n\t\t\t\t\t\t\t\t\tconst tableTdsWidthAutoCommon = wptbTableContainerWidth - wptbFixedWidthSize;\r\n\t\t\t\t\t\t\t\t\ttableTdWidthAuto = tableTdsWidthAutoCommon / wptbCellsWidthAutoCount;\r\n\t\t\t\t\t\t\t\t\ttableTdWidthAuto = tableTdWidthAuto - tdPaddingCommon - tableTdBorderCommonWidth;\r\n\t\t\t\t\t\t\t\t\tstyleElementCreate = true;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\ttable.style.width = '100%';\r\n\r\n\t\t\t\t\t\t\t\t\t//                            if( frontendEditLink && frontendEditLink[i] ) {\r\n\t\t\t\t\t\t\t\t\t//                                frontendEditLink[i].style.width = '100%';\r\n\t\t\t\t\t\t\t\t\t//                                frontendEditLink[i].style.maxWidth = '100%';\r\n\t\t\t\t\t\t\t\t\t//                            }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\ttable.style.width = 'auto';\r\n\t\t\t\t\t\t\t\ttable.style.minWidth = null;\r\n\t\t\t\t\t\t\t\ttable.style.maxWidth = `${wptbTableTdsSumMaxWidth}px`;\r\n\r\n\t\t\t\t\t\t\t\t//                        if( frontendEditLink && frontendEditLink[i] ) {\r\n\t\t\t\t\t\t\t\t//                            frontendEditLink[i].style.width = null;\r\n\t\t\t\t\t\t\t\t//                            frontendEditLink[i].style.minWidth = null;\r\n\t\t\t\t\t\t\t\t//                            frontendEditLink[i].style.maxWidth = wptbTableTdsSumMaxWidth + 'px';\r\n\t\t\t\t\t\t\t\t//                        }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttable.style.maxWidth = null;\r\n\t\t\t\t\t\t\ttable.style.minWidth = `${table.dataset.wptbTableTdsSumMaxWidth}px`;\r\n\t\t\t\t\t\t\ttable.style.width = 'auto';\r\n\t\t\t\t\t\t\ttableTdWidthAuto = table.dataset.wptbTdWidthAuto ? table.dataset.wptbTdWidthAuto : '100';\r\n\t\t\t\t\t\t\tstyleElementCreate = true;\r\n\r\n\t\t\t\t\t\t\t//                    if( frontendEditLink && frontendEditLink[i] ) {\r\n\t\t\t\t\t\t\t//                        frontendEditLink[i].style.maxWidth = '100%';\r\n\t\t\t\t\t\t\t//                        frontendEditLink[i].style.minWidth = table.dataset.wptbTableTdsSumMaxWidth + 'px';\r\n\t\t\t\t\t\t\t//                        frontendEditLink[i].style.width = null;\r\n\t\t\t\t\t\t\t//                    }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// if current table container width is equal or lower than zero, than it means it is hidden through css styles, width calculations should be done when it becomes visible again\r\n\t\t\t\t\tif (wptbTableContainerWidth <= 0) {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Calculate element visibility status.\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t * @param {Element} element element to check\r\n\t\t\t\t\t\t * @return {boolean} whether element is visible or not\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tconst elementVisibilityStatus = (element) => {\r\n\t\t\t\t\t\t\tconst { display, visibility } = getComputedStyle(element);\r\n\t\t\t\t\t\t\treturn display !== 'none' || visibility === 'visible';\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Find parent element that is responsible for hiding our table.\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t * This function is recursive, it will keep searching parents till it hit 'body' element.\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t * @param {Element} currentElement current element in check\r\n\t\t\t\t\t\t * @return {null|Element} found parent or null\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tconst findParentWithNoDisplay = (currentElement) => {\r\n\t\t\t\t\t\t\tconst currentParent = currentElement.parentNode;\r\n\t\t\t\t\t\t\tconst parentDisplayStatus = elementVisibilityStatus(currentParent);\r\n\t\t\t\t\t\t\t// lower cased element name\r\n\t\t\t\t\t\t\tconst parentType = currentParent.nodeName.toLowerCase();\r\n\r\n\t\t\t\t\t\t\t// if parent is visible make a recursive call\r\n\t\t\t\t\t\t\tif (!parentDisplayStatus && parentType !== 'body') {\r\n\t\t\t\t\t\t\t\treturn findParentWithNoDisplay(currentParent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// hit body element, should return null to signal a problem with current DOM\r\n\t\t\t\t\t\t\tif (parentType === 'body') {\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn currentParent;\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// find parent container with hidden display property\r\n\t\t\t\t\t\tconst culpritParent = findParentWithNoDisplay(wptbTableContainer);\r\n\t\t\t\t\t\tif (culpritParent) {\r\n\t\t\t\t\t\t\t// setup a mutation observer to detect visibility change of parent which is responsible for hiding our table\r\n\t\t\t\t\t\t\tconst config = { attributes: true, childList: false, subtree: false };\r\n\t\t\t\t\t\t\tconst parentObserver = new MutationObserver((mutationRecord) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\r\n\t\t\t\t\t\t\t\t\tmutationRecord.map((mutation) => {\r\n\t\t\t\t\t\t\t\t\t\tconst currentVisibility = elementVisibilityStatus(mutation.target);\r\n\t\t\t\t\t\t\t\t\t\tconst { width: containerWidth } = mutation.target.getBoundingClientRect();\r\n\r\n\t\t\t\t\t\t\t\t\t\t// call width logic and start calculations for our table since it is visible now\r\n\t\t\t\t\t\t\t\t\t\tif (currentVisibility && containerWidth > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\ttableWidthLogic();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// disconnect observer\r\n\t\t\t\t\t\t\t\t\t\t\tparentObserver.disconnect();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// get out of iteration\r\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error('get out of iteration');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\t\t// do nothing since an error is thrown to get out of array iteration\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// observe parent for visibility changes\r\n\t\t\t\t\t\t\tparentObserver.observe(culpritParent, config);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if no hidden parent element is found, it means our table is visible, continue normally\r\n\t\t\t\t\t\ttableWidthLogic();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst { head } = document;\r\n\t\t\t\t\tif (head) {\r\n\t\t\t\t\t\tconst cssForTdsWidthAutoOld = head.querySelector(`style[data-wptb-td-auto-width-${i}=\"true\"]`);\r\n\r\n\t\t\t\t\t\tif (cssForTdsWidthAutoOld) {\r\n\t\t\t\t\t\t\thead.removeChild(cssForTdsWidthAutoOld);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (styleElementCreate) {\r\n\t\t\t\t\t\tconst cssForTdsWidthAuto = document.createElement('style');\r\n\t\t\t\t\t\tcssForTdsWidthAuto.setAttribute(`data-wptb-td-auto-width-${i}`, true);\r\n\t\t\t\t\t\tcssForTdsWidthAuto.innerHTML = `.wptb-table-container-${i} table td[data-wptb-css-td-auto-width=true]{width:${tableTdWidthAuto}px}`;\r\n\t\t\t\t\t\tif (head) {\r\n\t\t\t\t\t\t\thead.appendChild(cssForTdsWidthAuto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// code for adding of old css styles for correct view\r\n\t\tconst elements = document.getElementsByClassName('wptb-ph-element');\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tif (element.classList.contains('wptb-list-item-container')) {\r\n\t\t\t\telement.classList.remove('wptb-list-item-container');\r\n\t\t\t\telement.classList.add('wptb-list-container');\r\n\t\t\t}\r\n\r\n\t\t\tif (element.classList.contains('wptb-button-container')) {\r\n\t\t\t\tconst infArr = element.className.match(/wptb-size-([A-Z]+)/i);\r\n\t\t\t\tif (infArr && Array.isArray(infArr)) {\r\n\t\t\t\t\tconst wptbSize = infArr[0];\r\n\t\t\t\t\tconst wptbSizeNew = wptbSize.toLowerCase();\r\n\r\n\t\t\t\t\telement.classList.remove(wptbSize);\r\n\r\n\t\t\t\t\tconst wptbButtonWrapper = element.querySelector('.wptb-button-wrapper');\r\n\t\t\t\t\tif (wptbButtonWrapper) {\r\n\t\t\t\t\t\twptbButtonWrapper.classList.add(wptbSizeNew);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// responsive setup\r\n\t\t// eslint-disable-next-line no-unused-vars\r\n\t\tconst responsiveFront = new WPTB_ResponsiveFrontend({\r\n\t\t\tquery: '.wptb-preview-table',\r\n\t\t\tbindToResize: true,\r\n\t\t});\r\n\r\n\t\t// sorting table\r\n\t\tfunction sortingTable() {\r\n\t\t\tconst tables = document.querySelectorAll('.wptb-preview-table');\r\n\t\t\tfor (let i = 0; i < tables.length; i++) {\r\n\t\t\t\tconst sortableTable = new WPTB_SortableTable({ table: tables[i] });\r\n\t\t\t\tsortableTable.sortableTableInitialization(responsiveFront);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsortingTable();\r\n\t\tconst responsiveFrontReady = new CustomEvent('responsive:front', {\r\n\t\t\tdetail: {\r\n\t\t\t\tresponsiveFront,\r\n\t\t\t},\r\n\t\t});\r\n\t\tdocument.dispatchEvent(responsiveFrontReady);\r\n\t\tresponsiveFront.rebuildTables();\r\n\r\n\t\tWPTB_StylePass.init(WptbFrontendData.stylePass);\r\n\t});\r\n})(jQuery);\r\n"]}