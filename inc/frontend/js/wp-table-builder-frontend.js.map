{"version":3,"sources":["WPTB_CutGlueTable.js","WPTB_SortableTable.js","WPTB_RecalculateIndexes.js","WPTB_ResponsiveFrontend.js","wp-table-builder-frontend.js"],"names":["WPTB_CutGlueTable","cutTableHorizontally","rowBefore","table","rows","i","tableRowsIChildren","children","j","length","rowSpan","newTdRowspan","dataset","sameCellBeforeDivision","td","hasOwnProperty","wptbCell","mark","getDOMElement","document","createElement","tdTopStyle","getAttribute","setAttribute","colSpan","dataXIndex","xIndex","dataXIndexNext","parseInt","beforeTd","maxCols","querySelector","insertBefore","WPTB_RecalculateIndexes","glueTableHorizontally","tds","getElementsByTagName","hasAttribute","dataSameCellBeforeDivision","tdsSameBeforeDivision","querySelectorAll","parentNode","classList","contains","yIndex","tdsSameBeforeDivisionJPlusChildren","k","appendChild","removeChild","cutTableVertically","col","rowChildren","rowChildrenLength","afterTd","rowSpanNewTd","colSpanOld","colSpanNewTd","tdLeftStyle","tdAnalogThisX","style","width","tdAnalogThisY","height","glueTableVertically","jFirstTdGlue","key","context","factory","exports","_typeof","module","self","global","options","arguments","undefined","this","thisObject","sortingCellMouseMov","e","type","element","target","tagName","x","offsetX","layerX","y","offsetY","layerY","xMatch","clientWidth","clientHeight","add","remove","sortingCellMouseMoveVertical","sortingCellMouseMoveHorizontal","tdMouseLeave","sortableTable","currentTarget","tableWasSorted","tableRowsBefore","tableRowsAfter","itemsPerHeader","tableRowsArr","tableLastCont","push","rowspan","rowNum","map","rowsValuesArr","rowsTdFirst","tdYCoordsRowSpanPrevious","tableRowsPushed","tdsChanged","changeSortingTdsCollection","tdRowspan","textElementsValues","textElementsValuesGet","rowsTd","value","orderBy","setSortedAscDataAttr","sort","prev","next","sortOrder","unshift","indexOf","tBody","innerHTML","rowsValObj","row","trRef","tr","colspan","colNum","columnsValuesArr","columnsTdFirst","tdXCoordsColSpanPrevious","tdColspan","columnsTd","tdsColumn","difference","columnsValObj","tdsAll","removeAttribute","removeCellsAttrAfterDivision","tableSM","tableStateSet","reassignElementsStyles","dataAttr","prevValue","nextValue","cell","textElements","innerText","tdIndexSpanPrev","tdsCollectionChanged","collectionTds","collectionTdsJSpan","collectionTdsJSpanProperty","indexName","indexNameCamelCase","indexNamePerpendicularCamelCase","tdSpanProperty","tableGroupCount","splice","tdSpan","tableMaxCols","cellsStylesScheme","rowsStylesScheme","sortModeSwitcher","active","removeEventListener","sortableTableVerticalStart","sortingCellMouseMoveSwitcher","addEventListener","wptbSortableTableVertical","createTableElementsStylesScheme","sortableTableHorizontalStart","wptbSortableTableHorizontal","tableObjectChange","start","elemSelector","elements","elem","backgroundColor","window","getComputedStyle","getPropertyValue","objectKey","String","elementsStylesScheme","elemStyles","sortableTableInitialization","responsiveFront","typeFirst","typeSecond","switchMode","getDirective","switch","directives","sizeRangeId","detail","mode","responsiveMode","modeOptions","topRowAsHeader","cellStackDirection","cellsPerRow","call","_this","s","sCMM","dataAttrSortChange","rowsLength","dataYIndexStart","trs","maxColsFull","tdsArr","jMainIter","z","columns","logToConsole","message","process","env","NODE_ENV","console","Error","CellObject","cellElement","reference","referenceObject","mergedRenderStatus","mergedCells","column","getMergedRenderStatus","setMergedRenderStatus","status","addToMergedCells","mergeType","cellObj","isReference","cloneNode","modifications","spans","remainingSpans","cacheSpanValues","Object","keys","prototype","defaultVal","getSpan","spanType","spanVal","getElement","getRemainingSpans","setRemainingSpans","createCellElement","attributeKey","attributeValue","append","glue","default","currentVal","setSpan","valueToApply","mc","remainingVal","remainingParentSpans","startIndex","endIndex","resetAttribute","resetAllAttributes","el","TableObject","tableEl","_this2","tableElement","parsedTable","rowCache","originals","rowColors","header","even","odd","addToParsed","r","c","cellObject","parseTable","Array","from","ri","ci","currentCellObject","spanRow","spanTypes","spanCol","sr","referenceCell","sc","parseRowColors","headerDatasetColor","wptbHeaderBackgroundColor","evenRowDatasetColor","wptbEvenRowBackgroundColor","oddRowDatasetColor","wptbOddRowBackgroundColor","rowsNeeded","rn","tempRow","addRow","fromOriginals","originalIndex","isArray","tableBody","range","createRange","setStart","createContextualFragment","join","childNodes","id","clearTable","getRow","maxRows","maxColumns","reduce","p","getCell","returnObject","getCellsAtRow","rowId","returnObj","cells","tempCell","appendToRow","cellRowId","cellColumnId","cachedRow","appendElementToRow","appendObjectToRow","responsiveClassDefaultOptions","query","defaultClasses","bindToResize","_this3","assign","elementObjects","tableObject","bindRebuildToResize","rebuildTables","directiveString","wptbResponsiveDirectives","JSON","parse","atob","addDefaultClasses","removeDefaultClasses","autoBuild","sizeRange","autoOption","tableObj","direction","staticTopRow","buildDefault","autoDirectionBuild","isRowStacked","headerBuild","allCellsByRow","rowStartIndex","filter","b","rowObj","forEach","cellCount","pR","allCellsByCol","t","tCell","cR","headerCells","h","stackedAsColumn","rowBorderStyle","addHeaderCells","addBorder","borderTop","headerCount","Math","ceil","currentOriginalRow","cc","currentCell","cellAddStatus","remainingItems","currentRowSpan","min","hc","clonedHeaderCell","rS","cS","colorIndex","calculateRangeId","val","stops","sortedStops","a","rangeId","rebuildTable","size","directive","responsiveEnabled","buildCallable","getBoundingClientRect","breakpoints","tabEvent","CustomEvent","dispatchEvent","o","innerSize","innerWidth","relativeWidth","jQuery","ready","$","tableContainers","getElementsByClassName","wptb_tableReconstraction","tableContainer","createNewTableIndic","previewTable","tableContainerMatrix","display","wptbTableAlignment","offsetWidth","float","reconstraction","wptbAdaptiveTable","tableContainerWidth","previewTableWidth","tableColumns","previewTableRows","tableReconstructed","wptbPreviewTableMobile","overflow","tdWidth","wholeColumnsInContainer","floor","dataWholeColumnInContainer","newTable","newTableTbody","infArr","className","match","tableRows","newTableLastSectionFilledColumns","valuesIsSaved","tableRowsWithoutHeader","newTableColumnsWithoutLeftHeader","countRows","tdStyles","sectionNumber","tdLeftHeader","rowFirstStyles","borderTopColor","borderColor","borderBottomColor","borderTopWidth","rowKStyles","borderWidth","background","newTableColumns","increaseRatioRows","newTableRows","jMax","jStart","newTd","rowStyles","images","minWidth","bubbles","wptb_tdDefaultWidth","wptbTableContainers","wptbTableContainer","wptbTableContainerMaxWidth","maxWidth","merging–°ellsHorizontally","wptbTableContainerWidth","tdStyleObj","tdBorderLeftWidth","tdBorderRightWidth","tdPaddingLeftWidth","tdPaddingRightWidth","tdPaddingCommon","parseFloat","tableTdBorderCommonWidth","wptbTableTdsSumMaxWidth","wptbFixedWidthSize","wptbCellsWidthAutoCount","styleElementCreate","tableTdWidthAuto","wptbTdWidthAuto","head","cssForTdsWidthAutoOld","cssForTdsWidthAuto","wptbElementHoverBgColor","wptbElementHoverTextColor","color","wptbElementHoverScale","transform","wptbElementBgColor","wptbElementColor","resize","wptbSize","wptbSizeNew","toLowerCase","wptbButtonWrapper","WPTB_ResponsiveFrontend","tables","WPTB_SortableTable","sortingTable"],"mappings":"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","file":"wp-table-builder-frontend.js","sourcesContent":["let WPTB_CutGlueTable = {\n    cutTableHorizontally: function (rowBefore, table) {\n        if( table && table.rows[rowBefore] ) {\n            for( let i = 0; i < rowBefore; i++ ) {\n                let tableRowsIChildren = table.rows[i].children;\n\n                for( let j = 0; j < tableRowsIChildren.length; j++ ) {\n                    if ( tableRowsIChildren[j].rowSpan > 1 && tableRowsIChildren[j].rowSpan > rowBefore - i ) {\n                        let newTdRowspan = tableRowsIChildren[j].rowSpan - rowBefore + i;\n                        tableRowsIChildren[j].rowSpan = rowBefore - i;\n                        if( ! tableRowsIChildren[j].dataset.sameCellBeforeDivision ) {\n                            tableRowsIChildren[j].dataset.sameCellBeforeDivision = 'r' + i + 'c' + j;\n                        }\n\n                        let td;\n                        if(table.hasOwnProperty('wptbCell')) {\n                            td = new table.wptbCell( table.mark );\n                            td = td.getDOMElement();\n                        } else {\n                            td = document.createElement('td');\n                        }\n\n                        let tdTopStyle = tableRowsIChildren[j].getAttribute( 'style' );\n                        td.setAttribute( 'style', tdTopStyle );\n                        td.colSpan = tableRowsIChildren[j].colSpan;\n                        td.rowSpan = newTdRowspan;\n                        td.dataset.sameCellBeforeDivision = tableRowsIChildren[j].dataset.sameCellBeforeDivision;\n\n                        let dataXIndex = tableRowsIChildren[j].dataset.xIndex;\n                        let dataXIndexNext = parseInt( dataXIndex ) + parseInt( tableRowsIChildren[j].colSpan );\n                        let beforeTd;\n                        while( ! beforeTd && dataXIndexNext < table.maxCols ) {\n                            beforeTd = table.rows[rowBefore].querySelector( '[data-x-index=\"' + dataXIndexNext + '\"]' );\n                            dataXIndexNext++;\n                        }\n                        table.rows[rowBefore].insertBefore( td, beforeTd );\n\n                        WPTB_RecalculateIndexes(table);\n                    }\n                }\n            }\n        }\n    },\n    glueTableHorizontally: function (table) {\n        if(table) {\n            let tds = [...table.getElementsByTagName( 'td' )];\n            for( let i = 0; i < tds.length; i++ ) {\n                if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                    let dataSameCellBeforeDivision = tds[i].dataset.sameCellBeforeDivision;\n                    let tdsSameBeforeDivision = table.querySelectorAll( '[data-same-cell-before-division=\"' + dataSameCellBeforeDivision + '\"]' );\n                    for( let j = 0; j < tdsSameBeforeDivision.length; j++ ) {\n                        if( tdsSameBeforeDivision[j] && tdsSameBeforeDivision[j + 1] ) {\n                            if( tdsSameBeforeDivision[j].parentNode && tdsSameBeforeDivision[j + 1].parentNode &&\n                                ! tdsSameBeforeDivision[j].parentNode.classList.contains( 'wptb-row-moving' ) &&\n                                ! tdsSameBeforeDivision[j + 1].parentNode.classList.contains( 'wptb-row-moving' ) ) {\n                                if( ( tdsSameBeforeDivision[j + 1].dataset.yIndex == parseInt( tdsSameBeforeDivision[j].dataset.yIndex ) +\n                                    parseInt( tdsSameBeforeDivision[j].rowSpan ) ) ) {\n                                    tdsSameBeforeDivision[j].rowSpan += tdsSameBeforeDivision[j + 1].rowSpan;\n\n                                    let tdsSameBeforeDivisionJPlusChildren = [...tdsSameBeforeDivision[j + 1].children];\n\n                                    for( let k = 0; k < tdsSameBeforeDivisionJPlusChildren.length; k++ ) {\n                                        tdsSameBeforeDivision[j].appendChild( tdsSameBeforeDivisionJPlusChildren[k] );\n                                    }\n\n                                    let nextRow = tdsSameBeforeDivision[j + 1].parentNode;\n                                    nextRow.removeChild( tdsSameBeforeDivision[j + 1] );\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            WPTB_RecalculateIndexes(table);\n        }\n    },\n    cutTableVertically: function (col, table) {\n        for ( let i = 0; i < table.rows.length; i++ ) {\n            if( col < table.maxCols ) {\n                if( col != 0 && ( ! table.rows[i].querySelector( '[data-x-index=\"' + col + '\"]' ) ) ) {\n                    let rowChildren = table.rows[i].children;\n\n                    let td,\n                        rowChildrenLength = rowChildren.length,\n                        afterTd,\n                        rowSpanNewTd,\n                        colSpanOld,\n                        colSpanNewTd;\n                    for( let j = 0; j < rowChildrenLength; j++ ) {\n                        if( rowChildren[j].colSpan > 1 && parseInt( rowChildren[j].dataset.xIndex ) < col &&\n                            parseInt( rowChildren[j].dataset.xIndex ) + parseInt( rowChildren[j].colSpan ) > col ) {\n                            if(table.hasOwnProperty('wptbCell')) {\n                                td = new table.wptbCell( table.mark );\n                                td = td.getDOMElement();\n                            } else {\n                                td = document.createElement('td');\n                            }\n\n                            rowSpanNewTd = rowChildren[j].rowSpan;\n                            colSpanOld = rowChildren[j].colSpan;\n                            rowChildren[j].colSpan = col - rowChildren[j].dataset.xIndex;\n                            colSpanNewTd = colSpanOld - rowChildren[j].colSpan;\n\n                            if( ! rowChildren[j].dataset.sameCellBeforeDivision ) {\n                                rowChildren[j].dataset.sameCellBeforeDivision = 'r' + i + 'c' + j;\n                            }\n\n                            let tdLeftStyle = rowChildren[j].getAttribute( 'style' );\n                            td.setAttribute( 'style', tdLeftStyle );\n\n                            let tdAnalogThisX = table.querySelector( '[data-x-index=\"' + col + '\"]' );\n                            if( tdAnalogThisX ) {\n                                td.style.width = tdAnalogThisX.style.width;\n                            }\n\n                            let tdAnalogThisY = table.querySelector( '[data-y-index=\"' + i + '\"]' );\n                            if( tdAnalogThisY ) {\n                                td.style.height = tdAnalogThisY.style.height;\n                            }\n                            if( rowChildren[j + 1] ) {\n                                afterTd = rowChildren[j + 1];\n                            } else {\n                                afterTd = null;\n                            }\n\n                            table.rows[i].insertBefore( td, afterTd );\n                            td.colSpan = colSpanNewTd;\n                            td.rowSpan = rowSpanNewTd;\n                            td.dataset.sameCellBeforeDivision = rowChildren[j].dataset.sameCellBeforeDivision;\n                            i += rowSpanNewTd - 1;\n                            break\n                        }\n                    }\n                }\n            }\n            WPTB_RecalculateIndexes(table);\n        }\n    },\n    glueTableVertically: function (table) {\n        if( table ) {\n            let tds = [...table.getElementsByTagName( 'td' )];\n            for( let i = 0; i < tds.length; i++ ) {\n                if( tds[i].hasAttribute( 'data-same-cell-before-division' ) ) {\n                    let dataSameCellBeforeDivision = tds[i].dataset.sameCellBeforeDivision;\n                    let tdsSameBeforeDivision = [...table.querySelectorAll( '[data-same-cell-before-division=\"' + dataSameCellBeforeDivision + '\"]' )];\n\n                    let jFirstTdGlue = null;\n                    for( let j = 0; j < tdsSameBeforeDivision.length; j++ ) {\n                        if( tdsSameBeforeDivision[j] && tdsSameBeforeDivision[j + 1] &&\n                            ! tdsSameBeforeDivision[j].classList.contains( 'wptb-column-moving' ) &&\n                            ! tdsSameBeforeDivision[j + 1].classList.contains( 'wptb-column-moving' ) ) {\n                            if( ( tdsSameBeforeDivision[j + 1].dataset.xIndex == parseInt( tdsSameBeforeDivision[j].dataset.xIndex ) +\n                                parseInt( tdsSameBeforeDivision[j].colSpan ) ) ) {\n                                if( jFirstTdGlue == null ) {\n                                    jFirstTdGlue = j;\n                                }\n                                tdsSameBeforeDivision[jFirstTdGlue].colSpan += tdsSameBeforeDivision[j + 1].colSpan;\n\n                                let tdsSameBeforeDivisionJPlusChildren = [...tdsSameBeforeDivision[j + 1].children];\n\n                                for( let k = 0; k < tdsSameBeforeDivisionJPlusChildren.length; k++ ) {\n                                    tdsSameBeforeDivision[jFirstTdGlue].appendChild( tdsSameBeforeDivisionJPlusChildren[k] );\n                                }\n\n                                let thisRow = tdsSameBeforeDivision[j + 1].parentNode;\n                                thisRow.removeChild( tdsSameBeforeDivision[j + 1] );\n                            }\n                        }\n                    }\n                }\n            }\n\n            WPTB_RecalculateIndexes(table);\n        }\n    }\n}\n","/**\n * Responsive class assignment for frontend operations.\n *\n * This file can be used as an UMD.\n */\n(function assignToGlobal(key, context, factory) {\n\tif (typeof exports === 'object' && typeof module !== 'undefined') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tcontext[key] = factory();\n\t}\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_SortableTable', self || global, () => {\n\tfunction WPTB_SortTable(options = {}) {\n\t\tconst table = (this.table = options.table);\n\t\tWPTB_RecalculateIndexes(table);\n\t\tconst thisObject = this;\n\t\tthis.itemsPerHeader = 0;\n\t\tthis.tableMaxCols = table.maxCols;\n\t\tthis.cellsStylesScheme = {};\n\t\tthis.rowsStylesScheme = {};\n\n\t\t/**\n\t\t * sets the table to sort mode\n\t\t *\n\t\t * @param {string} type\n\t\t * @param {boolean} active\n\t\t * @param {number} number\n\t\t */\n\t\tthis.sortModeSwitcher = function (type, active) {\n\t\t\tif(active) {\n\t\t\t\tthis.sortModeSwitcher('horizontal', false);\n\t\t\t\tthis.sortModeSwitcher('vertical', false);\n\t\t\t}\n\n\t\t\tif (type === 'vertical') {\n\t\t\t\tthis.table.removeEventListener('click', this.sortableTableVerticalStart, false);\n\n\t\t\t\tif (active) {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('vertical', true);\n\t\t\t\t\tthis.table.addEventListener('click', this.sortableTableVerticalStart, false);\n\t\t\t\t\tthis.table.dataset.wptbSortableTableVertical = '1';\n\t\t\t\t\tthis.createTableElementsStylesScheme('td');\n\t\t\t\t\tthis.createTableElementsStylesScheme('tr');\n\t\t\t\t} else {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('vertical', false);\n\t\t\t\t\tdelete this.table.dataset.wptbSortableTableVertical;\n\t\t\t\t}\n\t\t\t} else if (type === 'horizontal') {\n\t\t\t\tthis.table.removeEventListener('click', this.sortableTableHorizontalStart, false);\n\n\t\t\t\tif (active) {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('horizontal', true);\n\t\t\t\t\tthis.table.addEventListener('click', this.sortableTableHorizontalStart, false);\n\t\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal = '1';\n\t\t\t\t\tthis.createTableElementsStylesScheme('td');\n\t\t\t\t\tthis.createTableElementsStylesScheme('tr');\n\t\t\t\t} else {\n\t\t\t\t\tthis.sortingCellMouseMoveSwitcher('horizontal', false);\n\t\t\t\t\tdelete this.table.dataset.wptbSortableTableHorizontal;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * changes table object for old reconstruction table type\n\t\t *\n\t\t * @param {boolean}start\n\t\t * @returns {*}\n\t\t */\n\t\tthis.tableObjectChange = function (start = true) {\n\t\t\tif(this.table.classList.contains('wptb-mobile-view-active') && start) {\n\t\t\t\tthis.table = table.parentNode.parentNode.querySelector('.wptb-preview-table-mobile');\n\t\t\t} else if(this.table.classList.contains('wptb-preview-table-mobile') && !start) {\n\t\t\t\tthis.table = table.parentNode.querySelector('.wptb-preview-table');\n\t\t\t}\n\t\t\treturn this.table;\n\t\t}\n\n\t\t/**\n\t\t * fills the object with data about cell styles for all locations (create scheme)\n\t\t *\n\t\t * @param elemSelector\n\t\t */\n\t\tthis.createTableElementsStylesScheme = function (elemSelector) {\n\t\t\tthis.tableObjectChange();\n\t\t\tlet elements = this.table.querySelectorAll(elemSelector);\n\t\t\tif(elements.length) {\n\t\t\t\tfor(let i = 0; i < elements.length; i++) {\n\t\t\t\t\tlet elem = elements[i];\n\t\t\t\t\tlet cellFullStyleObj = window.getComputedStyle(elem, null);\n\t\t\t\t\tlet backgroundColor = cellFullStyleObj.getPropertyValue( 'background-color' );\n\t\t\t\t\tlet objectKey = '';\n\t\t\t\t\tif(elemSelector === 'td') {\n\t\t\t\t\t\tobjectKey = elem.dataset.xIndex + '-' + elem.dataset.yIndex;\n\t\t\t\t\t\tthis.cellsStylesScheme[objectKey] = {backgroundColor};\n\t\t\t\t\t} else if(elemSelector === 'tr') {\n\t\t\t\t\t\tobjectKey = String(i);\n\t\t\t\t\t\tthis.rowsStylesScheme[objectKey] = {backgroundColor};\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.tableObjectChange(false);\n\t\t}\n\n\t\t/**\n\t\t * applies saved cell styles data to all cells\n\t\t *\n\t\t * @param elemSelector\n\t\t */\n\t\tthis.reassignElementsStyles = function (elemSelector) {\n\t\t\tthis.tableObjectChange();\n\t\t\tlet elements = this.table.querySelectorAll(elemSelector);\n\t\t\tlet elementsStylesScheme;\n\t\t\tif(elemSelector === 'td') {\n\t\t\t\telementsStylesScheme = this.cellsStylesScheme;\n\t\t\t} else if(elemSelector === 'tr') {\n\t\t\t\telementsStylesScheme = this.rowsStylesScheme;\n\t\t\t}\n\t\t\tif(elements.length) {\n\t\t\t\tfor(let i = 0; i < elements.length; i++) {\n\t\t\t\t\tlet elem = elements[i];\n\t\t\t\t\tlet objectKey = '';\n\t\t\t\t\tif(elemSelector === 'td') {\n\t\t\t\t\t\tobjectKey = elem.dataset.xIndex + '-' + elem.dataset.yIndex;\n\t\t\t\t\t} else if(elemSelector === 'tr') {\n\t\t\t\t\t\tobjectKey = i;\n\t\t\t\t\t}\n\t\t\t\t\tif(elementsStylesScheme.hasOwnProperty(objectKey)) {\n\t\t\t\t\t\tlet elemStyles = elementsStylesScheme[objectKey];\n\t\t\t\t\t\tfor(let key in elemStyles) {\n\t\t\t\t\t\t\telem.style[key] = elemStyles[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.tableObjectChange(false);\n\t\t}\n\n\t\t/**\n\t\t * checks whether the table should be in the sort state\n\t\t * and connects the necessary handlers\n\t\t *\n\t\t * @param {object} responsiveFront\n\t\t */\n\t\tthis.sortableTableInitialization = function (responsiveFront) {\n\t\t\tlet type = '';\n\t\t\tlet typeFirst;\n\t\t\tlet typeSecond;\n\t\t\tif (this.table.dataset.wptbSortableTableVertical && this.table.dataset.wptbSortableTableVertical === '1') {\n\t\t\t\ttypeFirst = 'vertical';\n\t\t\t\ttypeSecond = 'horizontal';\n\t\t\t} else if (\n\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal &&\n\t\t\t\tthis.table.dataset.wptbSortableTableHorizontal === '1'\n\t\t\t) {\n\t\t\t\ttypeFirst = 'horizontal';\n\t\t\t\ttypeSecond = 'vertical';\n\t\t\t}\n\n\t\t\tconst switchMode = {};\n\t\t\tif (responsiveFront && responsiveFront.getDirective(this.table)) {\n\t\t\t\tswitchMode.switch = function (e) {\n\t\t\t\t\tconst directives = responsiveFront.getDirective(this.table)\n\n\t\t\t\t\tlet sizeRangeId = 'desktop';\n\t\t\t\t\tif (e && e.detail) {\n\t\t\t\t\t\tsizeRangeId = e.detail.sizeRangeId;\n\t\t\t\t\t}\n\t\t\t\t\ttype = typeFirst;\n\t\t\t\t\tif (sizeRangeId !== 'desktop') {\n\t\t\t\t\t\tif (directives.hasOwnProperty('modeOptions')) {\n\t\t\t\t\t\t\tconst mode = directives.responsiveMode;\n\t\t\t\t\t\t\tconst modeOptions = directives.modeOptions[mode];\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodeOptions.hasOwnProperty('topRowAsHeader') &&\n\t\t\t\t\t\t\t\tmodeOptions.topRowAsHeader.hasOwnProperty(sizeRangeId) &&\n\t\t\t\t\t\t\t\tmodeOptions.topRowAsHeader[sizeRangeId]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tmodeOptions.hasOwnProperty('cellStackDirection') &&\n\t\t\t\t\t\t\t\t\tmodeOptions.cellStackDirection.hasOwnProperty(sizeRangeId)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tif (modeOptions.cellStackDirection[sizeRangeId] === 'row') {\n\t\t\t\t\t\t\t\t\t\ttype = typeSecond;\n\t\t\t\t\t\t\t\t\t\tthis.itemsPerHeader = this.tableMaxCols - 1;\n\t\t\t\t\t\t\t\t\t} else if (modeOptions.cellStackDirection[sizeRangeId] === 'column') {\n\t\t\t\t\t\t\t\t\t\tif (modeOptions.hasOwnProperty('cellsPerRow')) {\n\t\t\t\t\t\t\t\t\t\t\tthis.itemsPerHeader = modeOptions.cellsPerRow[sizeRangeId];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.itemsPerHeader = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.itemsPerHeader = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis.sortModeSwitcher(type, true);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tswitchMode.switch = function (e) {\n\t\t\t\t\tlet type = typeFirst;\n\t\t\t\t\tif (this.table.classList.contains('wptb-mobile-view-active')) {\n\t\t\t\t\t\tif (this.table.classList.contains('wptb-table-preview-head')) {\n\t\t\t\t\t\t\ttype = typeSecond;\n\t\t\t\t\t\t\tif(type === 'vertical') {\n\t\t\t\t\t\t\t\tthis.itemsPerHeader = this.tableMaxCols - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst { table } = this;\n\t\t\t\t\t\tthis.table = table.parentNode.parentNode.querySelector('.wptb-preview-table-mobile');\n\t\t\t\t\t\tthis.sortModeSwitcher(type, true);\n\t\t\t\t\t\tthis.table = table;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.sortModeSwitcher(type, true);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tswitchMode.switch.call(thisObject);\n\t\t\tthis.table.addEventListener(\n\t\t\t\t'table:rebuilt',\n\t\t\t\tfunction (e) {\n\t\t\t\t\tswitchMode.switch.call(thisObject, e);\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\t\t};\n\n\t\t/**\n\t\t * adds and deletes mousemove and mouseleave events handlers when happens switch sorting mode\n\t\t * and also can add necessary attributes\n\t\t *\n\t\t * @param {string} type\n\t\t * @param {boolean} active\n\t\t */\n\t\tthis.sortingCellMouseMoveSwitcher = function (type, active) {\n\t\t\t/**\n\t\t\t * removes and adds mousemove and mouseleave events handlers\n\t\t\t *\n\t\t\t * @param {HTMLElement} td\n\t\t\t * @param {func} sCMM\n\t\t\t * @param {boolean} active\n\t\t\t */\n\t\t\tfunction s(td, sCMM, active) {\n\t\t\t\ttd.removeEventListener('mousemove', sCMM, false);\n\t\t\t\ttd.removeEventListener('mouseleave', tdMouseLeave, false);\n\t\t\t\tif (active) {\n\t\t\t\t\ttd.addEventListener('mousemove', sCMM, false);\n\t\t\t\t\ttd.addEventListener('mouseleave', tdMouseLeave, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * removes and adds data sorted attributes\n\t\t\t *\n\t\t\t * @param {HTMLElement} td\n\t\t\t * @param {string} dataAttr\n\t\t\t * @param {boolean} active\n\t\t\t */\n\t\t\tfunction dataAttrSortChange(td, dataAttr, active) {\n\t\t\t\tif (active) {\n\t\t\t\t\tif (!td.dataset[dataAttr] || td.dataset[dataAttr] !== 'desk-disabled') {\n\t\t\t\t\t\ttd.dataset[dataAttr] = 'ask';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttd.dataset[dataAttr] = 'desk';\n\t\t\t\t\t}\n\t\t\t\t} else if (td.dataset[dataAttr] === 'ask') {\n\t\t\t\t\ttd.dataset[dataAttr] = 'ask-disabled';\n\t\t\t\t} else if (td.dataset[dataAttr] === 'desk') {\n\t\t\t\t\ttd.dataset[dataAttr] = 'desk-disabled';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// removes all mousemove and mouseleave events handlers\n\t\t\t// and also removes all data sorted attributes from all cells\n\t\t\tlet tds = this.table.querySelectorAll('td');\n\t\t\tif (tds.length) {\n\t\t\t\ttds = [...tds];\n\t\t\t\ttds.map((td) => {\n\t\t\t\t\ts(td, sortingCellMouseMoveVertical, false);\n\t\t\t\t\tdataAttrSortChange(td, 'sortedVertical', false);\n\t\t\t\t\ts(td, sortingCellMouseMoveHorizontal, false);\n\t\t\t\t\tdataAttrSortChange(td, 'sortedHorizontal', false);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// if active === true sets sorted events handlers\n\t\t\t// and data sorted attributes for all cells\n\t\t\tif (active) {\n\t\t\t\tif (type === 'vertical') {\n\t\t\t\t\tlet rowsLength = this.table.rows.length;\n\t\t\t\t\tlet dataYIndexStart = 0;\n\t\t\t\t\twhile (rowsLength > 0) {\n\t\t\t\t\t\tlet tds = this.table.querySelectorAll(`[data-y-index=\"${dataYIndexStart}\"]`);\n\t\t\t\t\t\ttds = [...tds];\n\t\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\t\ts(td, sortingCellMouseMoveVertical, active);\n\t\t\t\t\t\t\tdataAttrSortChange(td, 'sortedVertical', active);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (this.itemsPerHeader) {\n\t\t\t\t\t\t\trowsLength -= this.itemsPerHeader + 1;\n\t\t\t\t\t\t\tdataYIndexStart += this.itemsPerHeader + 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trowsLength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (type === 'horizontal') {\n\t\t\t\t\tlet tds = this.table.querySelectorAll('[data-x-index=\"0\"]');\n\t\t\t\t\ttds = [...tds];\n\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\tlet tdsPerAfter = this.table.querySelectorAll(`[data-y-index=\"${td.dataset.yIndex}\"]`);\n\t\t\t\t\t\tif(tdsPerAfter.length > 2) {\n\t\t\t\t\t\t\ts(td, sortingCellMouseMoveHorizontal, active);\n\t\t\t\t\t\t\tdataAttrSortChange(td, 'sortedHorizontal', active);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * adds a sortable-hover class for a cell when the cursor is over the sort icon (arrow)\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {string} type\n\t\t * @param {HTMLElement} element td\n\t\t */\n\t\tfunction sortingCellMouseMov(e, type, element) {\n\t\t\tif (e.target.tagName === 'TD') {\n\t\t\t\tconst x = e.offsetX == undefined ? e.layerX : e.offsetX;\n\t\t\t\tconst y = e.offsetY == undefined ? e.layerY : e.offsetY;\n\t\t\t\tlet xMatch = false;\n\t\t\t\tif ((type === 'vertical' && e.target.clientWidth - x <= 35) || (type === 'horizontal' && x <= 35)) {\n\t\t\t\t\txMatch = true;\n\t\t\t\t}\n\t\t\t\tif (xMatch && (e.target.clientHeight - 35) / 2 < y && (e.target.clientHeight + 35) / 2 > y) {\n\t\t\t\t\telement.classList.add('sortable-hover');\n\t\t\t\t} else {\n\t\t\t\t\telement.classList.remove('sortable-hover');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telement.classList.remove('sortable-hover');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * calls sortingCellMouseMov with the type parameter set to vertical\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tfunction sortingCellMouseMoveVertical(e) {\n\t\t\tsortingCellMouseMov(e, 'vertical', this);\n\t\t}\n\n\t\t/**\n\t\t * calls sortingCellMouseMov with the type parameter set to horizontal\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tfunction sortingCellMouseMoveHorizontal(e) {\n\t\t\tsortingCellMouseMov(e, 'horizontal', this);\n\t\t}\n\n\t\t/**\n\t\t * remove sortable-hover class from cell when cursor leave cell\n\t\t */\n\t\tfunction tdMouseLeave() {\n\t\t\tthis.classList.remove('sortable-hover');\n\t\t}\n\n\t\t/**\n\t\t * function for sorting the table vertically by the numeric content of cells\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {HTMLElement} table\n\t\t * @param {string} type\n\t\t */\n\t\tfunction sortableTable(e, type) {\n\t\t\tif (\n\t\t\t\te.target &&\n\t\t\t\te.target.tagName === 'TD' &&\n\t\t\t\t!table.parentNode.classList.contains('wptb-preview-table-manage-cells')\n\t\t\t) {\n\t\t\t\tconst table = e.currentTarget;\n\t\t\t\tlet tableWasSorted = false;\n\t\t\t\tif (type === 'vertical' && e.target.dataset.hasOwnProperty('sortedVertical')) {\n\t\t\t\t\t/**\n\t\t\t\t\t * if table have enabled param topRowAsHeader and sellsStackDirection is column\n\t\t\t\t\t * the top and bottom rows that will not be sorted are temporarily removed from the table\n\t\t\t\t\t */\n\t\t\t\t\tconst tableRowsBefore = [];\n\t\t\t\t\tconst tableRowsAfter = [];\n\t\t\t\t\tif (this.itemsPerHeader && this.itemsPerHeader < table.rows.length) {\n\t\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\t\t\t\t\t\tconst tableRowsArr = [...table.rows];\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\n\t\t\t\t\t\tfor (let i = 0; i < tableRowsArr.length; i++) {\n\t\t\t\t\t\t\tif (i < e.target.dataset.yIndex) {\n\t\t\t\t\t\t\t\ttableRowsBefore.push(tableRowsArr[i]);\n\t\t\t\t\t\t\t\ttableLastCont.removeChild(tableRowsArr[i]);\n\t\t\t\t\t\t\t} else if (i > parseInt(e.target.dataset.yIndex, 10) + this.itemsPerHeader) {\n\t\t\t\t\t\t\t\ttableRowsAfter.push(tableRowsArr[i]);\n\t\t\t\t\t\t\t\ttableLastCont.removeChild(tableRowsArr[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet tds = table.querySelectorAll(`[data-x-index=\"${e.target.dataset.xIndex}\"]`);\n\t\t\t\t\ttds = [...tds];\n\n\t\t\t\t\t/**\n\t\t\t\t\t * preparing table for sorting\n\t\t\t\t\t */\n\t\t\t\t\tlet rowspan;\n\t\t\t\t\tlet rowNum;\n\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\tif (!(rowspan = parseInt(td.rowSpan, 10))) {\n\t\t\t\t\t\t\trowspan = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowNum = td.dataset.yIndex;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableHorizontally(rowNum, table);\n\t\t\t\t\t\trowNum += rowspan;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableHorizontally(rowNum, table);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst rowsValuesArr = [];\n\t\t\t\t\tlet rowsTdFirst;\n\t\t\t\t\tlet tdYCoordsRowSpanPrevious = 0;\n\t\t\t\t\tconst tableRowsPushed = [];\n\t\t\t\t\tfor (let i = 0; i < tds.length; i++) {\n\t\t\t\t\t\tconst tdsChanged = changeSortingTdsCollection(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\ttds,\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\ttdYCoordsRowSpanPrevious,\n\t\t\t\t\t\t\t'vertical'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (tdsChanged && tdsChanged.hasOwnProperty('i')) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t\ti = tdsChanged.i;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (tdsChanged) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst td = tds[i];\n\n\t\t\t\t\t\tlet tdRowspan = parseInt(td.rowSpan, 10);\n\t\t\t\t\t\tif (!tdRowspan) tdRowspan = 1;\n\n\t\t\t\t\t\ttdYCoordsRowSpanPrevious = parseInt(td.dataset.yIndex, 10) + tdRowspan;\n\n\t\t\t\t\t\tconst textElementsValues = textElementsValuesGet(td);\n\n\t\t\t\t\t\tconst rowsTd = [];\n\t\t\t\t\t\tfor (let j = 0; j < tdRowspan; j++) {\n\t\t\t\t\t\t\trowsTd.push(table.rows[parseInt(td.dataset.yIndex, 10) + j]);\n\t\t\t\t\t\t\ttableRowsPushed.push(parseInt(td.dataset.yIndex, 10) + j);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (td.dataset.yIndex > 0) {\n\t\t\t\t\t\t\trowsValuesArr.push({\n\t\t\t\t\t\t\t\trowsTd,\n\t\t\t\t\t\t\t\tvalue: textElementsValues,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trowsTdFirst = rowsTd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst orderBy = setSortedAscDataAttr(e, 'sortedVertical');\n\t\t\t\t\tif (!orderBy) return;\n\n\t\t\t\t\tif (rowsValuesArr.length) rowsValuesArr.sort((prev, next) => sortOrder(orderBy, prev, next));\n\n\t\t\t\t\trowsValuesArr.unshift({ rowsTd: rowsTdFirst });\n\n\t\t\t\t\tif (rowsValuesArr.length < table.rows.length) {\n\t\t\t\t\t\tfor (let i = 0; i < table.rows.length; i++) {\n\t\t\t\t\t\t\tif (tableRowsPushed.indexOf(i) > -1) continue;\n\t\t\t\t\t\t\tconst rowsTd = [];\n\t\t\t\t\t\t\trowsTd.push(table.rows[i]);\n\n\t\t\t\t\t\t\trowsValuesArr.push({\n\t\t\t\t\t\t\t\trowsTd,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tBody = table.querySelector('tbody');\n\t\t\t\t\ttBody.innerHTML = '';\n\n\t\t\t\t\trowsValuesArr.map((rowsValObj) => {\n\t\t\t\t\t\trowsValObj.rowsTd.map((row) => {\n\t\t\t\t\t\t\ttBody.appendChild(row);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t/**\n\t\t\t\t\t * returning previously deleted rows\n\t\t\t\t\t */\n\t\t\t\t\tif (tableRowsBefore.length) {\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\n\t\t\t\t\t\tif (tableLastCont) {\n\t\t\t\t\t\t\tconst trRef = tableLastCont.querySelector('tr');\n\t\t\t\t\t\t\ttableRowsBefore.map((tr) => {\n\t\t\t\t\t\t\t\ttableLastCont.insertBefore(tr, trRef);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (tableRowsAfter.length) {\n\t\t\t\t\t\tconst tableLastCont = table.querySelector('tbody') ? table.querySelector('tbody') : table;\n\t\t\t\t\t\tif (tBody) {\n\t\t\t\t\t\t\ttableRowsAfter.map((tr) => {\n\t\t\t\t\t\t\t\ttableLastCont.appendChild(tr);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\n\t\t\t\t\tWPTB_CutGlueTable.glueTableHorizontally(table);\n\n\t\t\t\t\ttableWasSorted = true;\n\t\t\t\t} else if (type === 'horizontal' && e.target.dataset.xIndex === '0') {\n\t\t\t\t\tlet tds = table.querySelectorAll(`[data-y-index=\"${e.target.dataset.yIndex}\"]`);\n\t\t\t\t\ttds = [...tds];\n\n\t\t\t\t\t// preparing table for sorting\n\t\t\t\t\tlet colspan;\n\t\t\t\t\tlet colNum;\n\t\t\t\t\ttds.map((td) => {\n\t\t\t\t\t\tif (!(colspan = parseInt(td.colSpan, 10))) {\n\t\t\t\t\t\t\tcolspan = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolNum = td.dataset.xIndex;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableVertically(colNum, table);\n\t\t\t\t\t\tcolNum += colspan;\n\t\t\t\t\t\tWPTB_CutGlueTable.cutTableVertically(colNum, table);\n\t\t\t\t\t});\n\n\t\t\t\t\tconst columnsValuesArr = [];\n\t\t\t\t\tlet columnsTdFirst;\n\n\t\t\t\t\tlet tdXCoordsColSpanPrevious = 0;\n\t\t\t\t\tfor (let i = 0; i < tds.length; i++) {\n\t\t\t\t\t\tconst tdsChanged = changeSortingTdsCollection(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\ttds,\n\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\ttdXCoordsColSpanPrevious,\n\t\t\t\t\t\t\t'horizontal'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (tdsChanged && tdsChanged.hasOwnProperty('i')) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t\ti = tdsChanged.i;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (tdsChanged) {\n\t\t\t\t\t\t\ttds = tdsChanged.tds;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst td = tds[i];\n\t\t\t\t\t\tlet tdColspan = parseInt(td.colSpan, 10);\n\t\t\t\t\t\tif (!tdColspan) tdColspan = 1;\n\n\t\t\t\t\t\ttdXCoordsColSpanPrevious = parseInt(td.dataset.xIndex, 10) + tdColspan;\n\n\t\t\t\t\t\tconst textElementsValues = textElementsValuesGet(td);\n\t\t\t\t\t\tconst columnsTd = [];\n\t\t\t\t\t\tfor (let j = 0; j < tdColspan; j++) {\n\t\t\t\t\t\t\tconst tdsColumn = [\n\t\t\t\t\t\t\t\t...table.querySelectorAll(`[data-x-index=\"${parseInt(td.dataset.xIndex, 10) + j}\"]`),\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tcolumnsTd.push(tdsColumn);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (td.dataset.xIndex > 0) {\n\t\t\t\t\t\t\tcolumnsValuesArr.push({\n\t\t\t\t\t\t\t\tcolumnsTd,\n\t\t\t\t\t\t\t\tvalue: textElementsValues,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcolumnsTdFirst = columnsTd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst orderBy = setSortedAscDataAttr(e, 'sortedHorizontal');\n\t\t\t\t\tif (!orderBy) return;\n\n\t\t\t\t\tif (columnsValuesArr.length) columnsValuesArr.sort((prev, next) => sortOrder(orderBy, prev, next));\n\n\t\t\t\t\tcolumnsValuesArr.unshift({ columnsTd: columnsTdFirst });\n\n\t\t\t\t\tif (columnsValuesArr.length < table.maxCols) {\n\t\t\t\t\t\tconst difference = table.maxCols - columnsValuesArr.length;\n\t\t\t\t\t\tfor (let i = 0; i < difference; i++) {\n\t\t\t\t\t\t\tconst tdsColumn = [\n\t\t\t\t\t\t\t\t...table.querySelectorAll(\n\t\t\t\t\t\t\t\t\t`[data-x-index=\"${parseInt(table.maxCols, 10) - parseInt(difference, 10) + i}\"]`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\tcolumnsValuesArr.push({\n\t\t\t\t\t\t\t\tcolumnsTd: [tdsColumn],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < table.rows.length; i++) {\n\t\t\t\t\t\ttable.rows[i].innerHTML = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnsValuesArr.map((columnsValObj) => {\n\t\t\t\t\t\tcolumnsValObj.columnsTd.map((tdsColumn) => {\n\t\t\t\t\t\t\ttdsColumn.map((td) => {\n\t\t\t\t\t\t\t\ttable.rows[td.dataset.yIndex].appendChild(td);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tWPTB_RecalculateIndexes(table);\n\n\t\t\t\t\tWPTB_CutGlueTable.glueTableVertically(table);\n\n\t\t\t\t\ttableWasSorted = true;\n\t\t\t\t}\n\n\t\t\t\tif (tableWasSorted) {\n\t\t\t\t\tremoveCellsAttrAfterDivision(table);\n\n\t\t\t\t\tif (table.hasOwnProperty('tableSM')) {\n\t\t\t\t\t\tconst tableSM = table.tableSM();\n\t\t\t\t\t\tnew tableSM().tableStateSet();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.reassignElementsStyles('td');\n\t\t\t\t\tthis.reassignElementsStyles('tr');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Function that sets the data-attribute with the number of the row or column\n\t\t * that the table was sorted by. Returns the number of a row or column\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {string} dataAttr\n\t\t * @returns {null|boolean}\n\t\t */\n\t\tfunction setSortedAscDataAttr(e, dataAttr) {\n\t\t\tif (\n\t\t\t\te.currentTarget &&\n\t\t\t\t(e.currentTarget.classList.contains('wptb-preview-table') ||\n\t\t\t\t\te.currentTarget.classList.contains('wptb-preview-table-mobile'))\n\t\t\t) {\n\t\t\t\tif (!e.target.dataset[dataAttr] || e.target.dataset[dataAttr] === 'ask') {\n\t\t\t\t\te.target.dataset[dataAttr] = 'desk';\n\t\t\t\t} else {\n\t\t\t\t\te.target.dataset[dataAttr] = 'ask';\n\t\t\t\t}\n\n\t\t\t\treturn e.target.dataset[dataAttr];\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * defines the sorting order\n\t\t *\n\t\t * @param {string} orderBy\n\t\t * @param prev\n\t\t * @param next\n\t\t * @returns {number}\n\t\t */\n\t\tfunction sortOrder(orderBy = 'ask', prev, next) {\n\t\t\tlet prevValue = prev.value;\n\t\t\tlet nextValue = next.value;\n\t\t\tif (parseInt(prevValue) && parseInt(nextValue)) {\n\t\t\t\tprevValue = parseInt(prevValue);\n\t\t\t\tnextValue = parseInt(nextValue);\n\t\t\t}\n\n\t\t\tif (orderBy === 'ask') {\n\t\t\t\tif (prevValue < nextValue) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (prevValue === nextValue) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (prevValue < nextValue) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (prevValue === nextValue) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * return cell text elements values\n\t\t *\n\t\t * @param cell {HTMLElement}\n\t\t * @returns {string}\n\t\t */\n\t\tfunction textElementsValuesGet(cell) {\n\t\t\tlet textElements = cell.querySelectorAll('.wptb-text-container');\n\t\t\ttextElements = [...textElements];\n\t\t\tlet value = '';\n\t\t\tfor (let j = 0; j < textElements.length; j++) {\n\t\t\t\tconst p = textElements[j].querySelector('p');\n\t\t\t\tvalue += p.innerText;\n\t\t\t\tif (j !== textElements.length - 1) value += ' ';\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\t/**\n\t\t * adds cells to the collection of cells in the row or column that the table is sorted by.\n\t\t * These added cells are not originally were added in the collection,\n\t\t * because they are combined with cells from higher rows or left-side columns\n\t\t *\n\t\t * @param {event} e\n\t\t * @param {HTMLElement} table\n\t\t * @param {array} tds\n\t\t * @param {number} i\n\t\t * @param {number} tdIndexSpanPrev\n\t\t * @param {string} type\n\t\t * @returns {{tds: *}|boolean|{tds: *, i: *}}\n\t\t */\n\t\tfunction changeSortingTdsCollection(e, table, tds, i, tdIndexSpanPrev, type) {\n\t\t\tconst td = tds[i];\n\t\t\tlet tdsCollectionChanged = false;\n\t\t\tlet collectionTds;\n\t\t\tlet collectionTdsJSpan;\n\t\t\tlet collectionTdsJSpanProperty;\n\t\t\tlet indexName;\n\t\t\tlet indexNameCamelCase;\n\t\t\tlet indexNamePerpendicularCamelCase;\n\t\t\tlet tdSpanProperty;\n\t\t\t// max rows or columns column\n\t\t\tlet tableGroupCount;\n\n\t\t\tif (type === 'vertical') {\n\t\t\t\tcollectionTdsJSpanProperty = 'colSpan';\n\t\t\t\tindexName = 'data-y-index';\n\t\t\t\tindexNameCamelCase = 'yIndex';\n\t\t\t\tindexNamePerpendicularCamelCase = 'xIndex';\n\t\t\t\ttdSpanProperty = 'rowSpan';\n\t\t\t\ttableGroupCount = table.rows.length;\n\t\t\t} else if (type === 'horizontal') {\n\t\t\t\tcollectionTdsJSpanProperty = 'rowSpan';\n\t\t\t\tindexName = 'data-x-index';\n\t\t\t\tindexNameCamelCase = 'xIndex';\n\t\t\t\tindexNamePerpendicularCamelCase = 'yIndex';\n\t\t\t\ttdSpanProperty = 'colSpan';\n\t\t\t\ttableGroupCount = table.maxCols;\n\t\t\t}\n\n\t\t\tif (td.dataset[indexNameCamelCase] - tdIndexSpanPrev > 0) {\n\t\t\t\tcollectionTds = table.querySelectorAll(`[${indexName}=\"${tdIndexSpanPrev}\"]`);\n\n\t\t\t\tfor (let j = 0; j < collectionTds.length; j++) {\n\t\t\t\t\tcollectionTdsJSpan = collectionTds[j][collectionTdsJSpanProperty];\n\t\t\t\t\tif (!collectionTdsJSpan) collectionTdsJSpan = 1;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcollectionTds[j].dataset[indexNamePerpendicularCamelCase] <\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase] &&\n\t\t\t\t\t\tparseInt(collectionTds[j].dataset[indexNamePerpendicularCamelCase], 10) +\n\t\t\t\t\t\t\tparseInt(collectionTdsJSpan, 10) >\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase]\n\t\t\t\t\t) {\n\t\t\t\t\t\ttds.splice(i, 0, collectionTds[j]);\n\t\t\t\t\t\ttdsCollectionChanged = true;\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tdsCollectionChanged) return { tds, i };\n\n\t\t\tlet tdSpan = parseInt(td[tdSpanProperty], 10);\n\t\t\tif (!tdSpan) tdSpan = 1;\n\t\t\tif (i == tds.length - 1 && parseInt(td.dataset[indexNameCamelCase], 10) + tdSpan < tableGroupCount) {\n\t\t\t\tcollectionTds = table.querySelectorAll(\n\t\t\t\t\t`[${indexName}=\"${parseInt(td.dataset[indexNameCamelCase], 10) + tdSpan}\"]`\n\t\t\t\t);\n\t\t\t\tfor (let j = 0; j < collectionTds.length; j++) {\n\t\t\t\t\tcollectionTdsJSpan = collectionTds[j][collectionTdsJSpanProperty];\n\t\t\t\t\tif (!collectionTdsJSpan) collectionTdsJSpan = 1;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tcollectionTds[j].dataset[indexNamePerpendicularCamelCase] <\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase] &&\n\t\t\t\t\t\tparseInt(collectionTds[j].dataset[indexNamePerpendicularCamelCase], 10) +\n\t\t\t\t\t\t\tparseInt(collectionTdsJSpan, 10) >\n\t\t\t\t\t\t\te.target.dataset[indexNamePerpendicularCamelCase]\n\t\t\t\t\t) {\n\t\t\t\t\t\ttds.push(collectionTds[j]);\n\t\t\t\t\t\ttdsCollectionChanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tdsCollectionChanged) return { tds };\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * remove cells attributes which were used for division table\n\t\t *\n\t\t * @param {HTMLElement} table\n\t\t */\n\t\tfunction removeCellsAttrAfterDivision(table) {\n\t\t\tconst tdsAll = [...table.getElementsByTagName('td')];\n\t\t\tfor (let i = 0; i < tdsAll.length; i++) {\n\t\t\t\tif (tdsAll[i].hasAttribute('data-same-cell-before-division')) {\n\t\t\t\t\ttdsAll[i].removeAttribute('data-same-cell-before-division');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * function for run sorting table vertically\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tthis.sortableTableVerticalStart = function (e) {\n\t\t\tsortableTable.call(thisObject, e, 'vertical');\n\t\t};\n\n\t\t/**\n\t\t * function for run sorting table horizontally\n\t\t *\n\t\t * @param {event} e\n\t\t */\n\t\tthis.sortableTableHorizontalStart = function (e) {\n\t\t\tsortableTable.call(thisObject, e, 'horizontal');\n\t\t};\n\n\t\treturn this;\n\t}\n\n\treturn WPTB_SortTable;\n});\n","const WPTB_RecalculateIndexes = function (table) {\n    let trs = table.getElementsByTagName( 'tr' ),\n        tds, maxCols = 0, maxColsFull = 0, tdsArr = [];\n\n    for ( let i = 0; i < trs.length; i++ ) {\n        tds = trs[i].getElementsByTagName( 'td' );\n\n        if ( tdsArr[i] == undefined ) {\n            tdsArr[i] = [];\n        }\n\n        let jMainIter = 0;\n        for ( let j = 0; j < tds.length; j++ ) {\n            if ( tdsArr[i][j] != undefined ) {\n                for ( let y = 0; y < 100; y++ ) {\n                    if ( tdsArr[i][jMainIter] != undefined ) {\n                        jMainIter++;\n                        continue;\n                    }\n                    tdsArr[i][jMainIter] = tds[j];\n                    tds[j].dataset.xIndex = jMainIter;\n                    break;\n                }\n            } else {\n                tdsArr[i][j] = tds[j];\n                tds[j].dataset.xIndex = jMainIter;\n            }\n            tds[j].dataset.yIndex = i;\n\n            if ( tds[j].colSpan > 1 ) {\n                for ( let k = 1; k < tds[j].colSpan; k++ ) {\n                    jMainIter++;\n                    tdsArr[i][jMainIter] = 'tdDummy';\n                }\n            }\n\n            if ( tds[j].rowSpan > 1 ) {\n                for ( let x = 1; x < tds[j].rowSpan; x++ ) {\n                    if ( tdsArr[i + x] == undefined ) {\n                        tdsArr[i + x] = [];\n                    }\n                    for ( let z = 0; z < tds[j].colSpan; z++ ) {\n                        tdsArr[i + x][jMainIter - tds[j].colSpan + 1 + z ] = 'tdDummy';\n                    }\n                }\n            }\n            jMainIter++;\n        }\n\n        if ( tds.length > maxCols ) {\n            maxCols = tds.length;\n        }\n\n        if( i == 0 ) {\n            maxColsFull = jMainIter;\n        }\n    }\n    table.columns = maxCols;\n    table.maxCols = maxColsFull;\n}\n","/**\n * Responsive class assignment for frontend operations.\n *\n * This file can be used as an UMD.\n */\n(function assignToGlobal(key, context, factory) {\n\tif (typeof exports === 'object' && typeof module !== 'undefined') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tcontext[key] = factory();\n\t}\n\t// eslint-disable-next-line no-restricted-globals\n})('WPTB_ResponsiveFrontend', self || global, () => {\n\t/**\n\t * Log a message to console.\n\t *\n\t * @param {string} message message to be logged\n\t * @param {string} type console log type (e.g info, warn, error)\n\t * @throws An error will be given for invalid type value\n\t */\n\tfunction logToConsole(message, type = 'log') {\n\t\tif (typeof process !== 'undefined' && process.env.NODE_ENV === 'development') {\n\t\t\tif (console[type]) {\n\t\t\t\tconsole[type](`[WPTB]: ${message}`);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`no logging type found with given type value of [${type}]`);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Object implementation for cell element operations.\n\t * If an empty cellElement parameter is given, a fresh cell element will be created.\n\t *\n\t * @param {HTMLElement | null} cellElement cell element\n\t * @param {null | CellObject} [isReference=null] main cell object if the current cell is a reference to that cell in cases like merged cells\n\t * @constructor\n\t */\n\tfunction CellObject(cellElement, reference = null) {\n\t\t// cell element\n\t\tthis.element = cellElement;\n\n\t\tthis.referenceObject = reference;\n\n\t\t// variable for deciding part of merged cells to be visible or not\n\t\tthis.mergedRenderStatus = true;\n\n\t\t// connected merged cell references\n\t\tthis.mergedCells = {\n\t\t\trow: [],\n\t\t\tcolumn: [],\n\t\t};\n\n\t\t/**\n\t\t * Get merged render status.\n\t\t * @return {boolean} render status\n\t\t */\n\t\tthis.getMergedRenderStatus = () => {\n\t\t\treturn this.mergedRenderStatus;\n\t\t};\n\n\t\t/**\n\t\t * Set merged render status.\n\t\t * @param {boolean} status render status\n\t\t */\n\t\tthis.setMergedRenderStatus = (status) => {\n\t\t\tthis.mergedRenderStatus = status;\n\t\t};\n\n\t\t/**\n\t\t * Add merged cells.\n\t\t *\n\t\t * @param {string} mergeType merge type\n\t\t * @param {CellObject} cellObj cell object instance\n\t\t */\n\t\tthis.addToMergedCells = (mergeType, cellObj) => {\n\t\t\tthis.mergedCells[mergeType].push(cellObj);\n\t\t};\n\n\t\t/**\n\t\t * Determine if current cell is a reference to a main cell.\n\t\t * @return {boolean} a reference or not\n\t\t */\n\t\tthis.isReference = () => {\n\t\t\treturn this.referenceObject !== null;\n\t\t};\n\n\t\tif (this.isReference()) {\n\t\t\tthis.element = cellElement.cloneNode(true);\n\t\t}\n\n\t\t// modifications object\n\t\t// this object will keep track of the modifications that has done to the cell to make sure we can roll them back to their original values\n\t\tthis.modifications = {};\n\n\t\t// spans object for cell's original merge values\n\t\tthis.spans = {\n\t\t\trow: 1,\n\t\t\tcol: 1,\n\t\t};\n\n\t\tthis.remainingSpans = {\n\t\t\trow: 0,\n\t\t\tcol: 0,\n\t\t};\n\n\t\t/**\n\t\t * Cache cell element's original span values.\n\t\t * @private\n\t\t */\n\t\tthis.cacheSpanValues = () => {\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\tObject.keys(this.spans).map((k) => {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.spans, k)) {\n\t\t\t\t\tconst defaultVal = this.spans[k];\n\n\t\t\t\t\tthis.spans[k] = this.element.getAttribute(`${k}Span`) || defaultVal;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthis.cacheSpanValues();\n\n\t\t/**\n\t\t * Get original span value of cell object.\n\t\t *\n\t\t * @param {string} spanType span type, available values are row-column\n\t\t * @param {boolean} fromElement, instead of original value, get the assigned span value from HTMLElement itself\n\t\t * @throws An error will be given for invalid span type\n\t\t */\n\t\tthis.getSpan = (spanType, fromElement = false) => {\n\t\t\tconst spanVal = fromElement ? this.getElement().getAttribute(`${spanType}Span`) : this.spans[spanType];\n\t\t\tif (spanVal) {\n\t\t\t\treturn spanVal;\n\t\t\t}\n\t\t\tthrow new Error(`no span value found with the given type of [${spanType}]`);\n\t\t};\n\n\t\tthis.getRemainingSpans = (spanType) => {\n\t\t\treturn this.remainingSpans[spanType];\n\t\t};\n\n\t\tthis.setRemainingSpans = (spanType, value) => {\n\t\t\tthis.remainingSpans[spanType] = value;\n\t\t};\n\n\t\t/**\n\t\t * Get cell element.\n\t\t *\n\t\t * @return {HTMLElement} cell element\n\t\t */\n\t\tthis.getElement = () => {\n\t\t\treturn this.element;\n\t\t};\n\n\t\t/**\n\t\t * Create a cell element.\n\t\t * @private\n\t\t * @return {HTMLTableDataCellElement}\n\t\t */\n\t\tthis.createCellElement = () => {\n\t\t\treturn document.createElement('td');\n\t\t};\n\n\t\t// create a new cell element if no cellElement argument is given with constructor function\n\t\tif (!cellElement) {\n\t\t\tthis.element = this.createCellElement();\n\t\t}\n\n\t\t/**\n\t\t * Add attribute to cell element.\n\t\t *\n\t\t * This function have the ability to add/remove attributes from cell element.\n\t\t * All attributes modified with this function will be cached with their before value for an easy reset on demand.\n\t\t *\n\t\t * @param {string} attributeKey attribute name in camelCase format, for sub-keys, use dot object notation\n\t\t * @param {any} attributeValue attribute value\n\t\t * @param {boolean} [append=false] append the value or replace it\n\t\t * @param {string} [glue=,] glue to join attribute value if append option is enabled\n\t\t */\n\t\tthis.setAttribute = (attributeKey, attributeValue, append = false, glue = ',') => {\n\t\t\tlet defaultVal = this.getElement()[attributeKey];\n\n\t\t\t// if attribute value is a function or an object, it means we pulled a whole declaration instead of only inline attribute values, in that case, use getAttribute to get only inline values related to that attribute\n\t\t\tif (typeof defaultVal === 'function' || typeof defaultVal === 'object') {\n\t\t\t\tdefaultVal = this.getElement().getAttribute(attributeKey);\n\t\t\t}\n\n\t\t\t// if there is already a default value defined, use that instead\n\t\t\tif (this.modifications[attributeKey]) {\n\t\t\t\tdefaultVal = this.modifications[attributeKey].default;\n\t\t\t}\n\n\t\t\tlet currentVal = defaultVal;\n\n\t\t\t// join attributes\n\t\t\tif (append) {\n\t\t\t\tcurrentVal += `${currentVal}${glue}${attributeValue}`;\n\t\t\t} else {\n\t\t\t\tcurrentVal = attributeValue;\n\t\t\t}\n\n\t\t\tthis.modifications[attributeKey] = { value: currentVal, default: defaultVal };\n\n\t\t\tthis.getElement()[attributeKey] = currentVal;\n\t\t};\n\n\t\t/**\n\t\t * Set row/colspan for cell.\n\t\t *\n\t\t * @param {string} spanType span type\n\t\t * @param {number} value value to assign to span\n\t\t * @return {boolean} if any space left to render the element\n\t\t */\n\t\tthis.setSpan = (spanType, value) => {\n\t\t\t// working on main cell\n\t\t\tif (!this.isReference()) {\n\t\t\t\tconst valueToApply = this.getSpan(spanType) - value < 0 ? this.getSpan(spanType) : value;\n\n\t\t\t\tthis.setAttribute(`${spanType}Span`, valueToApply);\n\n\t\t\t\t// calculate remaining cells amount to merge in this span type\n\t\t\t\tthis.setRemainingSpans(spanType, this.getSpan(spanType) - valueToApply);\n\n\t\t\t\t// set visibility of connected merge group cells to false to not render them since we added necessary span values to main cell which will leak into their position\n\t\t\t\tfor (let mc = 0; mc < valueToApply - 1; mc += 1) {\n\t\t\t\t\tif (this.mergedCells[spanType] && this.mergedCells[spanType][mc]) {\n\t\t\t\t\t\tthis.mergedCells[spanType][mc].setMergedRenderStatus(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// working on reference\n\n\t\t\tif (!this.getMergedRenderStatus()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst remainingVal = this.referenceObject.getRemainingSpans(spanType);\n\n\t\t\t// no space left to put cell\n\t\t\tif (remainingVal === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst valueToApply = remainingVal - value < 0 ? remainingVal : value;\n\n\t\t\tconst remainingParentSpans = remainingVal - valueToApply;\n\t\t\tthis.referenceObject.setRemainingSpans(spanType, remainingParentSpans);\n\n\t\t\tthis.setAttribute(`${spanType}Span`, valueToApply);\n\n\t\t\t// change render status of remaining connected merge cells\n\t\t\tif (remainingParentSpans !== 0) {\n\t\t\t\tconst totalConnectedCells = this.referenceObject.mergedCells[spanType].length;\n\t\t\t\tconst startIndex = totalConnectedCells - remainingVal + 1;\n\t\t\t\tconst endIndex = startIndex + valueToApply - 1;\n\n\t\t\t\tfor (let mc = startIndex; mc < endIndex; mc += 1) {\n\t\t\t\t\tthis.mergedCells[spanType][mc].setMergedRenderStatus(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t * Reset a modified attribute to its default value\n\t\t *\n\t\t * @param {string} attributeKey attribute name\n\t\t */\n\t\tthis.resetAttribute = (attributeKey) => {\n\t\t\tif (this.modifications[attributeKey]) {\n\t\t\t\tthis.getElement()[attributeKey] = this.modifications[attributeKey].default;\n\t\t\t\tthis.modifications[attributeKey] = undefined;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Reset all modified attributes of cell element to their default values.\n\t\t */\n\t\tthis.resetAllAttributes = () => {\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\tObject.keys(this.modifications).map((k) => {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(this.modifications, k)) {\n\t\t\t\t\tthis.resetAttribute(k);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn {\n\t\t\tgetElement: this.getElement,\n\t\t\tel: this.element,\n\t\t\tsetAttribute: this.setAttribute,\n\t\t\tresetAllAttributes: this.resetAllAttributes,\n\t\t\tgetSpan: this.getSpan,\n\t\t\tsetSpan: this.setSpan,\n\t\t\tgetRemainingSpans: this.getRemainingSpans,\n\t\t\tsetRemainingSpans: this.setRemainingSpans,\n\t\t\tisReference: this.isReference,\n\t\t\taddToMergedCells: this.addToMergedCells,\n\t\t\tmergedCells: this.mergedCells,\n\t\t\tsetMergedRenderStatus: this.setMergedRenderStatus,\n\t\t\tgetMergedRenderStatus: this.getMergedRenderStatus,\n\t\t};\n\t}\n\n\tCellObject.spanTypes = { row: 'row', column: 'col' };\n\n\t/**\n\t * Object implementation for table element operations.\n\t *\n\t * @param {HTMLElement} tableEl table element\n\t * @return {object} instance\n\t * @constructor\n\t */\n\tfunction TableObject(tableEl) {\n\t\t/**\n\t\t * Table element.\n\t\t * @private\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.tableElement = tableEl;\n\n\t\t/**\n\t\t * Parsed table object.\n\t\t *\n\t\t * @private\n\t\t * @type {array}\n\t\t */\n\t\tthis.parsedTable = [];\n\n\t\t/**\n\t\t * An array of created table rows elements that are id'd according to their index in array.\n\t\t * @type {[HTMLElement]}\n\t\t */\n\t\tthis.rowCache = [];\n\n\t\t/**\n\t\t * Original table elements minus the cells.\n\t\t * @type {{rows: []}}\n\t\t * @private\n\t\t */\n\t\tthis.originals = { rows: [] };\n\n\t\t/**\n\t\t * Row colors of original table.\n\t\t * @type {{even: string, header: string, odd: string}}\n\t\t */\n\t\tthis.rowColors = {\n\t\t\theader: null,\n\t\t\teven: null,\n\t\t\todd: null,\n\t\t};\n\n\t\t/**\n\t\t * Add cell to parsed array.\n\t\t *\n\t\t * @private\n\t\t * @param {number} r row id\n\t\t * @param {number} c column id\n\t\t * @param {CellObject} cellObject cell object to add to parsed array\n\t\t */\n\t\tthis.addToParsed = (r, c, cellObject) => {\n\t\t\tif (!this.parsedTable[r]) {\n\t\t\t\tthis.parsedTable[r] = [];\n\t\t\t}\n\n\t\t\tthis.parsedTable[r][c] = cellObject;\n\t\t};\n\n\t\t/**\n\t\t * Assign table cells into row and column numbers.\n\t\t * @private\n\t\t */\n\t\tthis.parseTable = () => {\n\t\t\tconst rows = Array.from(this.tableElement.querySelectorAll('tr'));\n\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\trows.map((r, ri) => {\n\t\t\t\t// cache original rows for future use\n\t\t\t\tthis.originals.rows.push(r);\n\n\t\t\t\tconst cells = Array.from(r.querySelectorAll('td'));\n\n\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\tcells.map((c, ci) => {\n\t\t\t\t\tconst currentCellObject = new CellObject(c);\n\t\t\t\t\tthis.addToParsed(ri, ci, currentCellObject);\n\n\t\t\t\t\tconst spanRow = currentCellObject.getSpan(CellObject.spanTypes.row);\n\t\t\t\t\tconst spanCol = currentCellObject.getSpan(CellObject.spanTypes.column);\n\n\t\t\t\t\tif (spanRow > 1) {\n\t\t\t\t\t\tfor (let sr = 1; sr < spanRow; sr += 1) {\n\t\t\t\t\t\t\tconst referenceCell = new CellObject(c, currentCellObject);\n\t\t\t\t\t\t\tcurrentCellObject.addToMergedCells('row', referenceCell);\n\t\t\t\t\t\t\tthis.addToParsed(ri + sr, ci, referenceCell);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (spanCol > 1) {\n\t\t\t\t\t\tfor (let sc = 1; sc < spanCol; sc += 1) {\n\t\t\t\t\t\t\tconst referenceCell = new CellObject(c, currentCellObject);\n\t\t\t\t\t\t\tcurrentCellObject.addToMergedCells('column', referenceCell);\n\t\t\t\t\t\t\tthis.addToParsed(ri, ci + sc, referenceCell);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.parseRowColors(rows);\n\t\t};\n\n\t\t/**\n\t\t * Parse row colors of original table for futures uses.\n\t\t * @param {[HTMLElement]} rows html row elements\n\t\t * @private\n\t\t */\n\t\tthis.parseRowColors = (rows) => {\n\t\t\tif (!rows || rows.length <= 0) {\n\t\t\t\tlogToConsole('no rows are found to parse their colors', 'error');\n\t\t\t}\n\n\t\t\t// get row colors if they are defined as datasets on table element\n\t\t\tconst headerDatasetColor = this.tableElement.dataset.wptbHeaderBackgroundColor;\n\t\t\tconst evenRowDatasetColor = this.tableElement.dataset.wptbEvenRowBackgroundColor;\n\t\t\tconst oddRowDatasetColor = this.tableElement.dataset.wptbOddRowBackgroundColor;\n\n\t\t\t// header row color\n\t\t\tthis.rowColors.header =\n\t\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\t\theaderDatasetColor !== undefined\n\t\t\t\t\t? headerDatasetColor\n\t\t\t\t\t: rows[0].style.backgroundColor === ''\n\t\t\t\t\t? null\n\t\t\t\t\t: rows[0].style.backgroundColor;\n\n\t\t\t// calculate needed number of rows to get even and odd row background colors\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\tconst rowsNeeded = rows.length / 3 >= 1 ? 0 : rows.length === 1 ? 2 : (rows.length - 1) % 2;\n\n\t\t\t// create additional rows and add them to table to get their row background colors since table row count may be lower to get even/odd rows\n\t\t\tfor (let rn = 0; rn < rowsNeeded; rn += 1) {\n\t\t\t\tconst tempRow = document.createElement('tr');\n\n\t\t\t\tthis.tableElement.querySelector('tbody').appendChild(tempRow);\n\t\t\t\trows.push(tempRow);\n\t\t\t}\n\n\t\t\t// even & odd row colors\n\t\t\t// dataset colors have priority over colors gathered from computed row styles\n\t\t\tthis.rowColors.even = evenRowDatasetColor || getComputedStyle(rows[1]).backgroundColor;\n\t\t\tthis.rowColors.odd = evenRowDatasetColor ? oddRowDatasetColor : getComputedStyle(rows[2]).backgroundColor;\n\n\t\t\t// remove created rows from DOM\n\t\t\tfor (let r = 0; r < rowsNeeded; r += 1) {\n\t\t\t\trows[rows.length - (r + 1)].remove();\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Add a row to the table.\n\t\t * @param {array} classList an array of class names to be added to row\n\t\t * @param {boolean} fromOriginals use rows from original table instead of creating a new one\n\t\t * @param {number} originalIndex original row index\n\t\t */\n\t\tthis.addRow = (classList, fromOriginals = false, originalIndex = 0) => {\n\t\t\tif (!Array.isArray(classList)) {\n\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\tclassList = [classList];\n\t\t\t}\n\n\t\t\tconst tableBody = this.tableElement.querySelector('tbody');\n\t\t\tlet tempRow;\n\n\t\t\tif (!fromOriginals) {\n\t\t\t\tconst range = document.createRange();\n\t\t\t\trange.setStart(tableBody, 0);\n\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\ttempRow = range.createContextualFragment(`<tr class=\"${classList.join(' ')}\"></tr>`).childNodes[0];\n\t\t\t} else {\n\t\t\t\ttempRow = this.originals.rows[originalIndex];\n\t\t\t}\n\n\t\t\t// add row to table body\n\t\t\ttableBody.appendChild(tempRow);\n\n\t\t\t// cache row for future use\n\t\t\tthis.rowCache.push(tempRow);\n\n\t\t\treturn { el: tempRow, id: this.rowCache.length - 1 };\n\t\t};\n\n\t\t/**\n\t\t * Clear the contents of table element.\n\t\t */\n\t\tthis.clearTable = () => {\n\t\t\t// clear row cache\n\t\t\tthis.rowCache = [];\n\n\t\t\t// clear children of `tbody` element\n\t\t\tthis.tableElement.querySelector('tbody').innerHTML = '';\n\t\t};\n\n\t\t/**\n\t\t * Get row element from cache.\n\t\t *\n\t\t * @param {number} id row id\n\t\t * @return {null|HTMLElement} row element if present or null if not\n\t\t */\n\t\tthis.getRow = (id) => {\n\t\t\tif (this.rowCache[id]) {\n\t\t\t\treturn this.rowCache[id];\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tlogToConsole(`no row with id [${id}] found in the cache.`, 'warn');\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Get maximum number of rows available at table.\n\t\t *\n\t\t * @return {number} maximum amount of rows\n\t\t */\n\t\tthis.maxRows = () => {\n\t\t\treturn this.parsedTable.length;\n\t\t};\n\n\t\t/**\n\t\t * Get the number of maximum available column count in the table.\n\t\t *\n\t\t * @return {number} maximum available column count\n\t\t */\n\t\tthis.maxColumns = () => {\n\t\t\treturn this.parsedTable.reduce((p, c) => {\n\t\t\t\tif (c.length > p) {\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\tp = c.length;\n\t\t\t\t}\n\n\t\t\t\treturn p;\n\t\t\t}, 0);\n\t\t};\n\n\t\t/**\n\t\t * Get the table cell at specified row-column location.\n\t\t *\n\t\t * As in arrays, row and column numbering starts from number 0.\n\t\t *\n\t\t * @param {number} r row number\n\t\t * @param {number} c column number\n\t\t * @param {boolean} returnObject return object instead of HTMLElement\n\t\t * @return {HTMLElement | null | CellObject} element if address is possible, null if not\n\t\t */\n\t\tthis.getCell = (r, c, returnObject = false) => {\n\t\t\ttry {\n\t\t\t\tif (this.parsedTable[r][c]) {\n\t\t\t\t\tif (returnObject) {\n\t\t\t\t\t\treturn this.parsedTable[r][c];\n\t\t\t\t\t}\n\t\t\t\t\treturn this.parsedTable[r][c].el;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tlogToConsole(`no cell found at the given address of [${r}-${c}]`, 'warn');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tlogToConsole(`no cell found at the given address of [${r}-${c}]`, 'warn');\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Get cells at a given row.\n\t\t *\n\t\t * @param {number} rowId row id\n\t\t * @param {boolean} returnObj return an array of CellObject instead\n\t\t * @return {array} cells in row\n\t\t */\n\t\tthis.getCellsAtRow = (rowId, returnObj = false) => {\n\t\t\tconst cells = [];\n\t\t\tfor (let c = 0; c < this.maxColumns(); c += 1) {\n\t\t\t\tconst tempCell = this.getCell(rowId, c, returnObj);\n\t\t\t\tif (tempCell) {\n\t\t\t\t\tcells.push(tempCell);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cells;\n\t\t};\n\n\t\t/**\n\t\t * Append the cell with given ids to a cached row\n\t\t *\n\t\t * @param {number} cellRowId cell row id\n\t\t * @param {number} cellColumnId cell column id\n\t\t * @param {number} rowId id of row in row cache\n\t\t */\n\t\tthis.appendToRow = (cellRowId, cellColumnId, rowId) => {\n\t\t\tconst cachedRow = this.getRow(rowId);\n\t\t\tconst cell = this.getCell(cellRowId, cellColumnId, true);\n\n\t\t\tif (cell && cachedRow) {\n\t\t\t\tcachedRow.appendChild(cell.getElement());\n\t\t\t}\n\t\t\treturn cell;\n\t\t};\n\n\t\t/**\n\t\t * Append html element to a cached row.\n\t\t *\n\t\t * @param {HTMLElement} el element\n\t\t * @param {number} rowId if of row in row cache\n\t\t */\n\t\tthis.appendElementToRow = (el, rowId) => {\n\t\t\tconst cachedRow = this.getRow(rowId);\n\n\t\t\tif (el && cachedRow) {\n\t\t\t\tcachedRow.appendChild(el);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Add cell object to a cached row.\n\t\t *\n\t\t * @param {CellObject} cellObj cell object\n\t\t * @param {number} rowId row id\n\t\t */\n\t\tthis.appendObjectToRow = (cellObj, rowId) => {\n\t\t\tconst cachedRow = this.getRow(rowId);\n\t\t\tif (cellObj && cachedRow) {\n\t\t\t\tcachedRow.appendChild(cellObj.getElement());\n\t\t\t}\n\t\t};\n\n\t\tthis.parseTable();\n\n\t\treturn {\n\t\t\tmaxRows: this.maxRows,\n\t\t\tmaxColumns: this.maxColumns,\n\t\t\taddRow: this.addRow,\n\t\t\tclearTable: this.clearTable,\n\t\t\tgetCell: this.getCell,\n\t\t\tappendToRow: this.appendToRow,\n\t\t\tappendElementToRow: this.appendElementToRow,\n\t\t\tappendObjectToRow: this.appendObjectToRow,\n\t\t\tgetCellsAtRow: this.getCellsAtRow,\n\t\t\tel: this.tableElement,\n\t\t\trowColors: this.rowColors,\n\t\t};\n\t}\n\n\t// default options for responsive class\n\tconst responsiveClassDefaultOptions = {\n\t\tquery: '.wptb-preview-table',\n\t\tdefaultClasses: ['wptb-plugin-responsive-base'],\n\t\tbindToResize: false,\n\t};\n\n\t/**\n\t * Class for handling operations related to responsive functionalities of tables.\n\t *\n\t * @constructor\n\t * @param {object} options options object\n\t */\n\tfunction ResponsiveFront(options = {}) {\n\t\t// merge default options with user sent options\n\t\t//this.options = { ...responsiveClassDefaultOptions, ...options };\n\t\tthis.options = Object.assign({}, responsiveClassDefaultOptions, options);\n\n\t\tthis.elements = Array.from(document.querySelectorAll(this.options.query));\n\n\t\tthis.elementObjects = this.elements.map((e) => {\n\t\t\treturn {\n\t\t\t\tel: e,\n\t\t\t\ttableObject: new TableObject(e),\n\t\t\t};\n\t\t});\n\n\t\t/**\n\t\t * Bind rebuilding of tables to window resize event.\n\t\t */\n\t\tthis.bindRebuildToResize = () => {\n\t\t\twindow.addEventListener('resize', () => {\n\t\t\t\tthis.rebuildTables();\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Get responsive directives of table element.\n\t\t *\n\t\t * @private\n\t\t * @param {HTMLElement} el table element\n\t\t * @return {object|null} JSON representation of the directive element, if not available, null will be returned\n\t\t */\n\t\tthis.getDirective = (el) => {\n\t\t\tconst directiveString = el.dataset.wptbResponsiveDirectives;\n\n\t\t\tif (!directiveString) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn JSON.parse(atob(directiveString));\n\t\t};\n\n\t\t/**\n\t\t * Add default classes to rebuilt tables.\n\t\t *\n\t\t * This classes are added to lay out a base style for the responsive table.\n\t\t *\n\t\t * @param {HTMLElement} el table element\n\t\t */\n\t\tthis.addDefaultClasses = (el) => {\n\t\t\tel.classList.add(this.options.defaultClasses);\n\t\t};\n\n\t\t/**\n\t\t * Remove default classes from target table.\n\t\t * @param {HTMLElement} el table element\n\t\t */\n\t\tthis.removeDefaultClasses = (el) => {\n\t\t\tel.classList.remove(this.options.defaultClasses);\n\t\t};\n\n\t\t/**\n\t\t * Rebuild table in auto mode.\n\t\t *\n\t\t * Main characteristic of auto mode is table is rebuilt by stacking rows/columns on top of each other, leaving minimal effort from user to create a responsive table at breakpoints.\n\t\t *\n\t\t * @param {HTMLElement} tableEl table element\n\t\t * @param {string} sizeRange range id for current screen size\n\t\t * @param {object} autoOption mode options\n\t\t * @param {TableObject} tableObj table object\n\t\t */\n\t\tthis.autoBuild = (tableEl, sizeRange, autoOption, tableObj) => {\n\t\t\t// base options\n\t\t\tconst direction = autoOption.cellStackDirection[sizeRange];\n\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\tconst topRowAsHeader = autoOption.topRowAsHeader[sizeRange];\n\t\t\tconst cellsPerRow = autoOption.cellsPerRow[sizeRange];\n\n\t\t\t// new options\n\t\t\tconst staticTopRow = autoOption.staticTopRow ? autoOption.staticTopRow[sizeRange] : false;\n\n\t\t\ttableObj.clearTable();\n\n\t\t\tif (sizeRange === 'desktop') {\n\t\t\t\tthis.buildDefault(tableObj);\n\t\t\t\tthis.removeDefaultClasses(tableEl);\n\t\t\t} else {\n\t\t\t\tthis.autoDirectionBuild(tableObj, direction, topRowAsHeader, staticTopRow, cellsPerRow);\n\t\t\t\tthis.addDefaultClasses(tableEl);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Rebuild table with a direction to read cells.\n\t\t *\n\t\t * Direction in question in here is either by row or column:\n\t\t * * row: cells will be read row by row, in each row starting from the first column\n\t\t * * column: cells will be read column by column, in each column starting from the first row of the table\n\t\t *\n\t\t * @param {TableObject} tableObj table object\n\t\t * @param {string} direction direction to read cells, possible options [row, column]\n\t\t * @param {boolean} topRowAsHeader use top row as header\n\t\t * @param {boolean} staticTopRow use top row as static\n\t\t * @param {number} cellsPerRow cells per row\n\t\t */\n\t\tthis.autoDirectionBuild = (\n\t\t\ttableObj,\n\t\t\tdirection,\n\t\t\ttopRowAsHeader = false,\n\t\t\tstaticTopRow = false,\n\t\t\tcellsPerRow = 1\n\t\t) => {\n\t\t\tconst rows = tableObj.maxRows();\n\t\t\tconst columns = tableObj.maxColumns();\n\t\t\tconst isRowStacked = direction === 'row';\n\n\t\t\t// build table with top row as header\n\t\t\tif (topRowAsHeader) {\n\t\t\t\tthis.headerBuild(tableObj, direction, cellsPerRow);\n\t\t\t} else {\n\t\t\t\t// cell stack direction is selected as row\n\t\t\t\t// for future new functionality additions, keep different cell stack direction logic separate instead of generalizing the inner logic\n\t\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\t\tif (isRowStacked) {\n\t\t\t\t\tconst allCellsByRow = [];\n\t\t\t\t\tlet rowStartIndex = 0;\n\n\t\t\t\t\t// static top row option is enabled\n\t\t\t\t\tif (staticTopRow) {\n\t\t\t\t\t\tconst topCells = tableObj.getCellsAtRow(0, true);\n\n\t\t\t\t\t\tconst baseCells = topCells.filter((c) => !c.isReference());\n\n\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\t\tbaseCells.map((b) => {\n\t\t\t\t\t\t\trowStartIndex += 1;\n\t\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\t\t\t\t\t\t\trowObj.el.style.backgroundColor = tableObj.rowColors.header;\n\n\t\t\t\t\t\t\ttableObj.appendObjectToRow(b, rowObj.id);\n\n\t\t\t\t\t\t\tb.setAttribute('colSpan', cellsPerRow);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// get cells by reading row by row\n\t\t\t\t\tfor (let r = rowStartIndex; r < rows; r += 1) {\n\t\t\t\t\t\t// eslint-disable-next-line no-loop-func\n\t\t\t\t\t\ttableObj.getCellsAtRow(r, true).forEach((c) => {\n\t\t\t\t\t\t\t// only use non reference cells to avoid duplication for non top row as header tables\n\t\t\t\t\t\t\tif (!c.isReference()) {\n\t\t\t\t\t\t\t\tallCellsByRow.push(c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cellCount = allCellsByRow.length;\n\n\t\t\t\t\tfor (let c = 0, r = 0; c < cellCount; c += cellsPerRow, r += 1) {\n\t\t\t\t\t\t// const rowId = tableObj.addRow('wptb-row').id;\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\n\t\t\t\t\t\t// preserve original row colors for even and odd rows\n\t\t\t\t\t\trowObj.el.style.backgroundColor = tableObj.rowColors[r % 2 === 0 ? 'odd' : 'even'];\n\n\t\t\t\t\t\t// place cells by 'cells by row' option value\n\t\t\t\t\t\tfor (let pR = 0; pR < cellsPerRow; pR += 1) {\n\t\t\t\t\t\t\tconst tempCell = allCellsByRow[c + pR];\n\n\t\t\t\t\t\t\tif (tempCell) {\n\t\t\t\t\t\t\t\ttableObj.appendElementToRow(tempCell.getElement(), rowObj.id);\n\n\t\t\t\t\t\t\t\ttempCell.resetAllAttributes();\n\t\t\t\t\t\t\t\ttempCell.setAttribute('style', 'width: 100% !important', true, ';');\n\t\t\t\t\t\t\t\ttempCell.setAttribute('colSpan', 1);\n\t\t\t\t\t\t\t\ttempCell.setAttribute('rowSpan', 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// cell stack direction is selected as column\n\t\t\t\telse {\n\t\t\t\t\tconst allCellsByCol = [];\n\t\t\t\t\tlet rowStartIndex = 0;\n\n\t\t\t\t\t// static top row option is enabled\n\t\t\t\t\tif (staticTopRow) {\n\t\t\t\t\t\tconst topCells = tableObj.getCellsAtRow(0, true);\n\n\t\t\t\t\t\tconst baseCells = topCells.filter((t) => !t.isReference());\n\n\t\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\t\tbaseCells.map((b) => {\n\t\t\t\t\t\t\trowStartIndex += 1;\n\t\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\t\t\t\t\t\t\trowObj.el.style.backgroundColor = tableObj.rowColors.header;\n\n\t\t\t\t\t\t\ttableObj.appendObjectToRow(b, rowObj.id);\n\n\t\t\t\t\t\t\tb.setAttribute('colSpan', cellsPerRow);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// read all cells column by column\n\t\t\t\t\tfor (let c = 0; c < columns; c += 1) {\n\t\t\t\t\t\tfor (let r = rowStartIndex; r < rows; r += 1) {\n\t\t\t\t\t\t\tconst tCell = tableObj.getCell(r, c, true);\n\t\t\t\t\t\t\t// only use non reference cells to avoid duplication for non top row as header tables\n\t\t\t\t\t\t\tif (tCell && !tCell.isReference()) {\n\t\t\t\t\t\t\t\tallCellsByCol.push(tCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cellCount = allCellsByCol.length;\n\n\t\t\t\t\tfor (let c = 0, r = 0; c < cellCount; c += cellsPerRow, r += 1) {\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\n\t\t\t\t\t\t// preserve original row colors for even and odd rows\n\t\t\t\t\t\trowObj.el.style.backgroundColor = tableObj.rowColors[r % 2 === 0 ? 'odd' : 'even'];\n\n\t\t\t\t\t\tfor (let cR = 0; cR < cellsPerRow; cR += 1) {\n\t\t\t\t\t\t\tconst tempCell = allCellsByCol[c + cR];\n\n\t\t\t\t\t\t\tif (tempCell) {\n\t\t\t\t\t\t\t\ttableObj.appendElementToRow(tempCell.getElement(), rowObj.id);\n\n\t\t\t\t\t\t\t\ttempCell.resetAllAttributes();\n\t\t\t\t\t\t\t\ttempCell.setAttribute('style', 'width: 100% !important', true, ';');\n\t\t\t\t\t\t\t\ttempCell.setAttribute('colSpan', 1);\n\t\t\t\t\t\t\t\ttempCell.setAttribute('rowSpan', 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Build table with top row assigned as header.\n\t\t *\n\t\t * @param {TableObject} tableObj table object\n\t\t * @param {string} direction cell stack direction, possible options are [row, column]\n\t\t * @param {number} itemsPerHeader items bound to each header element\n\t\t */\n\t\tthis.headerBuild = (tableObj, direction, itemsPerHeader = 1) => {\n\t\t\t// cells at header\n\t\t\t// applying header row color to cells\n\t\t\tconst headerCells = tableObj.getCellsAtRow(0, true).map((h) => {\n\t\t\t\th.setAttribute('style', `background-color: ${tableObj.rowColors.header}`, true, ';');\n\t\t\t\treturn h;\n\t\t\t});\n\n\t\t\tconst stackedAsColumn = direction === 'column';\n\n\t\t\t// row count\n\t\t\tconst rows = tableObj.maxRows();\n\t\t\t// column count\n\t\t\tconst columns = tableObj.maxColumns();\n\n\t\t\tconst rowBorderStyle = '3px solid gray';\n\n\t\t\t// stack direction is column\n\t\t\tif (stackedAsColumn) {\n\t\t\t\t/**\n\t\t\t\t * Add header cells as new row to table.\n\t\t\t\t * @param {boolean} addBorder add top border to header row\n\t\t\t\t */\n\t\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\t\tfunction addHeaderCells(addBorder = false) {\n\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\n\t\t\t\t\tif (addBorder) {\n\t\t\t\t\t\trowObj.el.style.borderTop = rowBorderStyle;\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\theaderCells.map((h) => {\n\t\t\t\t\t\t// clone header cell to reuse it for multiple rows\n\t\t\t\t\t\ttableObj.appendElementToRow(h.el.cloneNode(true), rowObj.id);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// count of header rows that will be created\n\t\t\t\tconst headerCount = Math.ceil((rows - 1) / itemsPerHeader);\n\t\t\t\t// row index on original table\n\t\t\t\tlet currentOriginalRow = 1;\n\t\t\t\tfor (let r = 0; r < headerCount; r += 1) {\n\t\t\t\t\t// create header row and add to table\n\t\t\t\t\taddHeaderCells(r > 0);\n\t\t\t\t\tfor (let c = 0; c < itemsPerHeader; c += 1) {\n\t\t\t\t\t\t// break iteration when current row surpasses original row amount\n\t\t\t\t\t\tif (currentOriginalRow >= rows) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\n\t\t\t\t\t\t// apply row color relative to current header row\n\t\t\t\t\t\trowObj.el.style.backgroundColor = tableObj.rowColors[c % 2 === 0 ? 'even' : 'odd'];\n\t\t\t\t\t\tfor (let cc = 0; cc < columns; cc += 1) {\n\t\t\t\t\t\t\tconst currentCell = tableObj.getCell(currentOriginalRow, cc, true);\n\n\t\t\t\t\t\t\tif (currentCell) {\n\t\t\t\t\t\t\t\tcurrentCell.resetAllAttributes();\n\n\t\t\t\t\t\t\t\t// status to decide whether render cell or not\n\t\t\t\t\t\t\t\tlet cellAddStatus = true;\n\n\t\t\t\t\t\t\t\tconst rowSpan = currentCell.getSpan(CellObject.spanTypes.row);\n\t\t\t\t\t\t\t\tconst colSpan = currentCell.getSpan(CellObject.spanTypes.column);\n\n\t\t\t\t\t\t\t\tif (rowSpan > 1) {\n\t\t\t\t\t\t\t\t\t// items remaining in current header\n\t\t\t\t\t\t\t\t\tconst remainingItems = itemsPerHeader - c;\n\n\t\t\t\t\t\t\t\t\t// calculate whether to apply full rowspan value or remaining item value depending on the current position of the cell\n\t\t\t\t\t\t\t\t\tconst currentRowSpan = Math.min(rowSpan, remainingItems);\n\n\t\t\t\t\t\t\t\t\tcellAddStatus = currentCell.setSpan(CellObject.spanTypes.row, currentRowSpan);\n\t\t\t\t\t\t\t\t\t// reset render status of cell to visible for future use\n\t\t\t\t\t\t\t\t\tcurrentCell.setMergedRenderStatus(true);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (cellAddStatus) {\n\t\t\t\t\t\t\t\t\ttableObj.appendObjectToRow(currentCell, rowObj.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentOriginalRow += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// stack direction is row\n\t\t\t\t// number of headers that will be created\n\t\t\t\tconst headerCount = Math.ceil((rows - 1) / itemsPerHeader);\n\n\t\t\t\tlet currentOriginalRow = 1;\n\n\t\t\t\tfor (let hc = 0; hc < headerCount; hc += 1) {\n\t\t\t\t\tfor (let c = 0; c < columns; c += 1) {\n\t\t\t\t\t\tconst rowObj = tableObj.addRow('wptb-row');\n\n\t\t\t\t\t\t// clear out row color to override row color with cell colors\n\t\t\t\t\t\trowObj.el.style.backgroundColor = 'none';\n\n\t\t\t\t\t\tif (hc > 0 && c === 0) {\n\t\t\t\t\t\t\trowObj.el.style.borderTop = rowBorderStyle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst clonedHeaderCell = headerCells[c].el.cloneNode(true);\n\n\t\t\t\t\t\t// apply header row color to header cell\n\t\t\t\t\t\tclonedHeaderCell.style.backgroundColor = `${tableObj.rowColors.header} !important`;\n\n\t\t\t\t\t\ttableObj.appendElementToRow(clonedHeaderCell, rowObj.id);\n\n\t\t\t\t\t\tfor (let r = 0; r < itemsPerHeader; r += 1) {\n\t\t\t\t\t\t\tif (currentOriginalRow + r >= rows) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// const currentCell = tableObj.appendToRow(currentOriginalRow + r, c, rowObj.id);\n\t\t\t\t\t\t\tconst currentCell = tableObj.getCell(currentOriginalRow + r, c, true);\n\n\t\t\t\t\t\t\tif (currentCell) {\n\t\t\t\t\t\t\t\tcurrentCell.resetAllAttributes();\n\n\t\t\t\t\t\t\t\tlet cellAddStatus = true;\n\n\t\t\t\t\t\t\t\tconst rowSpan = currentCell.getSpan(CellObject.spanTypes.row);\n\t\t\t\t\t\t\t\tconst colSpan = currentCell.getSpan(CellObject.spanTypes.column);\n\n\t\t\t\t\t\t\t\tif (rowSpan > 1) {\n\t\t\t\t\t\t\t\t\tconst remainingItems = itemsPerHeader - r;\n\n\t\t\t\t\t\t\t\t\tconst currentRowSpan = Math.min(rowSpan, remainingItems);\n\n\t\t\t\t\t\t\t\t\tcellAddStatus = currentCell.setSpan(CellObject.spanTypes.row, currentRowSpan);\n\n\t\t\t\t\t\t\t\t\tconst rS = currentCell.el.getAttribute('rowSpan');\n\t\t\t\t\t\t\t\t\tconst cS = currentCell.el.getAttribute('colSpan');\n\n\t\t\t\t\t\t\t\t\t// switch span values\n\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute('rowSpan', cS);\n\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute('colSpan', rS);\n\n\t\t\t\t\t\t\t\t\tcurrentCell.setMergedRenderStatus(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (cellAddStatus) {\n\t\t\t\t\t\t\t\t\t// color index for the cell, this will be used to reflect table row colors to cells. currently, grouping up the same items with the same color code\n\t\t\t\t\t\t\t\t\tlet colorIndex = (currentOriginalRow + r + hc) % 2 === 0 ? 'even' : 'odd';\n\n\t\t\t\t\t\t\t\t\t// for better visuals and distinction for tables with 1 item per header, using this calculation for color index\n\t\t\t\t\t\t\t\t\tif (itemsPerHeader === 1) {\n\t\t\t\t\t\t\t\t\t\tcolorIndex = currentOriginalRow % 2 === 0 ? 'even' : 'odd';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tcurrentCell.setAttribute(\n\t\t\t\t\t\t\t\t\t\t'style',\n\t\t\t\t\t\t\t\t\t\t`background-color: ${tableObj.rowColors[colorIndex]}`,\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t';'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\ttableObj.appendObjectToRow(currentCell, rowObj.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcurrentOriginalRow += itemsPerHeader;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Build table in its default form.\n\t\t *\n\t\t * Default form of table is the layout it has in desktop breakpoint.\n\t\t *\n\t\t * @param {TableObject} tableObj table object\n\t\t */\n\t\tthis.buildDefault = (tableObj) => {\n\t\t\tconst rows = tableObj.maxRows();\n\t\t\tconst columns = tableObj.maxColumns();\n\n\t\t\tfor (let r = 0; r < rows; r += 1) {\n\t\t\t\tconst rowId = tableObj.addRow('', true, r).id;\n\t\t\t\tfor (let c = 0; c < columns; c += 1) {\n\t\t\t\t\tconst tempCell = tableObj.getCell(r, c, true);\n\n\t\t\t\t\t// only render cell if a valid cell is found and it is not a reference\n\t\t\t\t\tif (tempCell && !tempCell.isReference()) {\n\t\t\t\t\t\t// reset all modified attributes of cell to their default values\n\t\t\t\t\t\ttempCell.resetAllAttributes();\n\t\t\t\t\t\ttableObj.appendElementToRow(tempCell.getElement(), rowId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Calculate range id for given size value.\n\t\t *\n\t\t * @param {number} val value\n\t\t * @param {object} stops an object containing stop ids as keys and respective sizes as values\n\t\t * @return {string} range id\n\t\t */\n\t\tthis.calculateRangeId = (val, stops) => {\n\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\tconst sortedStops = Object.keys(stops).sort((a, b) => stops[a].width - stops[b].width);\n\n\t\t\tlet rangeId = sortedStops[0];\n\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\tsortedStops.map((s) => {\n\t\t\t\tif (val >= stops[s].width) {\n\t\t\t\t\trangeId = s;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn rangeId;\n\t\t};\n\n\t\t/**\n\t\t * Rebuild table according to its responsive directives.\n\t\t *\n\t\t * @private\n\t\t * @param {HTMLElement} el table element\n\t\t * @param {number} size size in pixels\n\t\t * @param {TableObject} tableObj table object instance\n\t\t * @throws An error will be given for invalid mode name\n\t\t */\n\t\tthis.rebuildTable = (el, size, tableObj) => {\n\t\t\tconst directive = this.getDirective(el);\n\n\t\t\tif (directive) {\n\t\t\t\tif (!directive.responsiveEnabled) {\n\t\t\t\t\t// this.buildDefault(tableObj);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst mode = directive.responsiveMode;\n\n\t\t\t\t// main build logic for different responsive modes should be named in the format of `{modeName}Build` to automatically call the associated function from here\n\t\t\t\tconst buildCallable = this[`${mode}Build`];\n\n\t\t\t\tif (!size) {\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\tsize = el.getBoundingClientRect().width;\n\t\t\t\t}\n\n\t\t\t\tconst sizeRangeId = this.calculateRangeId(size, directive.breakpoints);\n\n\t\t\t\tif (buildCallable) {\n\t\t\t\t\tconst modeOptions = directive.modeOptions[mode];\n\t\t\t\t\tbuildCallable.call(this, el, sizeRangeId, modeOptions, tableObj);\n\n\t\t\t\t\tWPTB_RecalculateIndexes(el);\n\t\t\t\t\tconst tabEvent = new CustomEvent('table:rebuilt', {detail: {sizeRangeId: sizeRangeId, topRowAsHeader: directive.modeOptions[mode]['topRowAsHeader']}});\n\t\t\t\t\tel.dispatchEvent(tabEvent);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`No build mode named as [${mode}] found.`);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Rebuild tables with the given screen size.\n\t\t *\n\t\t * @param {number} size screen size\n\t\t */\n\t\tthis.rebuildTables = (size) => {\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\tthis.elementObjects.map((o) => {\n\t\t\t\tlet innerSize = size;\n\t\t\t\tif (!size) {\n\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\tinnerSize = window.innerWidth;\n\n\t\t\t\t\tconst directives = this.getDirective(o.el);\n\t\t\t\t\t// calculate size according to relative width directive\n\t\t\t\t\tif (directives && directives.relativeWidth) {\n\t\t\t\t\t\tswitch (directives.relativeWidth) {\n\t\t\t\t\t\t\tcase 'window':\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\t\t\t\tinnerSize = window.innerWidth;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'container':\n\t\t\t\t\t\t\t\t// get the size of the container table is in\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\t\t\t\tinnerSize = o.el.parentNode.parentNode.parentNode.clientWidth;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\t\t\t\t\t\tinnerSize = window.innerWidth;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.rebuildTable(o.el, innerSize, o.tableObject);\n\t\t\t});\n\t\t};\n\n\t\tif (this.options.bindToResize) {\n\t\t\tthis.bindRebuildToResize();\n\t\t}\n\n\t\treturn { rebuildTables: this.rebuildTables, getDirective: this.getDirective, calculateRangeId: this.calculateRangeId };\n\t}\n\n\treturn ResponsiveFront;\n});\n","(function ($) {\n\t/**\n\t * All of the code for your public-facing JavaScript source\n\t * should reside in this file.\n\t *\n\t * Note: It has been assumed you will write jQuery code here, so the\n\t * $ function reference has been prepared for usage within the scope\n\t * of this function.\n\t *\n\t * This enables you to define handlers, for when the DOM is ready:\n\t *\n\t * $(function() {\n\t *\n\t * });\n\t *\n\t * When the window is loaded:\n\t *\n\t * $( window ).load(function() {\n\t *\n\t * });\n\t *\n\t * ...and/or other possibilities.\n\t *\n\t * Ideally, it is not considered best practise to attach more than a\n\t * single DOM-ready or window-load handler for a particular page.\n\t * Although scripts in the WordPress core, Plugins and Themes may be\n\t * practising this, we should strive to set a better example in our own work.\n\t *\n\t * The file is enqueued from inc/frontend/class-frontend.php.\n\t */\n\n\tjQuery(document).ready(function ($) {\n\t\tconst tableContainers = document.getElementsByClassName('wptb-table-container');\n\t\t/**\n\t\t * Adds hover color change support for supported button elements.\n\t\t */\n\t\tfunction addHoverSupport(querySelector) {\n\t\t\tconst buttons = Array.from(document.querySelectorAll(querySelector));\n\n\t\t\tbuttons.map((b) => {\n\t\t\t\tb.addEventListener('mouseenter', (e) => {\n\t\t\t\t\tconst el = e.target;\n\t\t\t\t\t// hover background-color\n\t\t\t\t\tif (el.dataset.wptbElementHoverBgColor) {\n\t\t\t\t\t\tel.style.backgroundColor = el.dataset.wptbElementHoverBgColor;\n\t\t\t\t\t}\n\t\t\t\t\t// hover color\n\t\t\t\t\tif (el.dataset.wptbElementHoverTextColor) {\n\t\t\t\t\t\tel.style.color = el.dataset.wptbElementHoverTextColor;\n\t\t\t\t\t}\n\t\t\t\t\t// hover scale\n\t\t\t\t\tif (el.dataset.wptbElementHoverScale) {\n\t\t\t\t\t\tel.style.transform = `scale(${b.dataset.wptbElementHoverScale})`;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tb.addEventListener('mouseleave', (e) => {\n\t\t\t\t\t// reset all supported hover properties to their default value\n\t\t\t\t\tconst el = e.target;\n\t\t\t\t\tif (el.dataset.wptbElementHoverBgColor) {\n\t\t\t\t\t\tel.style.backgroundColor = el.dataset.wptbElementBgColor;\n\t\t\t\t\t}\n\t\t\t\t\tif (el.dataset.wptbElementHoverTextColor) {\n\t\t\t\t\t\tel.style.color = el.dataset.wptbElementColor;\n\t\t\t\t\t}\n\t\t\t\t\tif (el.dataset.wptbElementHoverScale) {\n\t\t\t\t\t\tel.style.transform = 'scale(1)';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// add all kind of functions that have event listeners before responsive table reconstruction to make sure those event listeners are carried over to their clones\n\t\taddHoverSupport('.wptb-preview-table .wptb-button');\n\n\t\t/**\n\t\t * function wptb_tableContainerSectionSmall\n\t\t * add class ( wptb-section-small ) in small width\n\t\t * remove this class in large width\n\t\t * @returns {void}\n\t\t */\n\t\tfunction wptb_tableContainerSectionSmall() {\n\t\t\tconst wptbTableContainer = jQuery('.wptb-table-container');\n\t\t\tconst sw = wptbTableContainer.width();\n\t\t\tif (wptbTableContainer.length > 0) {\n\t\t\t\tif (sw < 480) {\n\t\t\t\t\twptbTableContainer.addClass('wptb-section-small');\n\t\t\t\t} else {\n\t\t\t\t\twptbTableContainer.removeClass('wptb-section-small');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * function wptb_tableGenerateMobile\n\t\t * generates a mobile view of the table\n\t\t * when the top row of the table is not a heading\n\t\t * @returns {void}\n\t\t */\n\t\tfunction wptb_tableGenerateMobile() {\n\t\t\tconst wptbTableContainer = document.getElementsByClassName('wptb-table-container');\n\t\t\tconst wptbPreviewTable = document.getElementsByClassName('wptb-preview-table');\n\t\t\tconst wptbPreviewTableMobile = document.getElementsByClassName('wptb-preview-table-mobile');\n\t\t\tif (wptbTableContainer.length > 0 && wptbPreviewTable.length > 0) {\n\t\t\t\tconst sw = wptbTableContainer[0].offsetWidth;\n\t\t\t\tif (sw < 480) {\n\t\t\t\t\twptbPreviewTable[0].style.display = 'none';\n\n\t\t\t\t\tif (wptbPreviewTableMobile.length == 0) {\n\t\t\t\t\t\tconst tableRows = wptbPreviewTable[0].rows;\n\t\t\t\t\t\tconst tableRowTop = tableRows[0];\n\t\t\t\t\t\tconst tableRowTopChildren = tableRowTop.children;\n\t\t\t\t\t\tlet columnCount = 0;\n\n\t\t\t\t\t\tfor (let i = 0; i < tableRowTopChildren.length; i++) {\n\t\t\t\t\t\t\tcolumnCount += tableRowTopChildren[i].colSpan;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newTableArray = [];\n\n\t\t\t\t\t\tfor (let i = 0; i < columnCount; i++) {\n\t\t\t\t\t\t\tnewTableArray[i] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = 0; i < tableRows.length; i++) {\n\t\t\t\t\t\t\tconst rowChildren = tableRows[i].children;\n\n\t\t\t\t\t\t\tfor (let j = 0; j < columnCount; j++) {\n\t\t\t\t\t\t\t\tif (rowChildren[j].dataset.xIndex == j) {\n\t\t\t\t\t\t\t\t\tconst tdNew = rowChildren[j].cloneNode(true);\n\t\t\t\t\t\t\t\t\tif (tableRows[i].style.backgroundColor) {\n\t\t\t\t\t\t\t\t\t\ttdNew.style.backgroundColor = tableRows[i].style.backgroundColor;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnewTableArray[j].push(tdNew);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewTableArray[j].push('');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst table = document.createElement('table');\n\t\t\t\t\t\ttable.classList.add('wptb-preview-table-mobile');\n\t\t\t\t\t\tconst tableStyle = wptbPreviewTable[0].getAttribute('style');\n\t\t\t\t\t\ttable.setAttribute('style', tableStyle);\n\t\t\t\t\t\ttable.style.display = 'table';\n\t\t\t\t\t\tfor (let i = 0; i < columnCount; i++) {\n\t\t\t\t\t\t\tconst row = table.insertRow(-1);\n\t\t\t\t\t\t\trow.classList.add('wptb-row');\n\n\t\t\t\t\t\t\tfor (let j = 0; j < tableRows.length; j++) {\n\t\t\t\t\t\t\t\tif (newTableArray[i][j]) {\n\t\t\t\t\t\t\t\t\trow.appendChild(newTableArray[i][j]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twptbTableContainer[0].appendChild(table);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twptbPreviewTableMobile[0].style.display = 'table';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twptbPreviewTable[0].style.display = 'table';\n\t\t\t\t\tif (wptbPreviewTableMobile.length > 0) {\n\t\t\t\t\t\twptbPreviewTableMobile[0].style.display = 'none';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twptb_tdDefaultWidth();\n\t\twptb_tableReconstraction();\n\n\t\t// when window resize call wpcd_archiveSectionSmall and wptb_tableGenerateMobile\n\t\t$(window).resize(function () {\n\t\t\twptb_tdDefaultWidth();\n\t\t\twptb_tableReconstraction();\n\t\t});\n\n\t\tfunction wptb_tableReconstraction() {\n\t\t\tfor (let i = 0; i < tableContainers.length; i++) {\n\t\t\t\tconst tableContainer = tableContainers[i];\n\n\t\t\t\t// Set default indicator of creating a new table in true\n\t\t\t\tlet createNewTableIndic = true;\n\n\t\t\t\tlet previewTable = tableContainer.getElementsByClassName('wptb-preview-table');\n\t\t\t\tlet tableContainerMatrix = tableContainer.getElementsByClassName('wptb-table-container-matrix');\n\n\t\t\t\tif (previewTable.length > 0 && tableContainerMatrix.length > 0) {\n\t\t\t\t\tpreviewTable = previewTable[0];\n\t\t\t\t\ttableContainerMatrix = tableContainerMatrix[0];\n\t\t\t\t\tpreviewTable.style.display = 'table';\n\n\t\t\t\t\tif (previewTable.dataset.wptbTableAlignment) {\n\t\t\t\t\t\tconst { wptbTableAlignment } = previewTable.dataset;\n\n\t\t\t\t\t\tconst wptbTableContainerWidth = tableContainer.offsetWidth;\n\t\t\t\t\t\tif (wptbTableContainerWidth < previewTable.offsetWidth) {\n\t\t\t\t\t\t\tpreviewTable.style.float = null;\n\t\t\t\t\t\t} else if (wptbTableAlignment == 'center') {\n\t\t\t\t\t\t\tpreviewTable.style.float = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpreviewTable.style.float = wptbTableAlignment;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (wptbTableAlignment == 'center') {\n\t\t\t\t\t\t\ttableContainer.style.float = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttableContainer.style.float = wptbTableAlignment;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// check data parametrs reconstraction and wptbAdaptiveTable if they are both equal 1 then continue\n\t\t\t\t\tif (previewTable.dataset.reconstraction == 1 && previewTable.dataset.wptbAdaptiveTable == 1) {\n\t\t\t\t\t\t// get widths for wptb-table-container and wptb-preview-table\n\t\t\t\t\t\tconst tableContainerWidth = tableContainer.offsetWidth;\n\t\t\t\t\t\tconst previewTableWidth = previewTable.offsetWidth;\n\n\t\t\t\t\t\t// get count of table columns\n\t\t\t\t\t\tlet tableColumns;\n\t\t\t\t\t\tconst previewTableRows = previewTable.rows;\n\t\t\t\t\t\tif (previewTableRows.length > 0) {\n\t\t\t\t\t\t\tconst firstRow = previewTableRows[0];\n\t\t\t\t\t\t\tconst tdsRow = firstRow.querySelectorAll('td');\n\n\t\t\t\t\t\t\ttableColumns = tdsRow.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// check the top line if it is presented as a title\n\t\t\t\t\t\tconst tablePreviewHeadIndic = previewTable.classList.contains('wptb-table-preview-head');\n\n\t\t\t\t\t\t// check conditions: if table top row is as \"header\" - table must have more that two columns,\n\t\t\t\t\t\t// otherwise table must have more taht one columns\n\t\t\t\t\t\tlet tableReconstructed = false;\n\t\t\t\t\t\tlet wptbPreviewTableMobile;\n\t\t\t\t\t\tif ((!tablePreviewHeadIndic || tableColumns > 2) && tableColumns > 1) {\n\t\t\t\t\t\t\t// if width of wptb-table-container less then width of wptb-preview-table -\n\t\t\t\t\t\t\t// continue the way creation new mobile table\n\t\t\t\t\t\t\tif (tableContainerWidth < previewTableWidth) {\n\t\t\t\t\t\t\t\ttableContainer.style.overflow = 'unset';\n\n\t\t\t\t\t\t\t\t// hide wptb-table-container-matrix\n\t\t\t\t\t\t\t\tif (tableContainerMatrix && !tableContainerMatrix.classList.contains('wptb-matrix-hide')) {\n\t\t\t\t\t\t\t\t\ttableContainerMatrix.classList.add('wptb-matrix-hide');\n\t\t\t\t\t\t\t\t\ttableReconstructed = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpreviewTable.classList.add('wptb-mobile-view-active');\n\n\t\t\t\t\t\t\t\tif (previewTable.rows && tableColumns) {\n\t\t\t\t\t\t\t\t\t// we get the estimated cell width\n\t\t\t\t\t\t\t\t\tconst tdWidth = previewTableWidth / tableColumns;\n\n\t\t\t\t\t\t\t\t\t// get the quantity of whole Columns that are can placed in the container\n\t\t\t\t\t\t\t\t\tlet wholeColumnsInContainer = Math.floor(tableContainerWidth / tdWidth);\n\t\t\t\t\t\t\t\t\tif (wholeColumnsInContainer < 1) wholeColumnsInContainer = 1;\n\n\t\t\t\t\t\t\t\t\t// check for the existence of a mobile table\n\t\t\t\t\t\t\t\t\t// if it available, check this table for compliance\n\t\t\t\t\t\t\t\t\t// with our conditions. If it compliance, remain this table\n\t\t\t\t\t\t\t\t\t// and cancel creating a new table ( createNewTableIndic = false ).\n\t\t\t\t\t\t\t\t\tif (tableContainer.getElementsByClassName('wptb-preview-table-mobile').length > 0) {\n\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile = tableContainer.getElementsByClassName(\n\t\t\t\t\t\t\t\t\t\t\t'wptb-preview-table-mobile'\n\t\t\t\t\t\t\t\t\t\t)[0];\n\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile.classList.remove('wptb-mobile-hide');\n\t\t\t\t\t\t\t\t\t\tconst dataWholeColumnInContainer =\n\t\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile.dataset.wholeColumnsInContainer;\n\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tdataWholeColumnInContainer == wholeColumnsInContainer &&\n\t\t\t\t\t\t\t\t\t\t\tpreviewTable.classList.contains('wptb-table-preview-head')\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tcreateNewTableIndic = false;\n\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\tdataWholeColumnInContainer == wholeColumnsInContainer &&\n\t\t\t\t\t\t\t\t\t\t\t!previewTable.classList.contains('wptb-table-preview-head') &&\n\t\t\t\t\t\t\t\t\t\t\t(tableContainerWidth > 480 || wptbPreviewTableMobile.column == 1)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tcreateNewTableIndic = false;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile.parentNode.removeChild(wptbPreviewTableMobile);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t// if indicator of creating of table \"true\" - continue\n\t\t\t\t\t\t\t\t\tif (createNewTableIndic) {\n\t\t\t\t\t\t\t\t\t\t// create new table for mobile devices\n\t\t\t\t\t\t\t\t\t\tconst newTable = document.createElement('table');\n\t\t\t\t\t\t\t\t\t\tconst newTableTbody = document.createElement('tbody');\n\t\t\t\t\t\t\t\t\t\tnewTable.appendChild(newTableTbody);\n\n\t\t\t\t\t\t\t\t\t\t// add css class for new mobile table\n\t\t\t\t\t\t\t\t\t\tnewTable.classList.add('wptb-preview-table-mobile');\n\t\t\t\t\t\t\t\t\t\tconst infArr = previewTable.className.match(/wptb-element-main(.+)-(\\d+)/i);\n\t\t\t\t\t\t\t\t\t\tif (infArr && Array.isArray(infArr)) {\n\t\t\t\t\t\t\t\t\t\t\tnewTable.classList.add(infArr[0]);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// get number of rows for wptb-preview-table\n\t\t\t\t\t\t\t\t\t\tconst tableRows = previewTable.rows.length;\n\n\t\t\t\t\t\t\t\t\t\t// In this variable must have quantity columns of the last section of the new table\n\t\t\t\t\t\t\t\t\t\tlet newTableLastSectionFilledColumns;\n\n\t\t\t\t\t\t\t\t\t\t// set valuesIsSaved in 'false'\n\t\t\t\t\t\t\t\t\t\t// if the parameters newTableLastSectionFilledColumns get\n\t\t\t\t\t\t\t\t\t\t// optimal values, valuesIsSaved must have value 'true'\n\t\t\t\t\t\t\t\t\t\tlet valuesIsSaved = false;\n\n\t\t\t\t\t\t\t\t\t\t// check if top row is as \"header\"\n\t\t\t\t\t\t\t\t\t\tif (previewTable.classList.contains('wptb-table-preview-head')) {\n\t\t\t\t\t\t\t\t\t\t\t// quantity rows without top row\n\t\t\t\t\t\t\t\t\t\t\tconst tableRowsWithoutHeader = tableRows - 1;\n\n\t\t\t\t\t\t\t\t\t\t\t// this variable will have quantity columns in new mobile table\n\t\t\t\t\t\t\t\t\t\t\tlet newTableColumnsWithoutLeftHeader;\n\n\t\t\t\t\t\t\t\t\t\t\t// if quantity of rows in desktop table more than\n\t\t\t\t\t\t\t\t\t\t\t// quantity whole columns which are can placed in the container,\n\t\t\t\t\t\t\t\t\t\t\t// execute \"loop for\"\n\t\t\t\t\t\t\t\t\t\t\tif (tableRows > wholeColumnsInContainer) {\n\t\t\t\t\t\t\t\t\t\t\t\t// this code, —Åyclical reduces the number of columns in the new table,\n\t\t\t\t\t\t\t\t\t\t\t\t// until the optimal view is obtained so that the last block of the new table\n\t\t\t\t\t\t\t\t\t\t\t\t// has more than half the columns compared to the previous blocks\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tableRowsWithoutHeader; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader = wholeColumnsInContainer - 1 - i;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableColumnsWithoutLeftHeader <= 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader = 1;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableRowsWithoutHeader % newTableColumnsWithoutLeftHeader;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableLastSectionFilledColumns == 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader <= 6 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2 * newTableLastSectionFilledColumns <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader > 6 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader <= 12 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.8 * newTableLastSectionFilledColumns <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader > 12 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader <= 18 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader -\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1.6 * newTableLastSectionFilledColumns <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns <\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumnsWithoutLeftHeader = tableRowsWithoutHeader;\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// if all necessary values ‚Äã‚Äãare available (  ), execute\n\t\t\t\t\t\t\t\t\t\t\tif (valuesIsSaved) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet countRows;\n\t\t\t\t\t\t\t\t\t\t\t\tif (newTableColumnsWithoutLeftHeader > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcountRows =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableColumns *\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tMath.ceil(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableRowsWithoutHeader / newTableColumnsWithoutLeftHeader\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcountRows = tableColumns;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst sectionNumberLast = Math.floor((countRows - 1) / tableColumns);\n\t\t\t\t\t\t\t\t\t\t\t\tlet tdStyles;\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let j = 0; j < countRows; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst sectionNumber = Math.floor(j / tableColumns);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst tr = document.createElement('tr');\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst tdLeftHeader = previewTable.rows[0].children[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tj - sectionNumber * tableColumns\n\t\t\t\t\t\t\t\t\t\t\t\t\t].cloneNode(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet td;\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst rowFirstStyles = window.getComputedStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.rows[0]\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (!tdLeftHeader.style.backgroundColor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.backgroundColor =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowFirstStyles.backgroundColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.width = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.height = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t//tdLeftHeader.removeAttribute('data-x-index');\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.removeAttribute('data-wptb-css-td-auto-width');\n\t\t\t\t\t\t\t\t\t\t\t\t\ttdStyles = window.getComputedStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.querySelector('td')\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (tdStyles.borderTopColor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.borderColor = tdStyles.borderTopColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.borderColor = tdStyles.borderBottomColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (sectionNumber > 0 && j % tableColumns == 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdLeftHeader.style.borderTopWidth = '5px';\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttr.appendChild(tdLeftHeader);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet k = newTableColumnsWithoutLeftHeader * sectionNumber + 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tk < newTableColumnsWithoutLeftHeader * (sectionNumber + 1) + 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tk++\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (k < previewTable.rows.length) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd = previewTable.rows[k].children[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tj - sectionNumber * tableColumns\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t].cloneNode(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst rowKStyles = window.getComputedStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.rows[k]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!td.style.backgroundColor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.backgroundColor = rowKStyles.backgroundColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.width = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.height = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//td.removeAttribute('data-x-index');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.removeAttribute('data-wptb-css-td-auto-width');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd = document.createElement('td');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderWidth = '0px';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.background = '#fff';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttdStyles = window.getComputedStyle(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewTable.querySelector('td')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (tdStyles.borderTopColor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderColor = tdStyles.borderTopColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderColor = tdStyles.borderBottomColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (sectionNumber > 0 && j % tableColumns == 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttd.style.borderTopWidth = '5px';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttr.appendChild(td);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableTbody.appendChild(tr);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tlet newTableColumns;\n\t\t\t\t\t\t\t\t\t\t\tif (tableContainerWidth > 480) {\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tableColumns; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns = wholeColumnsInContainer - i;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableColumns == 0) newTableColumns = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns = tableColumns % newTableColumns;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (newTableLastSectionFilledColumns == 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns <= 6 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns - 2 * newTableLastSectionFilledColumns <= 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns < newTableColumns\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns > 6 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns <= 12 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns - 1.8 * newTableLastSectionFilledColumns <= 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns < newTableColumns\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns > 12 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns <= 18 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns - 1.6 * newTableLastSectionFilledColumns <= 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns < newTableColumns\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableColumns = 1;\n\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tvaluesIsSaved = true;\n\t\t\t\t\t\t\t\t\t\t\t\tnewTable.column = 1;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tconst increaseRatioRows = Math.ceil(tableColumns / newTableColumns);\n\n\t\t\t\t\t\t\t\t\t\t\tconst newTableRows = increaseRatioRows * tableRows;\n\n\t\t\t\t\t\t\t\t\t\t\tif (valuesIsSaved) {\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < newTableRows; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst sectionNumber = Math.floor(i / tableRows);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst tr = document.createElement('tr');\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet jMax;\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet jStart;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsectionNumber != increaseRatioRows - 1 ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableLastSectionFilledColumns == 0\n\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjStart = sectionNumber * newTableColumns;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjMax = newTableColumns * (1 + sectionNumber);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjStart = tableColumns - newTableLastSectionFilledColumns;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjMax = tableColumns;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst row = previewTable.rows[i - sectionNumber * tableRows];\n\t\t\t\t\t\t\t\t\t\t\t\t\ttr.classList = row.classList;\n\t\t\t\t\t\t\t\t\t\t\t\t\ttr.style.backgroundColor = row.style.backgroundColor;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let j = jStart; j < jMax; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newTd = row.children[j].cloneNode(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!newTd.style.backgroundColor) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst rowStyles = window.getComputedStyle(row);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.style.backgroundColor = rowStyles.backgroundColor;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.style.width = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.style.height = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//newTd.removeAttribute('data-x-index');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewTd.removeAttribute('data-wptb-css-td-auto-width');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttr.appendChild(newTd);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewTableTbody.appendChild(tr);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tnewTable.dataset.wholeColumnsInContainer = wholeColumnsInContainer;\n\t\t\t\t\t\t\t\t\t\tconst images = newTable.querySelectorAll('[srcset]');\n\t\t\t\t\t\t\t\t\t\tif (images.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < images.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\timages[i].removeAttribute('srcset');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twptbPreviewTableMobile = newTable;\n\t\t\t\t\t\t\t\t\t\ttableContainer.appendChild(newTable);\n\t\t\t\t\t\t\t\t\t\ttableReconstructed = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (tableContainerMatrix && tableContainerMatrix.classList.contains('wptb-matrix-hide')) {\n\t\t\t\t\t\t\t\t\ttableContainerMatrix.classList.remove('wptb-matrix-hide');\n\t\t\t\t\t\t\t\t\ttableReconstructed = true;\n\t\t\t\t\t\t\t\t\tpreviewTable.classList.remove('wptb-mobile-view-active');\n\t\t\t\t\t\t\t\t\twptbPreviewTableMobile = tableContainer.querySelector('.wptb-preview-table-mobile');\n\t\t\t\t\t\t\t\t\tif (wptbPreviewTableMobile) {\n\t\t\t\t\t\t\t\t\t\ttableContainer\n\t\t\t\t\t\t\t\t\t\t\t.getElementsByClassName('wptb-preview-table-mobile')[0]\n\t\t\t\t\t\t\t\t\t\t\t.classList.add('wptb-mobile-hide');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttableContainer.style.overflow = 'auto';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpreviewTable.style.minWidth = 'auto';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tWPTB_RecalculateIndexes(previewTable);\n\n\t\t\t\t\t\tif(tableReconstructed) {\n\t\t\t\t\t\t\tWPTB_RecalculateIndexes(wptbPreviewTableMobile);\n\t\t\t\t\t\t\tconst tabEvent = new CustomEvent('table:rebuilt', { detail: true, bubbles: true });\n\t\t\t\t\t\t\tpreviewTable.dispatchEvent(tabEvent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction wptb_tdDefaultWidth() {\n\t\t\tconst wptbTableContainers = document.getElementsByClassName('wptb-table-container');\n\t\t\t// let frontendEditLink = document.querySelectorAll( '.wptb-frontend-table-edit-link' );\n\t\t\tfor (let i = 0; i < wptbTableContainers.length; i++) {\n\t\t\t\tconst wptbTableContainer = wptbTableContainers[i];\n\n\t\t\t\twptbTableContainer.classList.add(`wptb-table-container-${i}`);\n\n\t\t\t\tlet table = wptbTableContainer.getElementsByClassName('wptb-preview-table');\n\t\t\t\tif (table.length > 0) {\n\t\t\t\t\ttable = table[0];\n\n\t\t\t\t\tif (table.dataset.wptbTableContainerMaxWidth) {\n\t\t\t\t\t\twptbTableContainer.style.maxWidth = `${table.dataset.wptbTableContainerMaxWidth}px`;\n\t\t\t\t\t}\n\t\t\t\t\ttable.classList.remove('wptb-table-preview-static-indic');\n\n\t\t\t\t\ttable.merging–°ellsHorizontally = false;\n\t\t\t\t\tconst tds = table.querySelectorAll('td');\n\t\t\t\t\tfor (let j = 0; j < tds.length; j++) {\n\t\t\t\t\t\tif (tds[j].colSpan > 1) {\n\t\t\t\t\t\t\ttable.merging–°ellsHorizontally = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst wptbTableContainerWidth = wptbTableContainer.offsetWidth;\n\n\t\t\t\t\tconst td = table.querySelector('td');\n\t\t\t\t\tconst tdStyleObj = window.getComputedStyle(td, null);\n\t\t\t\t\tconst tdBorderLeftWidth = tdStyleObj.getPropertyValue('border-left-width');\n\t\t\t\t\tconst tdBorderRightWidth = tdStyleObj.getPropertyValue('border-right-width');\n\t\t\t\t\tconst tdPaddingLeftWidth = tdStyleObj.getPropertyValue('padding-left');\n\t\t\t\t\tconst tdPaddingRightWidth = tdStyleObj.getPropertyValue('padding-left');\n\t\t\t\t\tconst tdPaddingCommon = parseFloat(tdPaddingLeftWidth, 10) + parseFloat(tdPaddingRightWidth, 10);\n\t\t\t\t\tconst tableTdBorderCommonWidth =\n\t\t\t\t\t\tparseFloat(tdBorderLeftWidth, 10) + parseFloat(tdBorderRightWidth, 10);\n\t\t\t\t\tconst { wptbTableTdsSumMaxWidth } = table.dataset;\n\t\t\t\t\tconst { wptbFixedWidthSize } = table.dataset;\n\t\t\t\t\tconst { wptbCellsWidthAutoCount } = table.dataset;\n\t\t\t\t\tlet styleElementCreate = false;\n\t\t\t\t\tlet tableTdWidthAuto;\n\t\t\t\t\tif (wptbTableTdsSumMaxWidth < wptbTableContainerWidth) {\n\t\t\t\t\t\tif (wptbCellsWidthAutoCount) {\n\t\t\t\t\t\t\ttable.style.minWidth = '100%';\n\n\t\t\t\t\t\t\t//                        if( frontendEditLink && frontendEditLink[i] ) {\n\t\t\t\t\t\t\t//                            frontendEditLink[i].style.minWidth = wptbTableTdsSumMaxWidth + 'px';\n\t\t\t\t\t\t\t//                        }\n\n\t\t\t\t\t\t\tif (table.merging–°ellsHorizontally) {\n\t\t\t\t\t\t\t\ttable.style.width = 'auto';\n\t\t\t\t\t\t\t\tconst tableTdsWidthAutoCommon = wptbTableContainerWidth - wptbFixedWidthSize;\n\t\t\t\t\t\t\t\ttableTdWidthAuto = tableTdsWidthAutoCommon / wptbCellsWidthAutoCount;\n\t\t\t\t\t\t\t\ttableTdWidthAuto = tableTdWidthAuto - tdPaddingCommon - tableTdBorderCommonWidth;\n\t\t\t\t\t\t\t\tstyleElementCreate = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttable.style.width = '100%';\n\n\t\t\t\t\t\t\t\t//                            if( frontendEditLink && frontendEditLink[i] ) {\n\t\t\t\t\t\t\t\t//                                frontendEditLink[i].style.width = '100%';\n\t\t\t\t\t\t\t\t//                                frontendEditLink[i].style.maxWidth = '100%';\n\t\t\t\t\t\t\t\t//                            }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttable.style.width = 'auto';\n\t\t\t\t\t\t\ttable.style.minWidth = null;\n\t\t\t\t\t\t\ttable.style.maxWidth = `${wptbTableTdsSumMaxWidth}px`;\n\n\t\t\t\t\t\t\t//                        if( frontendEditLink && frontendEditLink[i] ) {\n\t\t\t\t\t\t\t//                            frontendEditLink[i].style.width = null;\n\t\t\t\t\t\t\t//                            frontendEditLink[i].style.minWidth = null;\n\t\t\t\t\t\t\t//                            frontendEditLink[i].style.maxWidth = wptbTableTdsSumMaxWidth + 'px';\n\t\t\t\t\t\t\t//                        }\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttable.style.maxWidth = null;\n\t\t\t\t\t\ttable.style.minWidth = `${table.dataset.wptbTableTdsSumMaxWidth}px`;\n\t\t\t\t\t\ttable.style.width = 'auto';\n\t\t\t\t\t\ttableTdWidthAuto = table.dataset.wptbTdWidthAuto ? table.dataset.wptbTdWidthAuto : '100';\n\t\t\t\t\t\tstyleElementCreate = true;\n\n\t\t\t\t\t\t//                    if( frontendEditLink && frontendEditLink[i] ) {\n\t\t\t\t\t\t//                        frontendEditLink[i].style.maxWidth = '100%';\n\t\t\t\t\t\t//                        frontendEditLink[i].style.minWidth = table.dataset.wptbTableTdsSumMaxWidth + 'px';\n\t\t\t\t\t\t//                        frontendEditLink[i].style.width = null;\n\t\t\t\t\t\t//                    }\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { head } = document;\n\t\t\t\t\tif (head) {\n\t\t\t\t\t\tconst cssForTdsWidthAutoOld = head.querySelector(`style[data-wptb-td-auto-width-${i}=\"true\"]`);\n\n\t\t\t\t\t\tif (cssForTdsWidthAutoOld) {\n\t\t\t\t\t\t\thead.removeChild(cssForTdsWidthAutoOld);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (styleElementCreate) {\n\t\t\t\t\t\tconst cssForTdsWidthAuto = document.createElement('style');\n\t\t\t\t\t\tcssForTdsWidthAuto.setAttribute(`data-wptb-td-auto-width-${i}`, true);\n\t\t\t\t\t\tcssForTdsWidthAuto.innerHTML = `.wptb-table-container-${i} table td[data-wptb-css-td-auto-width=true]{width:${tableTdWidthAuto}px}`;\n\t\t\t\t\t\tif (head) {\n\t\t\t\t\t\t\thead.appendChild(cssForTdsWidthAuto);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// code for adding of old css styles for correct view\n\t\tconst elements = document.getElementsByClassName('wptb-ph-element');\n\t\tfor (let i = 0; i < elements.length; i++) {\n\t\t\tconst element = elements[i];\n\t\t\tif (element.classList.contains('wptb-list-item-container')) {\n\t\t\t\telement.classList.remove('wptb-list-item-container');\n\t\t\t\telement.classList.add('wptb-list-container');\n\t\t\t}\n\n\t\t\tif (element.classList.contains('wptb-button-container')) {\n\t\t\t\tconst infArr = element.className.match(/wptb-size-([A-Z]+)/i);\n\t\t\t\tif (infArr && Array.isArray(infArr)) {\n\t\t\t\t\tconst wptbSize = infArr[0];\n\t\t\t\t\tconst wptbSizeNew = wptbSize.toLowerCase();\n\n\t\t\t\t\telement.classList.remove(wptbSize);\n\n\t\t\t\t\tconst wptbButtonWrapper = element.querySelector('.wptb-button-wrapper');\n\t\t\t\t\tif (wptbButtonWrapper) {\n\t\t\t\t\t\twptbButtonWrapper.classList.add(wptbSizeNew);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// responsive setup\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst responsiveFront = new WPTB_ResponsiveFrontend({\n\t\t\tquery: '.wptb-preview-table',\n\t\t\tbindToResize: true,\n\t\t});\n\n\t\t//sorting table\n\t\tfunction sortingTable() {\n\t\t\tlet tables = document.querySelectorAll('.wptb-preview-table');\n\t\t\tfor (let i = 0; i < tables.length; i++) {\n\t\t\t\tlet sortableTable = new WPTB_SortableTable({table: tables[i]});\n\t\t\t\tsortableTable.sortableTableInitialization(responsiveFront);\n\t\t\t}\n\t\t}\n\t\tsortingTable();\n\t\tresponsiveFront.rebuildTables();\n\n\t});\n})(jQuery);\n"]}